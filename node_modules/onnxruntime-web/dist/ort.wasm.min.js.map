{"version":3,"file":"ort.wasm.min.js","mappings":"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","sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/version.ts","webpack://ort/./lib/wasm/jsep/backend-webgpu.ts","webpack://ort/./lib/wasm/jsep/init.ts","webpack://ort/./lib/wasm/jsep/log.ts","webpack://ort/./lib/wasm/jsep/util.ts","webpack://ort/./lib/wasm/jsep/webgpu/attribute-with-cache-key.ts","webpack://ort/./lib/wasm/jsep/webgpu/gpu-data-manager.ts","webpack://ort/./lib/wasm/jsep/webgpu/op-resolve-rules.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/activation_util.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/conv2d_mm_webgpu.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/conv_util.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/matmul_packed_webgpu.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/binary-op.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/common.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv-grouped.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv2d-mm.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/fuse-utils.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/gemm.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/matmul.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/pool.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/reduce.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/transpose.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/unary-op.ts","webpack://ort/./lib/wasm/jsep/webgpu/program-manager.ts","webpack://ort/./lib/wasm/jsep/webgpu/types.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/wasm-common.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/./lib/wasm/wasm-utils.ts","webpack://ort/./lib/wasm/proxy-worker/main.ts","webpack://ort/../node_modules/worker-loader/dist/runtime/inline.js","webpack://ort/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/../common/dist/cjs/backend-impl.js","webpack://ort/../common/dist/cjs/backend.js","webpack://ort/../common/dist/cjs/env-impl.js","webpack://ort/../common/dist/cjs/env.js","webpack://ort/../common/dist/cjs/index.js","webpack://ort/../common/dist/cjs/inference-session-impl.js","webpack://ort/../common/dist/cjs/inference-session.js","webpack://ort/../common/dist/cjs/onnx-value.js","webpack://ort/../common/dist/cjs/tensor-conversion-impl.js","webpack://ort/../common/dist/cjs/tensor-factory-impl.js","webpack://ort/../common/dist/cjs/tensor-impl.js","webpack://ort/../common/dist/cjs/tensor-utils-impl.js","webpack://ort/../common/dist/cjs/tensor.js","webpack://ort/../common/dist/cjs/version.js","webpack://ort/webpack/bootstrap","webpack://ort/webpack/runtime/compat get default export","webpack://ort/webpack/runtime/define property getters","webpack://ort/webpack/runtime/hasOwnProperty shorthand","webpack://ort/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, () => {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initializeWebAssemblyInstance} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyInstance();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend, env} from 'onnxruntime-common';\nimport {version} from './version';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU && typeof navigator !== 'undefined' && navigator.gpu) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n  registerBackend('webnn', wasmBackend, 9);\n}\n\nenv.versions.web = version;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.16.0-dev.20230704-d540c7da0f';\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {configureLogger, LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {createGpuDataManager, GpuDataManager} from './webgpu/gpu-data-manager';\nimport {RunFunction, WEBGPU_OP_RESOLVE_RULES} from './webgpu/op-resolve-rules';\nimport {ProgramManager} from './webgpu/program-manager';\nimport {ComputeContext, GpuData, GpuDataType, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/**\n * get a unique key representing the program from the program info,input shapes and types.\n *\n * @returns a unique key is a shorter string than the shader source, which contains all the information to identify a\n * program. if the key is the same, the program shader source should be the same, so we can reuse the program.\n *\n */\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTensorShapes: ReadonlyArray<TensorView['dims']>,\n     inputGpuDataTypes: readonly GpuDataType[]): string => {\n      const inputTensorShapesToString = inputTensorShapes.map(d => `${d.join(',')}`).join('_');\n      const inputGpuDataTypesToString = inputGpuDataTypes.join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputTensorShapesToString + ';' + inputGpuDataTypesToString;\n      return key;\n    };\n\n/**\n * this class is designed to store status and being used as a singleton for JSEP. It will be passed to jsepInit() as\n * the first parameter so that it is stored for future use.\n */\nexport class WebGpuBackend {\n  device: GPUDevice;\n  /**\n   * an instance of GpuDataManager to manage a GpuDataId -> GpuBuffer mapping\n   */\n  gpuDataManager: GpuDataManager;\n  /**\n   * an instance of ProgramManager to build and run WebGPU compute shader program, and manage a ProgramKey -> Program\n   * artifacts mapping\n   */\n  programManager: ProgramManager;\n\n  /**\n   * representing the kernel ID of which is currently being computed (CPU code perspective).\n   * `null` means no kernel is being computed.\n   * only one kernel can be computed at a moment.\n   */\n  currentKernelId: number|null = null;\n  /**\n   * a list of temporary GPU data for the current kernel. should release when the kernel done computation.\n   */\n  private temporaryData: GpuData[];\n  /**\n   * a KernelID -> a GPU data list, which stores persistent GPU data owned by the specific kernel.\n   */\n  private kernelPersistentData: Map<number, GpuData[]>;\n  /**\n   * a KernelID -> a custom data, which stores custom data owned by the specific kernel.\n   */\n  private kernelCustomData: Map<number, {[key: string]: unknown}>;\n  /**\n   * get the custom data of the current kernel\n   */\n  get currentKernelCustomData(): {[key: string]: unknown} {\n    if (this.currentKernelId === null) {\n      throw new Error('currentKernelCustomData(): currentKernelId is null. (should not happen)');\n    }\n\n    let data = this.kernelCustomData.get(this.currentKernelId);\n    if (!data) {\n      data = {};\n      this.kernelCustomData.set(this.currentKernelId, data);\n    }\n\n    return data;\n  }\n\n  /**\n   * a KernelID -> kernel info mapping. value is [ name, run function, [optional] preprocess_attribute_once function ]\n   */\n  kernels: Map<number, [string, RunFunction, [((attribute: unknown) => unknown) | undefined, unknown]]>;\n\n  commandEncoder: GPUCommandEncoder|null = null;\n  computePassEncoder: GPUComputePassEncoder|null = null;\n  pendingDispatchNumber = 0;\n\n  profilingEnabled = false;\n  profilingQuerySet: GPUQuerySet;\n  profilingTimeBase?: bigint;\n\n  async initialize(env: Env): Promise<void> {\n    if (!navigator.gpu) {\n      // WebGPU is not available.\n      throw new Error('WebGpuBackend: WebGPU is not available.');\n    }\n\n    const adapter = await navigator.gpu.requestAdapter();\n    if (!adapter) {\n      throw new Error('WebGpuBackend: Failed to get GPU adapter.');\n    }\n\n    const deviceDescriptor: GPUDeviceDescriptor = {\n      requiredLimits: {\n        maxComputeWorkgroupStorageSize: adapter.limits.maxComputeWorkgroupStorageSize,\n        maxComputeWorkgroupsPerDimension: adapter.limits.maxComputeWorkgroupsPerDimension,\n        maxStorageBufferBindingSize: adapter.limits.maxStorageBufferBindingSize,\n      }\n    };\n    // WebGPU Spec: Timestamp Queries Inside Passes\n    // https://github.com/gpuweb/gpuweb/blob/main/proposals/timestamp-query-inside-passes.md\n    if (adapter.features.has('timestamp-query-inside-passes') && env.webgpu.profilingMode === 'default') {\n      this.profilingEnabled = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      deviceDescriptor.requiredFeatures = ['timestamp-query-inside-passes' as any];\n    }\n\n    this.device = await adapter.requestDevice(deviceDescriptor);\n    this.gpuDataManager = createGpuDataManager(this);\n    this.programManager = new ProgramManager(this);\n    this.kernels = new Map();\n    this.kernelPersistentData = new Map();\n    this.kernelCustomData = new Map();\n\n    // set up flags for logger\n    configureLogger(env.logLevel!, !!env.debug);\n\n    // TODO: set up flags\n\n    this.device.onuncapturederror = ev => {\n      if (ev.error instanceof GPUValidationError) {\n        // eslint-disable-next-line no-console\n        console.error(`An uncaught WebGPU validation error was raised: ${ev.error.message}`);\n      }\n    };\n\n    if (this.profilingEnabled) {\n      this.profilingQuerySet = this.device.createQuerySet({\n        type: 'timestamp',\n        count: 2,\n      });\n    }\n  }\n\n  dispose(): void {\n    // currently, we do not do anything in this function. In all known use cases, we don't have the requirement to\n    // actually dispose the WebGpuBackend instance, because it's always used as a singleton.\n    //\n    // revisit this place if we get real requirement to dispose the instance.\n  }\n\n  getCommandEncoder(): GPUCommandEncoder {\n    if (!this.commandEncoder) {\n      this.commandEncoder = this.device.createCommandEncoder();\n    }\n    return this.commandEncoder;\n  }\n\n  getComputePassEncoder(): GPUComputePassEncoder {\n    if (!this.computePassEncoder) {\n      this.computePassEncoder = this.getCommandEncoder().beginComputePass();\n    }\n    return this.computePassEncoder;\n  }\n\n  endComputePass(): void {\n    if (this.computePassEncoder) {\n      this.computePassEncoder.end();\n      this.computePassEncoder = null;\n    }\n  }\n\n  flush(): void {\n    this.endComputePass();\n    this.device.queue.submit([this.getCommandEncoder().finish()]);\n    this.gpuDataManager.refreshPendingBuffers();\n    this.commandEncoder = null;\n    this.pendingDispatchNumber = 0;\n  }\n\n  /**\n   * run a WebGPU program.\n   * @param program either a ProgramInfo instance containing metadata including the shader code, or a function that\n   * can be called and return a ProgramInfo instance\n   * @param inputs a TensorView array. each element represents a value already exists in GPU.\n   * @param outputIndices an indices array. each element can be either -1 (temporary data), -2 (persistent data) or an\n   * index to the kernel's output.\n   * @param createKernelOutput a callback function that create a value to kernel's output with the given index\n   * @param createIntermediateOutput a callback function that create a value as a intermediate value, either temporary\n   * or persistent (owned by the current kernel)\n   * @returns a TensorView array representing the result.\n   */\n  run(program: ProgramInfoLoader|ProgramInfo, inputs: readonly TensorView[], outputIndices: readonly number[],\n      createKernelOutput: (index: number, dataType: number, dims: readonly number[]) => TensorView,\n      createIntermediateOutput: (dataType: number, dims: readonly number[]) => TensorView): TensorView[] {\n    if (inputs.length !== program.inputTypes.length) {\n      throw new Error(`Input size must be equal to ${program.inputTypes.length}.`);\n    }\n\n    // create info for inputs\n    const inputDatas: GpuData[] = [];\n    for (let i = 0; i < inputs.length; ++i) {\n      const gpuData = this.gpuDataManager.get(inputs[i].data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for input: ${inputs[i].data}`);\n      }\n      inputDatas[i] = gpuData;\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputs.map(i => i.dims), inputDatas.map(i => i.type));\n    let artifact = this.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // check output indices\n    const validatedOutputIndices = outputIndices.length === 0 ? programInfo.outputs.map((_, i) => i) : outputIndices;\n    if (validatedOutputIndices.length !== programInfo.outputs.length) {\n      throw new Error(`Output size ${validatedOutputIndices.length} must be equal to ${programInfo.outputs.length}.`);\n    }\n\n    // create info for outputs\n    const outputTensorViews: TensorView[] = [];\n    const outputDatas: GpuData[] = [];\n    for (let i = 0; i < programInfo.outputs.length; ++i) {\n      // value -1 and -2 are used for creating temporary and persistent outputs. so -2, -1 and 0, 1, 2, ... are valid\n      // output indices. see type definition of ComputeContextInputsOutputsMapping for more details.\n      if (!Number.isInteger(validatedOutputIndices[i]) || validatedOutputIndices[i] < -2 ||\n          validatedOutputIndices[i] >= programInfo.outputs.length) {\n        throw new Error(`Invalid output index: ${validatedOutputIndices[i]}`);\n      }\n      const isTemporary = validatedOutputIndices[i] === -1;\n      const isPersistent = validatedOutputIndices[i] === -2;\n      const tensorView = (isTemporary || isPersistent) ?\n          createIntermediateOutput(programInfo.outputs[i].dataType, programInfo.outputs[i].dims) :\n          createKernelOutput(validatedOutputIndices[i], programInfo.outputs[i].dataType, programInfo.outputs[i].dims);\n      const gpuData = this.gpuDataManager.get(tensorView.data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for output: ${tensorView.data}`);\n      }\n      if (isTemporary) {\n        this.temporaryData.push(gpuData);\n      }\n      if (isPersistent) {\n        let persistentData = this.kernelPersistentData.get(this.currentKernelId!);\n        if (!persistentData) {\n          persistentData = [];\n          this.kernelPersistentData.set(this.currentKernelId!, persistentData);\n        }\n        persistentData.push(gpuData);\n      }\n      outputTensorViews.push(tensorView);\n      outputDatas.push(gpuData);\n    }\n\n    const normalizedDispatchGroup = this.programManager.normalizeDispatchGroupSize(programInfo.dispatchGroup(inputs));\n\n    if (!artifact) {\n      artifact = this.programManager.build(programInfo, normalizedDispatchGroup);\n      this.programManager.setArtifact(key, artifact);\n    }\n\n    LOG_DEBUG(\n        'info',\n        () => `[ProgramManager] run \"${programInfo.name}\" (key=${key}) with ${normalizedDispatchGroup[0]}x${\n            normalizedDispatchGroup[1]}x${normalizedDispatchGroup[2]}`);\n    this.programManager.run(artifact, inputDatas, outputDatas, normalizedDispatchGroup);\n\n    return outputTensorViews;\n  }\n\n  upload(gpuDataId: number, data: Uint8Array): void {\n    this.gpuDataManager.upload(gpuDataId, data);\n  }\n\n  memcpy(src: number, dst: number): void {\n    this.gpuDataManager.memcpy(src, dst);\n  }\n\n  async download(gpuDataId: number, getTargetBuffer: () => Uint8Array): Promise<void> {\n    const arrayBuffer = await this.gpuDataManager.download(gpuDataId);\n\n    // the underlying buffer may be changed after the async function is called. so we use a getter function to make sure\n    // the buffer is up-to-date.\n    const data = getTargetBuffer();\n    data.set(new Uint8Array(arrayBuffer, 0, data.byteLength));\n  }\n\n  alloc(size: number): number {\n    return this.gpuDataManager.create(size).id;\n  }\n\n  free(ptr: number): number {\n    return this.gpuDataManager.release(ptr);\n  }\n\n  createKernel(name: string, kernelId: number, attribute: unknown): void {\n    const op = WEBGPU_OP_RESOLVE_RULES.get(name);\n    if (!op) {\n      throw new Error(`kernel not implemented: ${name}`);\n    }\n\n    this.kernels.set(kernelId, [name, op[0], [op[1], attribute]]);\n  }\n\n  releaseKernel(kernelId: number): void {\n    const persistentData = this.kernelPersistentData.get(kernelId);\n    if (persistentData) {\n      for (const data of persistentData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.kernelPersistentData.delete(kernelId);\n    }\n\n    this.kernelCustomData.delete(kernelId);\n    this.kernels.delete(kernelId);\n  }\n\n  computeKernel(kernelId: number, context: ComputeContext): number {\n    const kernel = this.kernels.get(kernelId);\n    if (!kernel) {\n      throw new Error(`kernel not created: ${kernelId}`);\n    }\n    const [name, kernelEntry, attributes] = kernel;\n    if (this.currentKernelId !== null) {\n      throw new Error(`kernel \"${name}\" is not allowed to be called recursively`);\n    }\n    this.currentKernelId = kernelId;\n\n    // parse attributes if necessary\n    if (attributes[0]) {\n      attributes[1] = attributes[0](attributes[1]);\n      attributes[0] = undefined;\n    }\n\n    LOG_DEBUG('info', () => `[WebGPU] Start to run kernel \"${name}\"...`);\n\n    this.temporaryData = [];\n    try {\n      kernelEntry(context, attributes[1]);\n      return 0;  // ORT_OK\n    } catch (e) {\n      LOG_DEBUG('warning', `[WebGPU] Kernel \"${name}\" failed. Error: ${e}`);\n      return 1;  // ORT_FAIL\n    } finally {\n      for (const data of this.temporaryData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.temporaryData = [];\n      this.currentKernelId = null;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {OrtWasmModule} from '../binding/ort-wasm';\nimport {DataType, getTensorElementSize} from '../wasm-common';\n\nimport {WebGpuBackend} from './backend-webgpu';\nimport {LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {ShapeUtil} from './util';\nimport {ComputeContext, ComputeContextInputsOutputsMapping, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/* eslint-disable no-bitwise */\n\nclass TensorViewImpl implements TensorView {\n  constructor(\n      private module: OrtWasmModule, public readonly dataType: number, public readonly data: number,\n      public readonly dims: readonly number[]) {}\n\n  getFloat32Array(): Float32Array {\n    if (this.dataType !== DataType.float) {\n      throw new Error('Invalid data type');\n    }\n    const elementCount = ShapeUtil.size(this.dims);\n    return elementCount === 0 ? new Float32Array() :\n                                new Float32Array(this.module.HEAP8.buffer, this.data, elementCount);\n  }\n\n  getBigInt64Array(): BigInt64Array {\n    if (this.dataType !== DataType.int64) {\n      throw new Error('Invalid data type');\n    }\n    const elementCount = ShapeUtil.size(this.dims);\n    return elementCount === 0 ? new BigInt64Array() :\n                                new BigInt64Array(this.module.HEAP8.buffer, this.data, elementCount);\n  }\n\n  reshape(newDims: readonly number[]): TensorView {\n    if (ShapeUtil.size(newDims) !== ShapeUtil.size(this.dims)) {\n      throw new Error('Invalid new shape');\n    }\n    return new TensorViewImpl(this.module, this.dataType, this.data, newDims);\n  }\n}\n\nclass ComputeContextImpl implements ComputeContext {\n  readonly opKernelContext: number;\n  readonly inputs: readonly TensorView[];\n  get customData(): {[key: string]: unknown} {\n    return this.backend.currentKernelCustomData;\n  }\n  constructor(private module: OrtWasmModule, private backend: WebGpuBackend, contextDataOffset: number) {\n    const heapU32 = module.HEAPU32;\n\n    // extract context data\n    let dataIndex = (contextDataOffset >> 2);\n    this.opKernelContext = heapU32[dataIndex++];\n    const inputCount = heapU32[dataIndex++];\n\n    const inputs: TensorView[] = [];\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = heapU32[dataIndex++];\n      const data = heapU32[dataIndex++];\n      const dim = heapU32[dataIndex++];\n      const dims: number[] = [];\n      for (let d = 0; d < dim; d++) {\n        dims.push(heapU32[dataIndex++]);\n      }\n      inputs.push(new TensorViewImpl(module, dataType, data, dims));\n    }\n    this.inputs = inputs;\n  }\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[] {\n    // prepare inputs. inputs should always be valid data.\n    const mappedInputs =\n        inputsOutputsMapping?.inputs?.map(i => typeof i === 'number' ? this.inputs[i] : i) ?? this.inputs;\n    // prepare outputs.\n    const outputIndices = inputsOutputsMapping?.outputs ?? [];\n    const createKernelOutput = (index: number, dataType: number, dims: readonly number[]): TensorView =>\n        new TensorViewImpl(this.module, dataType, this.output(index, dims), dims);\n    const createTemporaryOutput = (dataType: number, dims: readonly number[]): TensorView => {\n      const elementSize = getTensorElementSize(dataType);\n      if (!elementSize) {\n        throw new Error(`Unsupported data type: ${dataType}`);\n      }\n      const bufferSize = elementSize * ShapeUtil.size(dims);\n      return new TensorViewImpl(this.module, dataType, this.backend.gpuDataManager.create(bufferSize).id, dims);\n    };\n    return this.backend.run(program, mappedInputs, outputIndices, createKernelOutput, createTemporaryOutput);\n  }\n\n  output(index: number, dims: readonly number[]): number {\n    const stack = this.module.stackSave();\n    try {\n      const data = this.module.stackAlloc((1 + dims.length) * 4 /* sizeof(size_t) */);\n      let offset = data >> 2;\n      this.module.HEAPU32[offset++] = dims.length;\n      for (let i = 0; i < dims.length; i++) {\n        this.module.HEAPU32[offset++] = dims[i];\n      }\n      return this.module._JsepOutput(this.opKernelContext, index, data);\n    } finally {\n      this.module.stackRestore(stack);\n    }\n  }\n}\n\nexport const init = async(module: OrtWasmModule, env: Env): Promise<void> => {\n  const init = module.jsepInit;\n  if (init && navigator.gpu) {\n    if (!env.wasm.simd) {\n      throw new Error(\n          'Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP');\n    }\n    const backend = new WebGpuBackend();\n    await backend.initialize(env);\n\n    init(\n        // backend\n        {backend},\n\n        // jsepAlloc()\n        (size: number) => backend.alloc(size),\n\n        // jsepFree()\n        (ptr: number) => backend.free(ptr),\n\n        // jsepCopy(src, dst, size, isSourceGpu)\n        (src: number, dst: number, size: number, isSourceGpu = false) => {\n          if (isSourceGpu) {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyGpuToGpu: src=${src}, dst=${dst}, size=${size}`);\n            backend.memcpy(src, dst);\n          } else {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyCpuToGpu: dataOffset=${src}, gpuDataId=${dst}, size=${size}`);\n            const data = module.HEAPU8.subarray(src, src + size);\n            backend.upload(dst, data);\n          }\n        },\n\n        // jsepCopyAsync(src, dst, size)\n        async(gpuDataId: number, dataOffset: number, size: number):\n            Promise<void> => {\n              LOG_DEBUG(\n                  'verbose',\n                  () => `[WebGPU] jsepCopyGpuToCpu: gpuDataId=${gpuDataId}, dataOffset=${dataOffset}, size=${size}`);\n\n              await backend.download(gpuDataId, () => module.HEAPU8.subarray(dataOffset, dataOffset + size));\n            },\n\n        // jsepCreateKernel\n        (name: string, kernel: number, attribute: unknown) => backend.createKernel(name, kernel, attribute),\n\n        // jsepReleaseKernel\n        (kernel: number) => backend.releaseKernel(kernel),\n\n        // jsepRun\n        (kernel: number, contextDataOffset: number) => {\n          LOG_DEBUG('verbose', () => `[WebGPU] jsepRun: kernel=${kernel}, contextDataOffset=${contextDataOffset}`);\n          const context = new ComputeContextImpl(module, backend, contextDataOffset);\n          return backend.computeKernel(kernel, context);\n        });\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {logLevelStringToEnum} from '../wasm-common';\n\ntype LogLevel = NonNullable<Env['logLevel']>;\ntype MessageString = string;\ntype MessageFunction = () => string;\ntype Message = MessageString|MessageFunction;\n\nconst logLevelPrefix = ['V', 'I', 'W', 'E', 'F'];\n\nconst doLog = (level: number, message: string): void => {\n  // eslint-disable-next-line no-console\n  console.log(`[${logLevelPrefix[level]},${new Date().toISOString()}]${message}`);\n};\n\nlet configLogLevel: LogLevel|undefined;\nlet debug: boolean|undefined;\n\nexport const configureLogger = ($configLogLevel: LogLevel, $debug: boolean): void => {\n  configLogLevel = $configLogLevel;\n  debug = $debug;\n};\n\n/**\n * A simple logging utility to log messages to the console.\n */\nexport const LOG = (logLevel: LogLevel, msg: Message): void => {\n  const messageLevel = logLevelStringToEnum(logLevel);\n  const configLevel = logLevelStringToEnum(configLogLevel);\n  if (messageLevel >= configLevel) {\n    doLog(messageLevel, typeof msg === 'function' ? msg() : msg);\n  }\n};\n\n/**\n * A simple logging utility to log messages to the console. Only logs when debug is enabled.\n */\nexport const LOG_DEBUG: typeof LOG = (...args: Parameters<typeof LOG>) => {\n  if (debug) {\n    LOG(...args);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable no-param-reassign */\n\nexport class MatMulUtil {\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\nexport class ShapeUtil {\n  /**\n   * calculate the size (number of elements)\n   */\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) from the given axis (inclusive)\n   */\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) to the given axis (exclusive)\n   */\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  /**\n   * calculate the size (number of elements) from and to the given axis [start, end)\n   */\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be negative.\n      if (dims[i] < 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank?: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank ?? axes.length));\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]): void {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], isChannelLast: boolean, autoPad?: string): void {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + (isChannelLast ? 1 : 2)], strides[dim], dilations[dim], kernelShape[dim], pads, dim,\n          dim + inputDims.length - 2, autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\n/**\n * create a new object from the given attribute, and add a cacheKey property to it\n */\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {GpuData, GpuDataId, GpuDataType} from './types';\n\n/**\n * manages GpuDataId -> GpuBuffer\n */\nexport interface GpuDataManager {\n  /**\n   * copy data from CPU to GPU.\n   */\n  upload(id: GpuDataId, data: Uint8Array): void;\n  /**\n   * copy data from GPU to GPU.\n   */\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void;\n  /**\n   * create new data on GPU.\n   */\n  create(size: number, usage?: number): GpuData;\n  /**\n   * get GPU data by ID.\n   */\n  get(id: GpuDataId): GpuData|undefined;\n  /**\n   * release the data on GPU by ID.\n   *\n   * @return size of the data released\n   */\n  release(id: GpuDataId): number;\n  /**\n   * copy data from GPU to CPU.\n   */\n  download(id: GpuDataId): Promise<ArrayBufferLike>;\n\n  /**\n   * refresh the buffers that marked for release.\n   *\n   * when release() is called, the buffer is not released immediately. this is because we need to wait for the commands\n   * to be submitted to the GPU. this function is called after the commands are submitted so that the buffers can be\n   * actually released.\n   */\n  refreshPendingBuffers(): void;\n}\n\ninterface StorageCacheValue {\n  gpuData: GpuData;\n  originalSize: number;\n}\n\ninterface DownloadCacheValue {\n  data: Promise<ArrayBufferLike>;\n}\n\n/**\n * normalize the buffer size so that it fits the 128-bits (16 bytes) alignment.\n */\nconst calcNormalizedBufferSize = (size: number) => Math.ceil(size / 16) * 16;\n\nlet guid = 0;\nconst createNewGpuDataId = () => guid++;\n\nclass GpuDataManagerImpl implements GpuDataManager {\n  // GPU Data ID => GPU Data ( storage buffer )\n  storageCache: Map<GpuDataId, StorageCacheValue>;\n\n  // GPU Data ID => GPU Data ( read buffer )\n  downloadCache: Map<GpuDataId, DownloadCacheValue>;\n\n  // pending buffers for uploading ( data is unmapped )\n  private buffersForUploadingPending: GPUBuffer[];\n  // pending buffers for computing\n  private buffersPending: GPUBuffer[];\n\n  constructor(private backend: WebGpuBackend /* , private reuseBuffer: boolean */) {\n    this.storageCache = new Map();\n    this.downloadCache = new Map();\n    this.buffersForUploadingPending = [];\n    this.buffersPending = [];\n  }\n\n  upload(id: GpuDataId, data: Uint8Array): void {\n    const srcArrayBuffer = data.buffer;\n    const srcOffset = data.byteOffset;\n    const srcLength = data.byteLength;\n    const size = calcNormalizedBufferSize(srcLength);\n\n    // get destination gpu buffer\n    const gpuDataCache = this.storageCache.get(id);\n    if (!gpuDataCache) {\n      throw new Error('gpu data for uploading does not exist');\n    }\n    if (gpuDataCache.originalSize !== srcLength) {\n      throw new Error(`inconsistent data size. gpu data size=${gpuDataCache.originalSize}, data size=${srcLength}`);\n    }\n\n    // create gpu buffer\n    const gpuBufferForUploading = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {mappedAtCreation: true, size, usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC});\n\n    // copy (upload) data\n    const arrayBuffer = gpuBufferForUploading.getMappedRange();\n    new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer, srcOffset, srcLength));\n    gpuBufferForUploading.unmap();\n\n\n    // GPU copy\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    commandEncoder.copyBufferToBuffer(gpuBufferForUploading, 0, gpuDataCache.gpuData.buffer, 0, size);\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.upload(id=${id})`);\n\n    this.buffersForUploadingPending.push(gpuBufferForUploading);\n  }\n\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void {\n    // get source gpu buffer\n    const sourceGpuDataCache = this.storageCache.get(sourceId);\n    if (!sourceGpuDataCache) {\n      throw new Error('source gpu data for memcpy does not exist');\n    }\n    // get destination gpu buffer\n    const destinationGpuDataCache = this.storageCache.get(destinationId);\n    if (!destinationGpuDataCache) {\n      throw new Error('destination gpu data for memcpy does not exist');\n    }\n    if (sourceGpuDataCache.originalSize !== destinationGpuDataCache.originalSize) {\n      throw new Error('inconsistent source and destination gpu data size');\n    }\n    const size = calcNormalizedBufferSize(sourceGpuDataCache.originalSize);\n\n    // GPU copy\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    commandEncoder.copyBufferToBuffer(\n        sourceGpuDataCache.gpuData.buffer, 0, destinationGpuDataCache.gpuData.buffer, 0, size);\n  }\n\n  // eslint-disable-next-line no-bitwise\n  create(size: number, usage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST): GpuData {\n    // !!!\n    // !!! IMPORTANT: TODO: whether we should keep the storage buffer every time, or always create new ones.\n    // !!!                  This need to be figured out by performance test results.\n    // !!!\n\n    const bufferSize = calcNormalizedBufferSize(size);\n\n    // create gpu buffer\n    const gpuBuffer = this.backend.device.createBuffer({size: bufferSize, usage});\n\n    const gpuData = {id: createNewGpuDataId(), type: GpuDataType.default, buffer: gpuBuffer};\n    this.storageCache.set(gpuData.id, {gpuData, originalSize: size});\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.create(size=${size}) => id=${gpuData.id}`);\n    return gpuData;\n  }\n\n  get(id: GpuDataId): GpuData|undefined {\n    return this.storageCache.get(id)?.gpuData;\n  }\n\n  release(id: GpuDataId): number {\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('releasing data does not exist');\n    }\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.release(id=${id}), gpuDataId=${cachedData.gpuData.id}`);\n\n    this.storageCache.delete(id);\n    this.buffersPending.push(cachedData.gpuData.buffer);\n    // cachedData.gpuData.buffer.destroy();\n\n    const downloadingData = this.downloadCache.get(id);\n    if (downloadingData) {\n      this.downloadCache.delete(id);\n    }\n\n    return cachedData.originalSize;\n  }\n\n  async download(id: GpuDataId): Promise<ArrayBufferLike> {\n    const downloadData = this.downloadCache.get(id);\n    if (downloadData) {\n      return downloadData.data;\n    }\n\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('data does not exist');\n    }\n\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    const bufferSize = calcNormalizedBufferSize(cachedData.originalSize);\n    const gpuReadBuffer = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {size: bufferSize, usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ});\n    commandEncoder.copyBufferToBuffer(\n        cachedData.gpuData.buffer /* source buffer */, 0 /* source offset */, gpuReadBuffer /* destination buffer */,\n        0 /* destination offset */, bufferSize /* size */\n    );\n    this.backend.flush();\n\n    const readDataPromise = new Promise<ArrayBuffer>((resolve) => {\n      gpuReadBuffer.mapAsync(GPUMapMode.READ).then(() => {\n        const data = gpuReadBuffer.getMappedRange().slice(0);\n        gpuReadBuffer.destroy();\n        resolve(data);\n      });\n    });\n\n    this.downloadCache.set(id, {data: readDataPromise});\n\n    return readDataPromise;\n  }\n\n  refreshPendingBuffers(): void {\n    for (const buffer of this.buffersForUploadingPending) {\n      buffer.destroy();\n    }\n    for (const buffer of this.buffersPending) {\n      buffer.destroy();\n    }\n  }\n}\n\nexport const createGpuDataManager = (...args: ConstructorParameters<typeof GpuDataManagerImpl>): GpuDataManager =>\n    new GpuDataManagerImpl(...args);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as binaryOps from './ops/binary-op';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {gemm, parseGemmAttributes} from './ops/gemm';\nimport {matMul} from './ops/matmul';\nimport * as pool from './ops/pool';\nimport {parseReduceAttributes, reduceL1, reduceL2, reduceLogSum, reduceLogSumExp, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum, reduceSumSquare} from './ops/reduce';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {ComputeContext} from './types';\n\nexport type RunFunction = (context: ComputeContext, attribute?: unknown) => void;\nexport type ParseAttributeFunction = (attributeRaw: unknown) => unknown;\nexport type OperatorImplementation = [RunFunction]|[RunFunction, ParseAttributeFunction];\n\nexport const WEBGPU_OP_RESOLVE_RULES: Map<string, OperatorImplementation> = new Map([\n  ['Abs', [unaryOps.abs]],\n  ['Acos', [unaryOps.acos]],\n  ['Acosh', [unaryOps.acosh]],\n  ['Add', [binaryOps.add]],\n  ['Asin', [unaryOps.asin]],\n  ['Asinh', [unaryOps.asinh]],\n  ['Atan', [unaryOps.atan]],\n  ['Atanh', [unaryOps.atanh]],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', [pool.averagePool, pool.parseAveragePoolAttributes]],\n  ['Ceil', [unaryOps.ceil]],\n  ['ClipV10', [unaryOps.clipV10]],\n  ['Clip', [unaryOps.clip]],\n  ['Conv', [conv, parseConvAttributes]],\n  ['Cos', [unaryOps.cos]],\n  ['Cosh', [unaryOps.cosh]],\n  ['Div', [binaryOps.div]],\n  ['Elu', [unaryOps.elu, unaryOps.parseAlphaAttributes]],\n  ['Erf', [unaryOps.erf]],\n  ['Exp', [unaryOps.exp]],\n  ['Floor', [unaryOps.floor]],\n  ['Gemm', [gemm, parseGemmAttributes]],\n  ['GlobalAveragePool', [pool.globalAveragePool, pool.parseGlobalAveragePoolAttributes]],\n  ['GlobalMaxPool', [pool.globalMaxPool, pool.parseGlobalMaxPoolAttributes]],\n  ['LeakyRelu', [unaryOps.leakyRelu, unaryOps.parseAlphaAttributes]],\n  ['MatMul', [matMul]],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', [pool.maxPool, pool.parseMaxPoolAttributes]],\n  ['Mul', [binaryOps.mul]],\n  ['Neg', [unaryOps.neg]],\n  ['Pow', [binaryOps.pow]],\n  ['Reciprocal', [unaryOps.reciprocal]],\n  ['ReduceMin', [reduceMin, parseReduceAttributes]],\n  ['ReduceMean', [reduceMean, parseReduceAttributes]],\n  ['ReduceMax', [reduceMax, parseReduceAttributes]],\n  ['ReduceSum', [reduceSum, parseReduceAttributes]],\n  ['ReduceProd', [reduceProd, parseReduceAttributes]],\n  ['ReduceL1', [reduceL1, parseReduceAttributes]],\n  ['ReduceL2', [reduceL2, parseReduceAttributes]],\n  ['ReduceLogSum', [reduceLogSum, parseReduceAttributes]],\n  ['ReduceLogSumExp', [reduceLogSumExp, parseReduceAttributes]],\n  ['ReduceSumSquare', [reduceSumSquare, parseReduceAttributes]],\n  ['Relu', [unaryOps.relu]],\n  ['Sigmoid', [unaryOps.sigmoid]],\n  ['Sin', [unaryOps.sin]],\n  ['Sinh', [unaryOps.sinh]],\n  ['Sqrt', [unaryOps.sqrt]],\n  ['Sub', [binaryOps.sub]],\n  ['Tan', [unaryOps.tan]],\n  ['Tanh', [unaryOps.tanh]],\n  ['ThresholdedRelu', [unaryOps.thresholdedRelu, unaryOps.parseAlphaAttributes]],\n  ['Transpose', [transpose, parseTransposeAttributes]],\n]);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/activation_util.ts\n//\n// modified to fit the needs of the project\n\nexport declare type Activation = 'linear' | 'relu' | 'prelu' | 'elu' | 'relu6' | 'leakyrelu' | 'sigmoid';\n\nexport const typeSnippet = (component: number) => {\n  switch (component) {\n    case 1:\n      return 'f32';\n    case 2:\n      return 'vec2<f32>';\n    case 3:\n      return 'vec3<f32>';\n    case 4:\n      return 'vec4<f32>';\n    default:\n      throw new Error(`${component}-component is not supported.`);\n  }\n};\n\nexport const activationFnSnippet =\n    (activation?: Activation, _hasPreluActivationWeights = false, _packed = false, _coordsLength = 3): string => {\n      if (!activation) {\n        return '';\n      }\n\n      // TODO: add implementations\n      return '';\n    };\n\nexport const biasActivationSnippet = (hasBias: boolean, activation?: Activation): string => `\n      ${hasBias ? 'value = value + getBiasByOutputCoords(coords);' : ''}\n      ${activation ? 'value = activation(value, coords);' : ''}\n      `;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/conv2d_mm_webgpu.ts\n//\n// modified to fit the needs of the project\n\nimport {LOG_DEBUG} from '../../../log';\nimport {TensorView} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {GpuDataType, ProgramInfo, ProgramMetadata} from '../../types';\nimport {ConvAttributes} from '../conv';\n\nimport {Activation, activationFnSnippet, biasActivationSnippet, typeSnippet} from './activation_util';\nimport {utilFunctions} from './conv_util';\nimport {makeMatMulPackedSource, makeMatMulPackedVec4Source} from './matmul_packed_webgpu';\n\nconst conv2dCommonSnippet =\n    (isChannelsLast: boolean, fitAOuter: boolean, fitBOuter: boolean, fitInner: boolean, addBias = false,\n     activation?: Activation, hasPreluActivationWeights = false, innerElementSizeX = 4, innerElementSizeW = 4,\n     innerElementSize = 4): string => {\n      const getXSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'resData = x[xIndex];';\n          case 3:\n            return 'resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);';\n          case 4:\n            return 'resData = x[xIndex / 4];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const getWSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'return w[row * wShape[3] + colIn];';\n          case 4:\n            return 'return w[row * wShape[3] / 4 + colIn];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const coordASnippet = isChannelsLast ? `\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ` :\n                                             `\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `;\n\n      const coordResSnippet = isChannelsLast ? `\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ` :\n                                               `\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `;\n\n      const xHeight = isChannelsLast ? 'xShape[1]' : 'xShape[2]';\n      const xWidth = isChannelsLast ? 'xShape[2]' : 'xShape[3]';\n      const row = isChannelsLast ? 'row' : 'col';\n      const col = isChannelsLast ? 'col' : 'row';\n      const readXSnippet = `\n    let inChannels = wShape[2];\n    let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n    let outRow = ${row} / outWidth;\n    let outCol = ${row} % outWidth;\n\n    let WRow = ${col} / (filterDims[1] * inChannels);\n    let WCol = ${col} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${col} % inChannels;\n    var resData = ${typeSnippet(innerElementSizeX)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${xHeight} && xCol >= 0 && xCol < ${xWidth}) {\n      ${coordASnippet}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${getXSnippet(innerElementSizeX)}\n    }\n    return resData;`;\n\n      const sampleX = isChannelsLast ? (fitAOuter && fitInner ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimAOuter && col < dimInner) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`) :\n                                       (fitInner && fitBOuter ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimInner && col < dimBOuter) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`);\n\n      const sampleW = `${getWSnippet(innerElementSizeW)}`;\n\n      const resType = typeSnippet(innerElementSize);\n      const aType = isChannelsLast ? typeSnippet(innerElementSizeX) : typeSnippet(innerElementSizeW);\n      const bType = isChannelsLast ? typeSnippet(innerElementSizeW) : typeSnippet(innerElementSizeX);\n      const userCode = `\n    ${activationFnSnippet(activation, hasPreluActivationWeights, innerElementSize === 4, 4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${aType} {\n      ${isChannelsLast ? sampleX : sampleW}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${bType} {\n      ${isChannelsLast ? sampleW : sampleX}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${resType}) {\n      let col = colIn * ${innerElementSize};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n      ${coordResSnippet}\n      ${biasActivationSnippet(addBias, activation)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`;\n      return userCode;\n    };\n\nexport const createConv2DMatMulProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     outputShape: readonly number[], dimAOuter: number, dimBOuter: number, dimInner: number, hasBias: boolean,\n     sequentialAccessByThreads: boolean): ProgramInfo => {\n      const isChannelsLast = attributes.format === 'NHWC';\n      const inChannels = isChannelsLast ? inputs[0].dims[3] : inputs[0].dims[1];\n      const batchSize = outputShape[0];\n      const outWidth = isChannelsLast ? outputShape[2] : outputShape[3];\n      const outHeight = isChannelsLast ? outputShape[1] : outputShape[2];\n      const outChannels = isChannelsLast ? outputShape[3] : outputShape[1];\n      const isVec4 = (((inChannels % 4 === 0 || inChannels % 3 === 0) && isChannelsLast) ||\n                      (outWidth % 4 === 0 && !isChannelsLast)) &&\n          outChannels % 4 === 0;\n\n      // TODO: fine tune size\n      const dispatchX = isChannelsLast ? outChannels : outWidth * outHeight;\n      const dispatchY = isChannelsLast ? outWidth * outHeight : outChannels;\n      const workGroupSize: [number, number, number] =\n          isVec4 ? [8, 8, 1] : [dispatchX <= 4 ? 4 : 16, dispatchX > 4 && dispatchY <= 4 ? 4 : 16, 1];\n      const elementsPerThread =\n          isVec4 ? [4, 4, 1] : [dispatchX <= 4 ? 1 : 2, dispatchX > 4 && dispatchY <= 4 ? 1 : 2, 1];\n      const dispatch = [\n        Math.ceil(dispatchX / workGroupSize[0] / elementsPerThread[0]),\n        Math.ceil(dispatchY / workGroupSize[1] / elementsPerThread[1]),\n        Math.ceil(batchSize / workGroupSize[2] / elementsPerThread[1])\n      ];\n\n      LOG_DEBUG('verbose', () => `[conv2d_mm_webgpu] dispatch = ${dispatch}`);\n\n      const innerElementSize = isVec4 ? (isChannelsLast && inChannels % 4 !== 0 ? 3 : 4) : elementsPerThread[0];\n\n      const tileAOuter = workGroupSize[1] * elementsPerThread[1];\n      const tileBOuter = workGroupSize[0] * elementsPerThread[0];\n      const tileInner = Math.max(workGroupSize[0] * innerElementSize, workGroupSize[1]);\n\n      const fitAOuter = dimAOuter % tileAOuter === 0;\n      const fitBOuter = dimBOuter % tileBOuter === 0;\n      const fitInner = dimInner % tileInner === 0;\n\n      const elementsSize = isVec4 ? [innerElementSize, 4, 4] : [1, 1, 1];\n\n      const declareInputs = [\n        `@group(0) @binding(0) var<storage, read> x: array<${isVec4 && innerElementSize === 4 ? 'vec4<f32>' : 'f32'}>;`,\n        `@group(0) @binding(1) var<storage, read> w: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`\n      ];\n      let declareFunctions = `\n      fn setOutputAtIndex(flatIndex : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        result[flatIndex] = ${isVec4 ? 'vec4<f32>' : 'f32'}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${isVec4 ? '/ 4' : ''}, value);\n      }`;\n      if (hasBias) {\n        declareInputs.push(`@group(0) @binding(2) var<storage, read> bias: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`);\n        declareFunctions += `\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${isVec4 ? 'vec4<f32>' : 'f32'} {\n          return bias[coords.${isChannelsLast ? 'w' : 'y'}${isVec4 ? '/ 4' : ''}];\n        }`;\n      }\n\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () => ({x: dispatch[0], y: dispatch[1], z: dispatch[2]}),\n        getShaderSource: () => `\n        ${utilFunctions}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${declareInputs.join('')}\n        @group(0) @binding(${declareInputs.length}) var<storage, read_write> result: array<${\n            isVec4 ? 'vec4<f32>' : 'f32'}>;\n        //@group(0) @binding(${declareInputs.length + 1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${inputs[0].dims.join(',')});\n        const wShape : vec4<i32> = vec4<i32>(${inputs[1].dims.join(',')});\n        const outShape : vec4<i32> = vec4<i32>(${outputShape.join(',')});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${ShapeUtil.computeStrides(outputShape).slice(0, 3).join(',')});\n        const filterDims : vec2<i32> = vec2<i32>(${attributes.kernelShape[0]}, ${attributes.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${attributes.pads[0]}, ${attributes.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${attributes.strides[0]}, ${attributes.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${attributes.dilations[0]}, ${attributes.dilations[1]});\n        const dimAOuter : i32 = ${dimAOuter};\n        const dimBOuter : i32 = ${dimBOuter};\n        const dimInner : i32 = ${dimInner};\n        ${declareFunctions}\n        ${\n            conv2dCommonSnippet(\n                isChannelsLast, fitAOuter, fitBOuter, fitInner, hasBias, undefined, false, elementsSize[0],\n                elementsSize[1], elementsSize[2])}\n            ${\n            isVec4 ? makeMatMulPackedVec4Source(elementsPerThread, workGroupSize, !isChannelsLast, tileInner) :\n                     makeMatMulPackedSource(\n                         elementsPerThread, workGroupSize, !isChannelsLast, tileInner, false, undefined,\n                         sequentialAccessByThreads)}`\n      };\n    };\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-core/src/ops/conv_util.ts\n//\n// modified to fit the needs of the project\n\nexport const utilFunctions = `\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n`;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/matmul_packed_webgpu.ts\n//\n// modified to fit the needs of the project\n\nconst writeDataToSubAVec4Snippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol);\n        `;\n\n  } else {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol);\n        `;\n  }\n};\n\nconst calculateResultSnippet = (transposeA: boolean, innerElementSize: number) => {\n  if (transposeA) {\n    return `\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${innerElementSize === 3 ? '' : 'let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];'}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached3[i] + acc[i];'}\n        }`;\n  } else {\n    return `\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached.w + acc[i];'}\n        }`;\n  }\n};\n\nexport const makeMatMulPackedVec4Source =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, isVectorA = false): string => {\n      const tileAOuter = workgroupSize[1] * workPerThread[1];\n      const tileBOuter = workgroupSize[0] * workPerThread[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n      const innerElementSize = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n\n      if (!(((transposeA && innerElementSize === 4 && workPerThread[1] === 4) ||\n             (!transposeA && (innerElementSize === 3 || innerElementSize === 4))) &&\n            tileAWidth % workgroupSize[0] === 0 && tileInner % workgroupSize[1] === 0 && workPerThread[0] === 4)) {\n        throw new Error(`If transposeA ${transposeA} is true, innerElementSize ${\n            innerElementSize} and workPerThread[1] ${workPerThread[1]} must be 4.\n      Otherwise, innerElementSize ${innerElementSize} must be 3 or 4.\n  tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${workgroupSize[0]}. tileInner ${\n            tileInner} must be divisible by workgroupSize[1] ${workgroupSize[1]}. colPerThread ${\n            workPerThread[0]} must be 4.`);\n      }\n      return `\nvar<workgroup> mm_Asub : array<array<vec${innerElementSize}<f32>, ${tileAWidth / innerElementSize}>, ${tileAHight}>;\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${tileBOuter / workPerThread[0]}>, ${tileInner}>;\n\nconst rowPerThread = ${workPerThread[1]};\nconst colPerThread = ${workPerThread[0]};\nconst innerElementSize = ${innerElementSize};\nconst tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = ${isVectorA ? '0' : 'localRow * rowPerThread'};\n  let tileCol = i32(localId.x);\n\n  let globalRow = ${isVectorA ? '0' : 'i32(globalId.y) * rowPerThread'};\n  let globalCol = i32(globalId.x);\n  let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n  let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\n  let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n  var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n  var acc: array<vec4<f32>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${rowPerThreadB};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${writeDataToSubAVec4Snippet(transposeA)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${innerElementSize === 3 ? '' : 'let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];'}\n\n          ${calculateResultSnippet(transposeA, innerElementSize)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`;\n    };\n\nconst writeDataToSubASnippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol);\n            `;\n\n  } else {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol);\n            `;\n  }\n};\n\nconst readDataFromSubASnippet = (transposeA: boolean) =>\n    transposeA ? 'let ACached = mm_Asub[k][tileRow + innerRow];' : 'let ACached = mm_Asub[tileRow + innerRow][k];';\n\n// sequentialAccessByThreads means sequential data in memory is accessed by\n// threads, instead of a single thread (default behavior).\nexport const makeMatMulPackedSource =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, sequentialAccessByThreads = false): string => {\n      const tileAOuter = workPerThread[1] * workgroupSize[1];\n      const tileBOuter = workPerThread[0] * workgroupSize[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n\n      if (!(tileAHight % workgroupSize[1] === 0 && tileAWidth % workgroupSize[0] === 0 &&\n            tileInner % workgroupSize[1] === 0)) {\n        throw new Error(`tileAHight ${tileAHight} must be divisible by workgroupSize[1]${\n            workgroupSize[1]}, tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${\n            workgroupSize[0]}, tileInner ${tileInner} must be divisible by workgroupSize[1]${workgroupSize[1]}`);\n      }\n      const rowPerThreadA = tileAHight / workgroupSize[1];\n      const colPerThreadA = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n      const matmulSnippet = sequentialAccessByThreads ?\n          `\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n    let globalColStart = i32(workgroupId.x) * ${tileBOuter};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${tileAHight}; inputRow = inputRow + ${workgroupSize[1]}) {\n        for (var inputCol = localCol; inputCol < ${tileAWidth}; inputCol = inputCol + ${workgroupSize[0]}) {\n          ${writeDataToSubASnippet(transposeA)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${tileInner}; inputRow = inputRow + ${workgroupSize[1]}) {\n            for (var inputCol = localCol; inputCol < ${tileBOuter}; inputCol = inputCol + ${workgroupSize[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol);\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<f32, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${workgroupSize[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${\n              transposeA ? `mm_Asub[k][localRow + innerRow * ${workgroupSize[1]}];` :\n                           `mm_Asub[localRow + innerRow * ${workgroupSize[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${workgroupSize[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${workgroupSize[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    ` :\n          `\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\nlet tileRowA = i32(localId.y) * ${rowPerThreadA};\nlet tileColA = i32(localId.x) * ${colPerThreadA};\nlet tileRowB = i32(localId.y) * ${rowPerThreadB};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadA}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${colPerThreadA}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${writeDataToSubASnippet(transposeA)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol);\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<f32, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${readDataFromSubASnippet(transposeA)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;\n\n      return `\n  var<workgroup> mm_Asub : array<array<f32, ${tileAWidth}>, ${tileAHight}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${tileBOuter}>, ${tileInner}>;\n  const rowPerThread = ${workPerThread[1]};\n  const colPerThread = ${workPerThread[0]};\n  const tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n    let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n    var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${matmulSnippet}\n  }\n`;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype BinaryCustomExpression = (expressionA: string, expressionB: string) => string;\ntype BinaryFunctionCall = BuiltinFunctionName|BinaryCustomExpression|{\n  scalar: BinaryCustomExpression;\n  vector: BinaryCustomExpression;\n};\n\nconst createBinaryOpProgramShader =\n    (shaderHelper: ShaderHelper, dimsA: readonly number[], dimsB: readonly number[], dimsOutput: readonly number[],\n     vectorize: boolean, doBroadcast: boolean, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     typeA = 'f32', typeB = 'f32', typeOutput = 'f32') => {\n      const outputSize = ShapeUtil.size(dimsOutput);\n      const vecSize = Math.ceil(outputSize / 4);\n\n      let expressionScalar: BinaryCustomExpression;\n      let expressionVector: BinaryCustomExpression;\n      if (typeof funcCall === 'string') {\n        expressionScalar = expressionVector = (a, b) => `${funcCall}((${a}),(${b}))`;\n      } else if (typeof funcCall === 'function') {\n        expressionScalar = expressionVector = funcCall;\n      } else {\n        expressionScalar = funcCall.scalar;\n        expressionVector = funcCall.vector;\n      }\n\n      let broadcastImpl = '';\n      const outputIndicesHelper = createIndicesHelper('output', dimsOutput);\n      if (doBroadcast) {\n        const calcOffsetImpl = (dims: readonly number[]) => {\n          const strides = ShapeUtil.computeStrides(dims);\n          const offsets: string[] = [];\n          for (let i = dims.length - 1; i >= 0; i--) {\n            const idx = dimsOutput.length === 0 ? '0u' :\n                (dimsOutput.length === 1)       ? '(*outputIndices)' :\n                                                  `(*outputIndices)[${i + dimsOutput.length - dims.length}]`;\n            offsets.push(`${strides[i]}u * (${idx} % ${dims[i]}u)`);\n          }\n          return offsets.length > 0 ? offsets.join('+') : '0u';\n        };\n\n        broadcastImpl = `\n  ${outputIndicesHelper.o2iImpl}\n\n  fn calcOffsetA(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsA)};\n  }\n\n  fn calcOffsetB(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsB)};\n  }\n  `;\n      }\n\n      let assignment: string;\n      if (vectorize) {\n        if (doBroadcast) {\n          assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${outputIndicesHelper.o2iCall('global_idx * 4u', 'outputIndices')}\n      let offsetA = calcOffsetA(&outputIndices);\n      let offsetB = calcOffsetB(&outputIndices);\n      outputData[global_idx] = ${expressionVector('aData[offsetA / 4u]', 'bData[offsetB / 4u]')};`;\n        } else {\n          assignment = `outputData[global_idx] = ${expressionVector('aData[global_idx]', 'bData[global_idx]')};`;\n        }\n      } else {\n        if (!doBroadcast) {\n          throw new Error('no necessary to use scalar implementation for element-wise binary op implementation.');\n        }\n        const singleAssignment = (x: number) => {\n          const expressionA = `aData[indexA${x}][componentA${x}]`;\n          const expressionB = `bData[indexB${x}][componentB${x}]`;\n          return `\n      ${outputIndicesHelper.o2iCall(`global_idx * 4u + ${x}u`, 'outputIndices')}\n      let offsetA${x} = calcOffsetA(&outputIndices);\n      let offsetB${x} = calcOffsetB(&outputIndices);\n      let indexA${x} = offsetA${x} / 4u;\n      let indexB${x} = offsetB${x} / 4u;\n      let componentA${x} = offsetA${x} % 4u;\n      let componentB${x} = offsetB${x} % 4u;\n      outputData[global_idx][${x}] = ${expressionScalar(expressionA, expressionB)};`;\n        };\n\n        assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${singleAssignment(0)}\n      ${singleAssignment(1)}\n      ${singleAssignment(2)}\n      ${singleAssignment(3)}`;\n      }\n\n      return `\n  @group(0) @binding(0) var<storage, read> aData : array<vec4<${typeA}>>;\n  @group(0) @binding(1) var<storage, read> bData : array<vec4<${typeB}>>;\n  @group(0) @binding(2) var<storage, read_write> outputData : array<vec4<${typeOutput}>>;\n\n  ${additionalImplementation ?? ''}\n  ${broadcastImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n    ${assignment}\n  }`;\n    };\n\nconst createBinaryOpProgramInfo =\n    (metadata: ProgramMetadata, a: TensorView, b: TensorView, funcCall: BinaryFunctionCall,\n     additionalImplementation?: string, outputDataType: number = a.dataType): ProgramInfo => {\n      const isBroadcast = !ShapeUtil.areEqual(a.dims, b.dims);\n      let outputShape = a.dims;\n      let outputSize = ShapeUtil.size(a.dims);\n\n      let vectorize = false;\n\n      // TODO: deal with zero-sized tensors (eg. dims=[1,0])\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(a.dims, b.dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        outputSize = ShapeUtil.size(outputShape);\n\n        // check whether vectorize can be enabled\n        let sharedDimension = 1;\n        for (let i = 0; i < outputShape.length; i++) {\n          const dimA = a.dims[a.dims.length - i] ?? 1;\n          const dimB = b.dims[b.dims.length - i] ?? 1;\n          if (dimA === dimB) {\n            sharedDimension *= dimA;\n          } else {\n            break;\n          }\n        }\n        if (sharedDimension % 4 === 0) {\n          vectorize = true;\n        }\n\n\n      } else {\n        // element-wise\n        vectorize = true;\n      }\n\n      return {\n        ...metadata,\n        getShaderSource: (shaderHelper) => createBinaryOpProgramShader(\n            shaderHelper, a.dims, b.dims, outputShape, vectorize, isBroadcast, funcCall, additionalImplementation),\n        outputs: [{dims: outputShape, dataType: outputDataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () =>\n            ({x: Math.ceil(outputSize / 64 /* workgroup size */ / (vectorize ? 4 : 1) /* vec size */)})\n      };\n    };\n\nconst createBinaryOpProgramInfoLoader =\n    (inputs: readonly TensorView[], name: string, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata:\n          ProgramMetadata = {name, inputTypes: [GpuDataType.default, GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createBinaryOpProgramInfo(metadata, inputs[0], inputs[1], funcCall, additionalImplementation)\n      };\n    };\n\nexport const add = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Add', (a, b) => `${a}+${b}`));\n};\n\nexport const div = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Div', (a, b) => `${a}/${b}`));\n};\n\nexport const mul = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Mul', (a, b) => `${a}*${b}`));\n};\n\nexport const pow = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(\n      context.inputs, 'Pow', ({scalar: (a, b) => `pow_f32(${a},${b})`, vector: (a, b) => `pow_vf32(${a},${b})`}), `\n    fn pow_f32(a : f32, b : f32) -> f32 {\n      if (b == 0.0) {\n        return 1.0;\n      } else if (a < 0.0 && b != floor(b)) {\n        return pow(a, b); // NaN\n      }\n      return select(sign(a), 1.0, round(abs(b) % 2.0) != 1.0) * pow(abs(a), b);\n    }\n    fn pow_vf32(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\n      // TODO: implement vectorized pow\n      return vec4<f32>(pow_f32(a.x, b.x), pow_f32(a.y, b.y), pow_f32(a.z, b.z), pow_f32(a.w, b.w));\n    }\n      `));\n};\n\nexport const sub = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Sub', (a, b) => `${a}-${b}`));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\n/**\n * constant value for a workgroup size.\n *\n * We definitely can do further optimization in future, but for now we use 64.\n *\n * rule of thumb: Use [a workgroup size of] 64 unless you know what GPU you are targeting or that your workload\n *                needs something different.\n *\n * from: https://surma.dev/things/webgpu/\n **/\nexport const WORKGROUP_SIZE = 64;\n\nexport interface IndicesHelper {\n  /**\n   * WGSL code of function implementation for offset-to-indices\n   */\n  o2iImpl: string;\n  /**\n   * WGSL code of function call for offset-to-indices\n   */\n  o2iCall: (varOffset: string, varIndices: string) => string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   */\n  i2oImpl: string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   *\n   * @param isPtr - whether the variable is a pointer. default is false.\n   */\n  i2oExpression: (varIndices: string, isPtr?: boolean) => string;\n  /**\n   * WGSL code of indices variable declaration\n   *\n   * @param v - variable name.\n   * @param init - initial value.\n   */\n  indicesVariableDeclaration: (v: string, init?: string[]) => string;\n  /**\n   * data type of indices\n   */\n  iType: string;\n}\n\nexport const createIndicesHelper = (name: string, shape: readonly number[]): IndicesHelper => {\n  const iType = shape.length < 2 ? 'u32' : `array<u32, ${shape.length}>`;\n\n  const strides = ShapeUtil.computeStrides(shape);\n  let o2iSnippet = '';\n  for (let i = 0; i < shape.length - 1; i++) {\n    o2iSnippet += `\n    let dim${i} = current / ${strides[i]}u;\n    let rest${i} = current % ${strides[i]}u;\n    (*indices)[${i}] = dim${i};\n    current = rest${i};\n    `;\n  }\n  o2iSnippet += `(*indices)[${shape.length - 1}] = current;`;\n\n  const o2iImpl = shape.length < 2 ? '' : `\n  fn ih_o2i_${name}(offset: u32, indices: ptr<function, ${iType}>) {\n    var current = offset;\n    ${o2iSnippet}\n  }`;\n\n  const o2iCall = (varOffset: string, varIndices: string) =>\n      shape.length < 2 ? `${varIndices}=${varOffset};` : `ih_o2i_${name}(${varOffset}, &${varIndices});`;\n\n  const offsets: string[] = [];\n  if (shape.length === 0) {\n    offsets.push('0u');\n  } else if (shape.length < 2) {\n    offsets.push('(*indices)');\n  } else {\n    for (let i = shape.length - 1; i >= 0; i--) {\n      offsets.push(`${strides[i]}u * ((*indices)[${i}])`);\n    }\n  }\n\n  const i2oImpl = shape.length < 2 ? '' : `\n  fn ih_i2o_${name}(indices: ptr<function, ${iType}>) -> u32 {\n    return ${offsets.join('+')};\n  }`;\n\n  const i2oExpression = (varIndices: string, isPtr?: boolean) =>\n      shape.length < 2 ? `(${isPtr ? '*' : ''}${varIndices})` : `ih_i2o_${name}(${isPtr ? '' : '&'}${varIndices})`;\n\n  const indicesVariableDeclaration = (v: string, init?: string[]) =>\n      `var ${v}:${iType}${init ? `=${iType}(${init.join(',')})` : ''};`;\n\n  return {o2iImpl, o2iCall, i2oImpl, i2oExpression, indicesVariableDeclaration, iType};\n};\n\n/**\n * A ShaderHelper is a helper class for generating WGSL code.\n */\nexport interface ShaderHelper {\n  mainStart(workgroupSize?: number|[number, number, number]): string;\n  guardAgainstOutOfBoundsWorkgroupSizes(size: unknown): string;\n}\n\nclass ShaderHelperImpl implements ShaderHelper {\n  constructor(private normalizedDispatchGroup: [number, number, number]) {}\n  guardAgainstOutOfBoundsWorkgroupSizes(size: number|string): string {\n    // Guard against out-of-bounds work group sizes\n    const sizeInCode = typeof size === 'number' ? `${size}u` : size;\n    return `if (global_idx >= ${sizeInCode}) { return; }`;\n  }\n  mainStart(workgroupSize: number|[number, number, number] = WORKGROUP_SIZE) {\n    const workgroupSizeX = typeof workgroupSize === 'number' ? workgroupSize : workgroupSize[0];\n    const workgroupSizeY = typeof workgroupSize === 'number' ? 1 : workgroupSize[1];\n    const workgroupSizeZ = typeof workgroupSize === 'number' ? 1 : workgroupSize[2];\n\n    const is1DimensionDispatch = this.normalizedDispatchGroup[1] === 1 && this.normalizedDispatchGroup[2] === 1;\n    const paramList = is1DimensionDispatch ? '@builtin(global_invocation_id) global_id : vec3<u32>' :\n                                             `@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>`;\n    const globalIdxDefinition = is1DimensionDispatch ?\n        'let global_idx = global_id.x;' :\n        `let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0] * this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${\n            workgroupSizeX * workgroupSizeY * workgroupSizeZ}u + local_index;`;\n\n    return `@compute @workgroup_size(${workgroupSizeX}, ${workgroupSizeY}, ${workgroupSizeZ})\n  fn main(${paramList}) {\n    ${globalIdxDefinition}\n  `;\n  }\n}\n\nexport const createShaderHelper = (dispatchGroup: [number, number, number]): ShaderHelper =>\n    new ShaderHelperImpl(dispatchGroup);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createGroupedConvProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += b[output_channel];' : '';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n\n      const dataType = 'f32';  // TODO: support other data type\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> x : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> w : array<${dataType}>;`\n      ];\n      if (hasBias) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> b : array<${dataType}>;`);\n      }\n\n      const isChannelLast = attributes.format === 'NHWC';\n      const outputShape = calculateOutputShape(\n          xShape, wShape, attributes.dilations, attributes.pads, attributes.strides, isChannelLast);\n      const outputSize = ShapeUtil.size(outputShape);\n      const outputIndicesHelper = createIndicesHelper('output', outputShape);\n      const xIndicesHelper = createIndicesHelper('x', xShape);\n      const wIndicesHelper = createIndicesHelper('w', wShape);\n\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const strides: vec2<u32> = vec2(${attributes.strides[0]}u, ${attributes.strides[1]}u);\n  const pads: vec2<u32> = vec2(${attributes.pads[0]}u, ${attributes.pads[1]}u);\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputStorageBuffersDeclarations.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n  ${outputIndicesHelper.o2iImpl}\n  ${xIndicesHelper.i2oImpl}\n  ${wIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'outputIndices')}\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${isChannelLast ? 3 : 1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${isChannelLast ? 1 : 2}], outputIndices[${\n          isChannelLast ? 2 : 3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${outputChannelsPerGroup}u;\n\n    var value: ${dataType} = ${dataType}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${wShape[1]}u; wInChannel++) {\n      let input_channel = group_id * ${wShape[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${wShape[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${xShape[isChannelLast ? 1 : 2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${wShape[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${xShape[isChannelLast ? 2 : 3]}u) {\n            continue;\n          }\n\n          ${\n          xIndicesHelper.indicesVariableDeclaration(\n              'xIndices',\n              isChannelLast ? ['batch', 'xHeight', 'xWidth', 'input_channel'] :\n                              [\n                                'batch', 'input_channel', 'xHeight', 'xWidth'\n                              ])}\n          let xVal = x[${xIndicesHelper.i2oExpression('xIndices')}];\n          ${\n          wIndicesHelper.indicesVariableDeclaration('wIndices', [\n            'output_channel', 'wInChannel', 'wHeight', 'wWidth'\n          ])}\n          let wVal = w[${wIndicesHelper.i2oExpression('wIndices')}];\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n      return {\n        ...metadata,\n        outputs: [{\n          dims: squeezeOutputShapeFunction ? squeezeOutputShapeFunction(outputShape) : outputShape,\n          dataType: inputs[0].dataType,\n          gpuDataType: GpuDataType.default\n        }],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\n/**\n * naive grouped conv implementation, supports 1d/2d conv\n * @param squeezeOutputShapeFunction - an optional function to squeeze the output shape, only used in conv1d\n */\nexport const createGroupedConvProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfoLoader => {\n      const metadata = createGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createGroupedConvProgramInfo(inputs, metadata, attributes, squeezeOutputShapeFunction)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext} from '../types';\n\nimport {createGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {createConv2DMatMulProgramInfoLoader} from './conv2d-mm';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createTransposeProgramInfo, TransposeAttributes, transposeProgramMetadata} from './transpose';\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[], isChannelLast: boolean): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(isChannelLast ? 1 : 2, isChannelLast ? 3 : 4);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      outputShape.splice(0, 0, batchSize);\n      outputShape.splice(isChannelLast ? 3 : 1, 0, outChannels);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly format: 'NHWC'|'NCHW';\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n  readonly wIsConst: boolean;\n}\n\n// for transposing weight tensor from [M, C/group, KH, KW] to [KH, KW, C/group, M]\nconst weightTransposeAttribute: TransposeAttributes = createAttributeWithCacheKey({perm: [2, 3, 1, 0]});\n\nconst validateInputs = (inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 && inputs[0].dims.length !== 3) {\n    throw new Error('currently only support conv 1D and 2D');\n  }\n\n  if (inputs[0].dims.length !== inputs[1].dims.length) {\n    throw new Error('filter does not have same dimension as input');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[attributes.format === 'NHWC' ? inputs[0].dims.length - 1 : 1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].dataType !== DataType.float) {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: readonly TensorView[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  for (let i = 2; i < inputs[1].dims.length; ++i) {\n    if (kernelShape[i - 2] === 0) {\n      kernelShape[i - 2] = inputs[1].dims[i];\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.format === 'NHWC',\n      attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes = (attributes: Record<string, unknown>): ConvAttributes => {\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const format = attributes.format as 'NHWC' | 'NCHW';\n  const autoPad = ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number];\n  const dilations = attributes.dilations as [number, number];\n  const group = attributes.group as number;\n  const kernelShape = attributes.kernel_shape as [number, number];\n  const pads = attributes.pads as [number, number, number, number];\n  const strides = attributes.strides as [number, number];\n  const wIsConst = (attributes.w_is_const as () => boolean)();\n\n  return createAttributeWithCacheKey(\n      {autoPad, format, dilations, group, kernelShape, pads, strides, wIsConst, ...activationAttributes});\n};\n\nconst conv2d = (context: ComputeContext, inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n\n  // check attributes\n\n  const hasBias = inputs.length === 3;\n  // const hasPreluActivationWeights = false; /* TODO: add support for prelu activation weights */\n  const isChannelsLast = attributes.format === 'NHWC';\n\n  // const batchSize = context.inputs[0].dims[0];\n  const inputHeight = inputs[0].dims[isChannelsLast ? 1 : 2];\n  const inputWidth = inputs[0].dims[isChannelsLast ? 2 : 3];\n  const inputChannels = inputs[0].dims[isChannelsLast ? 3 : 1];\n  const weightHeight = inputs[1].dims[2];\n  const weightWidth = inputs[1].dims[3];\n\n  const outputShape = calculateOutputShape(\n      inputs[0].dims, inputs[1].dims, attributes.dilations, adjustedAttributes.pads, attributes.strides,\n      isChannelsLast);\n  const outHeight = outputShape[isChannelsLast ? 1 : 2];\n  const outWidth = outputShape[isChannelsLast ? 2 : 3];\n  const outChannels = outputShape[isChannelsLast ? 3 : 1];\n\n  const sameSize =\n      isChannelsLast && weightHeight === inputHeight && weightWidth === inputWidth && attributes.autoPad === 'VALID';\n  if (sameSize ||\n      (weightHeight === 1 && weightWidth === 1 && attributes.dilations[0] === 1 && attributes.dilations[1] === 1 &&\n       attributes.strides[0] === 1 && attributes.strides[1] === 1 &&\n       (attributes.autoPad === 'SAME_UPPER' || attributes.autoPad === 'SAME_LOWER' ||\n        attributes.autoPad === 'VALID'))) {\n    // TODO: implement conv2dByMatMul()\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  if (!isChannelsLast || attributes.group !== 1) {\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  // TODO: implement conv2dWithIm2Col()\n\n  const dimAOuter = isChannelsLast ? outHeight * outWidth : outChannels;\n  const dimBOuter = isChannelsLast ? outChannels : outHeight * outWidth;\n  const dimInner = weightHeight * weightWidth * inputChannels;\n\n  const sequentialAccessByThreads = /* backend.adapterInfo.isIntel() */ true;\n\n  // STEP.1: transpose weight\n  const transposedWeight = (context.customData.wT as TensorView | undefined) ??\n      context.compute(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: weightTransposeAttribute.cacheKey,\n            get: () => createTransposeProgramInfo(inputs[1], weightTransposeAttribute.perm)\n          },\n          {inputs: [1], outputs: [attributes.wIsConst ? -2 : -1]})[0];\n  if (attributes.wIsConst && !context.customData.wT) {\n    context.customData.wT = transposedWeight;\n  }\n\n  // STEP.2: prepare reshaped inputs\n  const convInputs = [inputs[0], transposedWeight];\n  if (hasBias) {\n    if (!isChannelsLast && inputs[2].dims.length === 1) {\n      convInputs.push(inputs[2].reshape([inputs[2].dims[0], 1, 1]));\n    } else {\n      convInputs.push(inputs[2]);\n    }\n  }\n\n  // STEP.3: compute matmul\n  context.compute(\n      createConv2DMatMulProgramInfoLoader(\n          convInputs, adjustedAttributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n          sequentialAccessByThreads),\n      {inputs: convInputs});\n};\n\nconst conv1d = (context: ComputeContext, attributes: ConvAttributes): void => {\n  // extend the input to 2D by adding H dimension\n  const isChannelLast = attributes.format === 'NHWC';\n  const inputs = [\n    context.inputs[0].reshape(\n        isChannelLast ?\n            // [N, W, C] -> [N, H=1, W, C]\n            [context.inputs[0].dims[0], 1, context.inputs[0].dims[1], context.inputs[0].dims[2]] :\n            // [N, C, W] -> [N, C, H=1, W]\n            [context.inputs[0].dims[0], context.inputs[0].dims[1], 1, context.inputs[0].dims[2]]),\n    //[FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kW] -> [FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kH=1, kW]\n    context.inputs[1].reshape([context.inputs[1].dims[0], context.inputs[1].dims[1], 1, context.inputs[1].dims[2]])\n  ];\n  if (context.inputs.length === 3) {\n    inputs.push(context.inputs[2]);\n  }\n  const pads = [0, attributes.pads[0], 0, attributes.pads[1]];\n  const strides = [1].concat(attributes.strides);\n  const dilations = [1].concat(attributes.dilations);\n  const kernelShape = [1].concat(attributes.kernelShape);\n  const adjustedAttributes = getAdjustedConvAttributes({...attributes, pads, strides, dilations, kernelShape}, inputs);\n  context.compute(createGroupedConvProgramInfoLoader(\n      inputs, adjustedAttributes,\n      outputShape => isChannelLast ? [outputShape[0], outputShape[2], outputShape[3]] : []));\n};\n\nexport const conv = (context: ComputeContext, attributes: ConvAttributes): void => {\n  validateInputs(context.inputs, attributes);  // currently will fail if not conv1D/2D\n  if (context.inputs[0].dims.length === 3) {\n    conv1d(context, attributes);\n  } else {\n    conv2d(context, context.inputs, attributes);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {GpuDataType, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createConv2DMatMulProgramInfo} from './3rd-party/conv2d_mm_webgpu';\nimport {ConvAttributes} from './conv';\n\n\nconst createConv2DMatMulProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'Conv2DMatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nexport const createConv2DMatMulProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes, outputShape: readonly number[], dimAOuter: number,\n     dimBOuter: number, dimInner: number, hasBias: boolean, sequentialAccessByThreads: boolean): ProgramInfoLoader => {\n      const metadata = createConv2DMatMulProgramMetadata(hasBias, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createConv2DMatMulProgramInfo(\n            inputs, metadata, attributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n            sequentialAccessByThreads)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {MAX_CLIP, MIN_CLIP} from '../../util';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport const getActicationSnippet =\n    (attributes: InternalActivationAttributes): {activationFunction: string; applyActivation: string} => {\n      switch (attributes.activation) {\n        case 'Relu':\n          return {activationFunction: '', applyActivation: 'value = max(value, 0.0);'};\n        case 'Sigmoid':\n          return {activationFunction: '', applyActivation: 'value = (1.0 / (1.0 + exp(-value)));'};\n        case 'Clip':\n          return {\n            activationFunction:\n                `const clip_min_=f32(${attributes.clipMin!});const clip_max_=f32(${attributes.clipMax!});`,\n            applyActivation: 'value = clamp(value, clip_min_, clip_max_);'\n          };\n          // TODO: adding other activations that can be fused.\n        default:\n          return {activationFunction: '', applyActivation: ''};\n      }\n    };\n\nexport const parseInternalActivationAttributes =\n    (attributes: Record<string, unknown>|undefined): InternalActivationAttributes => {\n      const activation = attributes?.activation as string || '';\n\n      if (activation === 'Clip') {\n        const [clipMin, clipMax] = attributes?.activation_params as [number, number] || [MIN_CLIP, MAX_CLIP];\n        return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n      }\n      return {activation, activationCacheKey: activation};\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {GemmUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (inputs.length < 2 || inputs.length > 3) {\n    throw new Error('Invaid input number.');\n  }\n\n  // 'C' can be of dimensionality 0, 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length > 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].dataType !== DataType.float) || (inputs[1].dataType !== DataType.float) ||\n      (inputs.length === 3 && inputs[2].dataType !== DataType.float)) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].dataType !== inputs[1].dataType) ||\n      (inputs.length === 3 && inputs[0].dataType !== inputs[2].dataType)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n}\n\nconst offsetC = (m: number, n: number, dims: readonly number[]): string => {\n  if (dims.length === 0) {\n    return '0u';\n  }\n\n  const broadcastM = (dims.length === 1 && m !== 1) || (dims.length === 2 && dims[0] !== m);\n  const broadcastN = dims[dims.length - 1] !== n;\n\n  let offset = '0u';\n  if (!broadcastM) {\n    offset += `+ m * ${dims[dims.length - 1]}u`;\n  }\n  if (!broadcastN) {\n    offset += '+n';\n  }\n\n  return offset;\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N, K] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      const outputSize = ShapeUtil.size(outputShape);\n      let line = '';\n      if (attributes.transA && attributes.transB) {\n        line = 'value += a[k * M + m] * b[n * K + k];';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += a[k * M + m] * b[k * N + n];';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += a[m * K + k] * b[n * K + k];';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += a[m * K + k] * b[k * N + n];';\n      }\n\n      const dataType = 'f32';  // TODO: support other data type\n      const calculateAlpha = attributes.alpha === 1 ? '' : 'value *= alpha;';\n      const calculateC = inputs.length === 3 ? `value += beta * c[${offsetC(M, N, inputs[2].dims)}];` : '';\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> a : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> b : array<${dataType}>;`\n      ];\n      if (inputs.length === 3) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> c : array<${dataType}>;`);\n      }\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n  const alpha = ${dataType}(${attributes.alpha});\n  const beta = ${dataType}(${attributes.beta});\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputs.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      ${line}\n    }\n\n    ${calculateAlpha}\n    ${calculateC}\n    output[global_id.x] = value;\n\n  }`;\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\nconst createGemmProgramInfoLoader = (inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputTypes: inputs.length === 3 ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                                      [GpuDataType.default, GpuDataType.default],\n    cacheHint: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nexport const gemm = (context: ComputeContext, attributes: GemmAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createGemmProgramInfoLoader(context.inputs, attributes));\n};\n\nexport const parseGemmAttributes = (attributes: Record<string, unknown>): GemmAttributes =>\n    createAttributeWithCacheKey(attributes as Omit<GemmAttributes, keyof AttributeWithCacheKey>);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\n\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createMatmulProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes):\n        ProgramInfo => {\n          const aShape = inputs[0].dims;\n          const bShape = inputs[1].dims;\n          const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n          if (!outputShape) {\n            throw new Error('Can\\'t use matmul on the given tensors');\n          }\n          const outputSize = ShapeUtil.size(outputShape);\n          // TODO: support broadcasting\n\n          const dataType = 'f32';  // TODO: support other data type\n          const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n          const M = outputShape[outputShape.length - 2];\n          const K = aShape[aShape.length - 1];\n          const N = outputShape[outputShape.length - 1];\n          const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read> b : array<${dataType}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let stack = global_idx / (M * N);\n    let mn = global_idx % (M * N);\n    let n = global_idx % N;\n    let m = mn / N;\n\n    let offsetA = stack * (M * K);\n    let offsetB = stack * (K * N);\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      value += a[offsetA + m * K + k] * b[offsetB + k * N + n];\n    }\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n          return {\n            ...metadata,\n            outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n            getShaderSource,\n            dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n          };\n        };\n\nexport const createMatmulProgramInfoLoader =\n    (inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n    };\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('inputs should be float type');\n  }\n};\n\nexport const matMul = (context: ComputeContext): void => {\n  validateInputs(context.inputs);\n\n  context.compute(createMatmulProgramInfoLoader(context.inputs, {activation: '', activationCacheKey: ''}));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\n// TODO: support:\n// - ceil_mode                 \"test_maxpool_2d_ceil\"\n// - storage_order             \"test_maxpool_with_argmax_2d_precomputed_strides\"\n// - [MaxPool] dilations       \"test_maxpool_2d_dilations\"\n// - [MaxPool] output[1]       \"test_maxpool_with_argmax_2d_precomputed_pads\"\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Pool ops supports 2-D inputs only for now.');\n  }\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getAdjustedPoolAttributesAndOutputShape = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    inputs: readonly TensorView[], attributes: AttributeType, isGlobalOperator: boolean): [AttributeType, number[]] => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const inputShapeAsChannelFirst = isChannelsLast ?\n      [inputs[0].dims[0], inputs[0].dims[3], inputs[0].dims[1], inputs[0].dims[2]] :\n      inputs[0].dims.slice();\n  const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n  const kernelShape = attributes.kernelShape.slice();\n  const strides = attributes.strides.slice();\n  const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShapeAsChannelFirst, kernelShape, strides, dilations, pads);\n\n  const outputShapeAsChannelFirst = PoolConvUtil.computePoolOutputShape(\n      isGlobalOperator, inputShapeAsChannelFirst, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n  const newAttributes = Object.assign({}, attributes);\n  if (hasDilations) {\n    Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n  } else {\n    Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n  }\n  return [\n    newAttributes,\n    isChannelsLast ?\n        [\n          outputShapeAsChannelFirst[0], outputShapeAsChannelFirst[2], outputShapeAsChannelFirst[3],\n          outputShapeAsChannelFirst[1]\n        ] :\n        outputShapeAsChannelFirst\n  ];\n};\n\nconst generatePoolingCode = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    shaderHelper: ShaderHelper, inputDims: readonly number[], outputShape: readonly number[], attributes: AttributeType,\n    op1: string, op2: string, dataType: string, start: string): string => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const rank = inputDims.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const xIndicesHelper = createIndicesHelper('x', inputDims);\n\n  if (attributes.kernelShape.length <= 2) {\n    const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n    const sw = attributes.strides[attributes.strides.length - 1];\n    const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n    const pwEnd = attributes.pads[attributes.pads.length - 1];\n    const dimIdxW = rank - (isChannelsLast ? 2 : 1);\n    let codeW = '';\n    let codeH = '';\n    let codeHEnd = '';\n    if (pwStart + pwEnd !== 0) {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                if (xIndices[${dimIdxW}] < 0 || xIndices[${dimIdxW}] >= ${inputDims[dimIdxW]}) {\n                  pad++;\n                  continue;\n                }\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    }\n\n    if (attributes.kernelShape.length === 2) {\n      const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n      const sh = attributes.strides[attributes.strides.length - 2];\n      const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n      const phEnd = attributes.pads[attributes.pads.length - 2];\n      const dimIdxH = rank - (isChannelsLast ? 3 : 2);\n      const dimH = inputDims[dimIdxH];\n      if (phStart + phEnd !== 0) {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                  if (xIndices[${dimIdxH}] < 0 || xIndices[${dimIdxH}] >= ${dimH}) {\n                    pad+= ${kw};\n                    continue;\n                  }\n              `;\n      } else {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                `;\n      }\n      codeHEnd = `\n              }\n            `;\n    }\n\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var value: ${dataType} = ${dataType}(${start});\n              var pad = 0;\n              ${codeH}\n              ${codeW}\n              ${codeHEnd}\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  } else {\n    if (isChannelsLast) {\n      throw new Error('Pooling with kernelShape.length > 2 is not supported for NHWC format.');\n    }\n    const kernelSize = ShapeUtil.size(attributes.kernelShape);\n    const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n    const stridesRank = kernelStrides.length;\n    const padsRank = attributes.pads.length;\n    const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n    let padCode = '';\n    if (hasPads) {\n      padCode = `\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      padCode = `\n              }\n              let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n              ${op1}\n            `;\n    }\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            const pads = array<u32, ${padsRank}>(${attributes.pads.map(i => `${i}u`).join(',')});\n            const inputDims = array<u32, ${rank}>(${inputDims.map(i => `${i}u`).join(',')});\n            const kernelStrides = array<u32, ${stridesRank}>(${kernelStrides.map(i => `${i}u`).join(',')});\n            const strides = array<u32, ${stridesRank}>(${attributes.strides.map(i => `${i}u`).join(',')});\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var offsets: array<u32, ${stridesRank}>;\n\n              var value = ${dataType}(${start});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${kernelSize}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${stridesRank - 1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${stridesRank - 1}] = offset;\n\n                isPad = false;\n                for (var j = ${rank - stridesRank}u; j < ${rank}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${rank - stridesRank}u]\n                    + offsets[j - ${rank - stridesRank}u] - pads[j - 2u];\n                  ${padCode}\n              }\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  }\n};\n\nexport interface FormatAttributes {\n  readonly format: 'NHWC'|'NCHW';\n}\n\nexport interface PoolCommonAttributes extends FormatAttributes {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nconst parsePoolCommonAttributes = (attributes: Record<string, unknown>): PoolCommonAttributes => ({\n  format: attributes.format as FormatAttributes['format'],\n  autoPad: ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number],\n  ceilMode: attributes.ceil_mode as number,\n  kernelShape: attributes.kernel_shape as [number, number],\n  strides: attributes.strides as [number, number],\n  pads: attributes.pads as [number, number, number, number]\n});\n\nexport interface AveragePoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly countIncludePad: boolean;\n}\n\nconst createAveragePoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: AveragePoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n\n      const dataType = 'f32';\n\n      const op1 = 'value += x_val;';\n      let op2 = '';\n      if (adjustedAttributes.countIncludePad) {\n        op2 += `value /= ${dataType}(${kernelSize});`;\n      } else {\n        op2 += `value /= ${dataType}(${kernelSize} - pad);`;\n      }\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper => generatePoolingCode(\n            shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, dataType, '0.0'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const parseAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const countIncludePad = (attributes.count_include_pad as number) === 0 ? false : true;\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode'\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n  }\n\n  return createAttributeWithCacheKey({countIncludePad, ...attr});\n};\n\nexport const averagePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'AveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nconst globalPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nexport const parseGlobalAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalAveragePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalAveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n\nexport interface MaxPoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nconst createMaxPoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: MaxPoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const op1 = `\n      value = max(x_val, value);\n    `;\n      const op2 = '';\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper =>\n            generatePoolingCode(shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, 'f32', '-1e5'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const maxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'MaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nexport const parseMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const storageOrder = attributes.storage_order as number;\n  const dilations = attributes.dilations as [number, number];\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode' and 'storage_order'\n  if (storageOrder !== 0) {\n    throw new Error('column major storage order is not yet supported for MaxPool');\n  }\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n  }\n\n  return createAttributeWithCacheKey({storageOrder, dilations, ...attr});\n};\n\nexport const parseGlobalMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalMaxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalMaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length === 0 || inputs.length > 2) {\n    throw new Error('Reduce op requires 1 or 2 inputs.');\n  }\n\n  if (inputs.length === 2 && inputs[1].dims.length !== 1) {\n    throw new Error('Invalid axes input dims.');\n  }\n\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  keepDims: boolean;\n  noopWithEmptyAxes: boolean;\n  axes: number[];\n}\n\ntype ReduceOp = (inputs: readonly TensorView[], axes: number[]) => string[];\nconst noOp: ReduceOp = (): string[] => ['', '', 'value = _A[inputIdx];', ''];\nconst createReduceProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], attributes: ReduceAttributes,\n     reduceOp: ReduceOp): ProgramInfo => {\n      const outputShape: number[] = [];\n      const inputShape = inputs[0].dims;\n\n      const idxCopy: string[] = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const outputDimsLength = inputs[0].dims.length - (attributes.keepDims ? 0 : axes.length);\n      const ops = reduceOp(inputs, axes);\n      const inputIndicesHelper = createIndicesHelper('input', inputShape);\n      const initInputIdx = (ops[1] === '') ? '' : `let inputIdx = ${inputIndicesHelper.i2oExpression('inputIndices')};`;\n      let reduceOps = `\n          let inputIdx = ${inputIndicesHelper.i2oExpression('inputIndices')};\n          ${ops[2]};`;\n      const reduceOnAllAxes = !attributes.noopWithEmptyAxes && attributes.axes.length === 0;\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (reduceOnAllAxes || axes.indexOf(k) >= 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `for(var j${k}: u32 = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n                            inputIndices[${k}] = j${k};\n                            ${reduceOps}\n                          }`;\n        } else {\n          if (outputDimsLength > 1) {\n            idxCopy.push(`inputIndices[${k}] = outputIndices[${outputShape.length}];`);\n          } else {\n            idxCopy.push(`inputIndices[${k}] = outputIndices;`);\n          }\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const outputIndicesHelper = createIndicesHelper('output', outputShape);\n      const outputSize = ShapeUtil.size(outputShape);\n      const dataType = 'f32';\n\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n          @group(0) @binding(0) var<storage, read> _A : array<${dataType}>;\n          @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n          ${outputIndicesHelper.o2iImpl}\n          ${inputIndicesHelper.i2oImpl}\n\n          ${shaderHelper.mainStart()}\n          ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n          ${inputIndicesHelper.indicesVariableDeclaration('inputIndices')}\n          ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n          ${outputIndicesHelper.o2iCall('global_idx', 'outputIndices')}\n\n          var value = ${dataType}(0);\n\n          ${idxCopy.join('\\n')}\n          ${ops[0]}       // init ops for reduce max/min\n          ${initInputIdx}\n          ${ops[1]}\n          ${reduceOps}\n          ${ops[3]}       // final computation for reduce mean\n          output[global_idx] = value;\n        }`;\n\n      return {\n        ...metadata,\n        getShaderSource,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\nconst createReduceAttributesFromInputs =\n    (inputs: readonly TensorView[], attributes: ReduceAttributes): ReduceAttributes => {\n      const axes: number[] = [];\n      if (inputs[1].dims[0] > 0) {\n        inputs[1].getBigInt64Array().forEach(v => axes.push(Number(v)));\n      }\n      return createAttributeWithCacheKey(\n          {axes, keepDims: attributes.keepDims, noopWithEmptyAxes: attributes.noopWithEmptyAxes});\n    };\n\nconst createReduceProgramInfoLoader =\n    (inputs: readonly TensorView[], name: string, attributes: ReduceAttributes, reduceOp: ReduceOp):\n        ProgramInfoLoader => {\n          const updatedAttributes: ReduceAttributes =\n              inputs.length === 1 ? attributes : createReduceAttributesFromInputs(inputs, attributes);\n          const metadata:\n              ProgramMetadata = {name, inputTypes: [GpuDataType.default], cacheHint: updatedAttributes.cacheKey};\n          return {\n            ...metadata,\n            get: () => createReduceProgramInfo(\n                metadata, [inputs[0]], updatedAttributes,\n                updatedAttributes.noopWithEmptyAxes && updatedAttributes.axes.length === 0 ? noOp : reduceOp)\n          };\n        };\n\nexport const reduceLogSum = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', '', 'value += _A[inputIdx];', 'value = log(value);'];\n  context.compute(createReduceProgramInfoLoader(context.inputs, 'ReduceLogSum', attributes, reduceOp), {inputs: [0]});\n};\n\nexport const reduceL1 = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', '', 'value += abs(_A[inputIdx]);', ''];\n  context.compute(createReduceProgramInfoLoader(context.inputs, 'ReduceL1', attributes, reduceOp), {inputs: [0]});\n};\n\nexport const reduceL2 = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = ():\n      string[] => ['var t = f32(0); value = 0.0;', '', 't = _A[inputIdx]; value += (t * t);', 'value = sqrt(value);'];\n  context.compute(createReduceProgramInfoLoader(context.inputs, 'ReduceL2', attributes, reduceOp), {inputs: [0]});\n};\n\nexport const reduceLogSumExp = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', '', 'value += exp(_A[inputIdx]);', 'value = log(value);'];\n  context.compute(\n      createReduceProgramInfoLoader(context.inputs, 'ReduceLogSumExp', attributes, reduceOp), {inputs: [0]});\n};\n\nexport const reduceMax = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (inputs: TensorView[], axes: number[]): string[] => {\n    const idxZero = [];\n    for (let k = 0; k < inputs[0].dims.length; k++) {\n      if (axes.indexOf(k) >= 0 || axes.length === 0) {\n        idxZero.push(`inputIndices[${k}] = 0;`);  // first element\n      }\n    }\n\n    return [`${idxZero.join('\\n')}`, 'value = _A[inputIdx];', 'value = max(value, _A[inputIdx]);', ''];\n  };\n  context.compute(createReduceProgramInfoLoader(context.inputs, 'ReduceMax', attributes, reduceOp), {inputs: [0]});\n};\n\nexport const reduceMean = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (inputs: TensorView[], axes: number[]): string[] => {\n    let size = 1.0;\n    for (let k = 0; k < inputs[0].dims.length; k++) {\n      if (axes.indexOf(k) >= 0 || axes.length === 0) {\n        size *= inputs[0].dims[k];\n      }\n    }\n\n    return ['value = 0.0;', '', 'value += _A[inputIdx];', `value = value / ${size}.;`];  // ensure real number with `.`\n  };\n  context.compute(createReduceProgramInfoLoader(context.inputs, 'ReduceMean', attributes, reduceOp), {inputs: [0]});\n};\n\nexport const reduceMin = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (inputs: TensorView[], axes: number[]): string[] => {\n    const idxZero = [];\n    for (let k = 0; k < inputs[0].dims.length; k++) {\n      if (axes.indexOf(k) >= 0 || axes.length === 0) {\n        idxZero.push(`inputIndices[${k}] = 0;`);  // first element\n      }\n    }\n\n    return [`${idxZero.join('\\n')}`, 'value = _A[inputIdx];', 'value = min(value, _A[inputIdx]);', ''];\n  };\n  context.compute(createReduceProgramInfoLoader(context.inputs, 'ReduceMin', attributes, reduceOp), {inputs: [0]});\n};\n\nexport const reduceProd = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', '', 'value *= _A[inputIdx];', ''];\n  context.compute(createReduceProgramInfoLoader(context.inputs, 'ReduceProd', attributes, reduceOp), {inputs: [0]});\n};\n\nexport const reduceSum = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', '', 'value += _A[inputIdx];', ''];\n  context.compute(createReduceProgramInfoLoader(context.inputs, 'ReduceSum', attributes, reduceOp), {inputs: [0]});\n};\n\nexport const reduceSumSquare = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp =\n      (): string[] => ['var t = f32(0); value = 0.0;', '', 't = _A[inputIdx]; value += t * t;', ''];\n  context.compute(\n      createReduceProgramInfoLoader(context.inputs, 'ReduceSumSquare', attributes, reduceOp), {inputs: [0]});\n};\n\nexport const parseReduceAttributes = (attributes: Record<string, unknown>): ReduceAttributes =>\n    createAttributeWithCacheKey(attributes as Omit<ReduceAttributes, keyof AttributeWithCacheKey>);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nexport const transposeProgramMetadata = {\n  name: 'Transpose',\n  inputTypes: [GpuDataType.default]\n};\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('input should be float tensor');\n  }\n};\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] =>\n    (perm && perm.length !== inputShape.length) ? [...(inputShape.keys())].reverse() : perm;\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] =>\n    ShapeUtil.sortBasedOnPerm(inputShape, getAdjustedPerm(inputShape, perm));\n\nconst permFunctionBody = (perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`fn perm(a: ptr<function, array<u32, ${rank}>>, i: ptr<function, array<u32, ${rank}>>) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\t(*a)[${perm[i]}]=(*i)[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nexport const createTransposeProgramInfo = (input: TensorView, permAttr: number[]): ProgramInfo => {\n  const dataType = 'f32';  // TODO: support other data type\n  const inputShape = input.dims;\n  const perm = getAdjustedPerm(inputShape, permAttr);\n  const outputShape = getOutputShape(inputShape, perm);\n  const rank = inputShape.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  // A dims=[${inputs[0].dims.toString()}]\n  // out Dims=[${unpackedOutputShape.toString()}]\n  // based on perm=[${perm.toString()}]\n\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const inputIndicesHelper = createIndicesHelper('a', inputShape);\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n  ${permFunctionBody(perm, rank)}\n  ${outputIndicesHelper.o2iImpl}\n  ${inputIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n    ${inputIndicesHelper.indicesVariableDeclaration('aIndices')}\n    perm(&aIndices, &indices);\n\n    output[global_idx] = a[${inputIndicesHelper.i2oExpression('aIndices')}];\n  }`;\n  return {\n    ...transposeProgramMetadata,\n    outputs: [{dims: outputShape, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n    getShaderSource,\n    dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n  };\n};\n\nexport const transpose = (context: ComputeContext, attributes: TransposeAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute({\n    ...transposeProgramMetadata,\n    cacheHint: attributes.cacheKey,\n    get: () => createTransposeProgramInfo(context.inputs[0], attributes.perm)\n  });\n};\n\nexport const parseTransposeAttributes = (attributes: Record<string, unknown>): TransposeAttributes =>\n    createAttributeWithCacheKey({perm: attributes.perm as number[]});\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {MAX_CLIP, MIN_CLIP, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype ElementwiseCustomExpression = (expression: string) => string;\ntype ElementwiseFunctionCall = BuiltinFunctionName|ElementwiseCustomExpression;\n\nconst createElementwiseProgramShader =\n    (shaderHelper: ShaderHelper, datasize: number, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): string => {\n      const vecSize = Math.ceil(datasize / 4);\n\n      let expression = '';\n      if (typeof funcCall === 'string') {\n        expression = `${funcCall}(a)`;\n      } else {\n        expression = funcCall('a');\n      }\n      return `\n  @group(0) @binding(0) var<storage, read> inputData : array<vec4<f32>>;\n  @group(0) @binding(1) var<storage, read_write> outputData : array<vec4<f32>>;\n\n  ${additionalImplementation ?? ''}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n\n    let a = inputData[global_idx];\n    outputData[global_idx] = ${expression};\n  }`;\n    };\n\nconst createElementwiseProgramInfo =\n    (metadata: ProgramMetadata, input: TensorView, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): ProgramInfo => ({\n      ...metadata,\n      getShaderSource: shaderHelper =>\n          createElementwiseProgramShader(shaderHelper, ShapeUtil.size(input.dims), funcCall, additionalImplementation),\n      outputs: [{dims: input.dims, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n      dispatchGroup: (inputTensors) =>\n          ({x: Math.ceil(ShapeUtil.size(inputTensors[0].dims) / 64 /* workgroup size */ / 4 /* vec size */)})\n    });\n\nconst createElementwiseProgramInfoLoader =\n    (input: TensorView, name: string, funcCall: ElementwiseFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata: ProgramMetadata = {name, inputTypes: [GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createElementwiseProgramInfo(metadata, input, funcCall, additionalImplementation)\n      };\n    };\n\nexport const abs = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Abs', 'abs'));\n};\n\nexport const acos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acos', 'acos'));\n};\n\nexport const acosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acosh', 'acosh'));\n};\n\nexport const asin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asin', 'asin'));\n};\n\nexport const asinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asinh', 'asinh'));\n};\n\nexport const atan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atan', 'atan'));\n};\nexport const atanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atanh', 'atanh'));\n};\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clipV10 = (context: ComputeContext, attributes: ClipAttributes): void => {\n  context.compute(\n      createElementwiseProgramInfoLoader(\n          context.inputs[0], 'Clip', a => `clamp(${a}, clip_min_, clip_max_)`, `\n    const clip_min_: vec4<f32> = vec4(f32(${attributes.min}));\n    const clip_max_: vec4<f32> = vec4(f32(${attributes.max}));\n`,\n          attributes.cacheKey),\n      {inputs: [0]});\n};\nconst generateClipAttributesFromInputs = (inputs: readonly TensorView[]): ClipAttributes => {\n  const min = (inputs.length >= 2) ? inputs[1].getFloat32Array()[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].getFloat32Array()[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const clip = (context: ComputeContext): void => {\n  const attributes = generateClipAttributesFromInputs(context.inputs);\n  clipV10(context, attributes);\n};\n\nexport const ceil = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Ceil', 'ceil'));\n};\n\nexport const cos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cos', 'cos'));\n};\n\nexport const cosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cosh', 'cosh'));\n};\n\nexport interface AlphaAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const parseAlphaAttributes = (attributes: Record<string, unknown>): AlphaAttributes =>\n    createAttributeWithCacheKey(attributes as {alpha: number});\n\nexport const elu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Elu', a => `elu_vf32(${a})`, `\n  const elu_alpha_: f32 = f32(${attributes.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,\n      attributes.cacheKey));\n};\n\nexport const erf = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Erf', a => `erf_vf32(${a})`, `\n  const r0: f32 = 0.3275911;\n  const r1: f32 = 0.254829592;\n  const r2: f32 = -0.284496736;\n  const r3: f32 = 1.421413741;\n  const r4: f32 = -1.453152027;\n  const r5: f32 = 1.061405429;\n\n  fn erf_vf32(v: vec4<f32>) -> vec4<f32> {\n    let absv = abs(v);\n    let x = 1.0 / (1.0 + r0 * absv);\n    return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n  }`));\n};\n\nexport const exp = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Exp', 'exp'));\n};\n\nexport const floor = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Floor', 'floor'));\n};\n\nexport const leakyRelu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'LeakyRelu', a => `select(leaky_relu_alpha_ * ${a}, ${a}, ${a} >= vec4<f32>(0.0))`,\n      `const leaky_relu_alpha_: f32 = f32(${attributes.alpha});`, attributes.cacheKey));\n};\n\nexport const neg = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Neg', a => `-${a}`));\n};\n\nexport const reciprocal = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Reciprocal', a => `1.0/${a}`));\n};\n\nexport const relu = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Relu', a => `select(vec4<f32>(0.0), ${a}, ${a} > vec4<f32>(0.0))`));\n};\n\nexport const sigmoid = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sigmoid', a => `(1.0 / (1.0 + exp(-${a})))`));\n};\n\nexport const sin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sin', 'sin'));\n};\n\nexport const sinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sinh', 'sinh'));\n};\n\nexport const sqrt = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sqrt', 'sqrt'));\n};\n\nexport const tan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tan', 'tan'));\n};\n\nexport const tanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tanh', 'tanh'));\n};\n\nexport const thresholdedRelu = (context: ComputeContext, attributes: AlphaAttributes): number => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'ThresholdedRelu', a => `select(vec4<f32>(0.0), ${a}, ${a} > thresholded_relu_alpha_)`,\n      `const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${attributes.alpha});`, attributes.cacheKey));\n  return 0;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {createShaderHelper} from './ops/common';\nimport {Artifact, GpuData, ProgramInfo} from './types';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  attributesBound: boolean;\n\n  constructor(private backend: WebGpuBackend) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: GpuData[], outputs: GpuData[], dispatchGroup: [number, number, number]): void {\n    const device = this.backend.device;\n    const computePassEncoder = this.backend.getComputePassEncoder();\n\n    if (this.backend.profilingEnabled) {\n      // profiling write start timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 0);\n    }\n\n    computePassEncoder.setPipeline(buildArtifact.computePipeline);\n    const entries = [];\n    for (const input of inputs) {\n      entries.push({binding: entries.length, resource: {buffer: input.buffer}});\n    }\n    for (const output of outputs) {\n      entries.push({binding: entries.length, resource: {buffer: output.buffer}});\n    }\n    const bindGroup = device.createBindGroup({layout: buildArtifact.computePipeline.getBindGroupLayout(0), entries});\n    computePassEncoder.setBindGroup(0, bindGroup);\n\n    computePassEncoder.dispatchWorkgroups(...dispatchGroup);\n\n    this.backend.pendingDispatchNumber++;\n\n    if (this.backend.profilingEnabled) {\n      // profiling write end timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 1);\n      // eslint-disable-next-line no-bitwise\n      const queryData = this.backend.gpuDataManager.create(16, GPUBufferUsage.COPY_SRC | GPUBufferUsage.QUERY_RESOLVE);\n      // eslint-disable-next-line no-bitwise\n      const syncData = this.backend.gpuDataManager.create(16, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n\n      this.backend.endComputePass();\n      this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet, 0, 2, queryData.buffer, 0);\n      this.backend.getCommandEncoder().copyBufferToBuffer(queryData.buffer, 0, syncData.buffer, 0, 16);\n      this.backend.flush();\n\n      const kernelId = this.backend.currentKernelId!;\n      const kernelName = this.backend.kernels.get(kernelId)![0];\n\n      syncData.buffer.mapAsync(GPUMapMode.READ).then(() => {\n        const mappedData = new BigUint64Array(syncData.buffer.getMappedRange());\n        const startTimeU64 = mappedData[0];\n        const endTimeU64 = mappedData[1];\n\n        syncData.buffer.unmap();\n\n        if (typeof this.backend.profilingTimeBase === 'undefined') {\n          this.backend.profilingTimeBase = startTimeU64;\n        }\n\n        const startTime = Number(startTimeU64 - this.backend.profilingTimeBase);\n        const endTime = Number(endTimeU64 - this.backend.profilingTimeBase);\n\n        if (!Number.isSafeInteger(startTime) || !Number.isSafeInteger(endTime)) {\n          throw new RangeError('incorrect timestamp range');\n        }\n\n        this.backend.gpuDataManager.release(queryData.id);\n        this.backend.gpuDataManager.release(syncData.id);\n\n        // eslint-disable-next-line no-console\n        console.log(`[profiling] kernel \"${kernelId}|${kernelName}\" execution time: ${endTime - startTime} ns`);\n      });\n    }\n\n    if (this.backend.pendingDispatchNumber >= 16) {\n      this.backend.flush();\n    }\n  }\n  dispose(): void {\n    // this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, normalizedDispatchGroupSize: [number, number, number]): Artifact {\n    const device = this.backend.device;\n\n    const code = programInfo.getShaderSource(createShaderHelper(normalizedDispatchGroupSize));\n    const shaderModule = device.createShaderModule({code});\n    LOG_DEBUG('verbose', () => `[WebGPU] shader code: ${code}`);\n\n    const computePipeline =\n        device.createComputePipeline({compute: {module: shaderModule, entryPoint: 'main'}, layout: 'auto'});\n\n    return {programInfo, computePipeline};\n  }\n\n  normalizeDispatchGroupSize(dispatchGroup: ReturnType<ProgramInfo['dispatchGroup']>): [number, number, number] {\n    const x = typeof dispatchGroup === 'number' ? dispatchGroup : dispatchGroup.x;\n    const y = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.y || 1);\n    const z = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.z || 1);\n    const limitPerDimension = this.backend.device.limits.maxComputeWorkgroupsPerDimension;\n    if (x <= limitPerDimension && y <= limitPerDimension && z <= limitPerDimension) {\n      return [x, y, z];\n    }\n    const size = x * y * z;\n    let dispatchAverage = Math.ceil(Math.sqrt(size));\n    if (dispatchAverage > limitPerDimension) {\n      dispatchAverage = Math.ceil(Math.cbrt(size));\n      if (dispatchAverage > limitPerDimension) {\n        throw new Error('Total dispatch size exceeds WebGPU maximum.');\n      }\n      return [dispatchAverage, dispatchAverage, dispatchAverage];\n    } else {\n      return [dispatchAverage, dispatchAverage, 1];\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor, TensorView} from '../tensor';\n\nimport {ShaderHelper} from './ops/common';\n\nexport enum GpuDataType {\n  default = 0,\n  upload = 1,\n  profile = 2\n}\nexport type GpuDataId = number;\n\nexport interface GpuData {\n  type: GpuDataType;\n  id: GpuDataId;\n  buffer: GPUBuffer;\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  dataType: number;\n  gpuDataType: GpuDataType;\n}\n\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n\n  /**\n   * gpu data types for each input\n   */\n  inputTypes: GpuDataType[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for outputs\n   */\n  outputs: TensorInfo[];\n  /**\n   * the shader's processing source code\n   */\n  getShaderSource: (shaderHelper: ShaderHelper) => string;\n  /**\n   * default is \"main\"\n   */\n  // entryPoint: string;\n\n  dispatchGroup: (inputs: readonly TensorView[]) => {\n    x: number;\n    y?: number;\n    z?: number;\n  };\n}\n\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  computePipeline: GPUComputePipeline;\n}\n\nexport interface ComputeContextInputsOutputsMapping {\n  /**\n   * specify the mapping to the program's inputs. the value can be a number or a tensor view.\n   * - if it's a number, it's the index of the kernel's input\n   * - if it's a tensor view, it's an existing tensor view that will be used as the input\n   *\n   * if inputs is not specified, the mapping will be the kernel's inputs in order.\n   */\n  readonly inputs?: ReadonlyArray<TensorView|number>;\n  /**\n   * specify the mapping to the program's outputs. the value must be a number.\n   * - if it's a non-negative number, it's the index of the kernel's output\n   * - if it's -1, it's an output that will be created as a temporary value. this value will be released after\n   * the kernel is executed.\n   * - if it's -2, it's an output that will be created as a persistent value. this value will be released when the\n   * kernel is released.\n   *\n   * if outputs is not specified, the mapping will be the kernel's outputs in order.\n   */\n  readonly outputs?: readonly number[];\n}\n\n/**\n * A ComputeContext instance carries the states that representing the current running of a kernel.\n */\nexport interface ComputeContext {\n  /**\n   * stores the pointer to OpKernelContext\n   */\n  readonly opKernelContext: number;\n\n  /**\n   * a list of inputs, each input is an instance of TensorView\n   */\n  readonly inputs: readonly TensorView[];\n\n  /**\n   * a custom data object that can be used to store any data that is needed by the kernel\n   */\n  readonly customData: {[key: string]: unknown};\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[];\n  output(index: number, dims: readonly number[]): number;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initializeWebAssemblyInstance = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initializeRuntime = async(env: Env): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : env};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initRuntime(env);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      checkLastError('Can\\'t create run options.');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a run config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initializeRuntime, releaseSession, run} from './proxy-wrapper';\n\nlet runtimeInitialized: boolean;\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!runtimeInitialized) {\n      await initializeRuntime(env);\n      runtimeInitialized = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString('deviceType', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'deviceType' - ${webnnOptions.deviceType}.`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString('powerPreference', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'powerPreference' - ${webnnOptions.powerPreference}.`);\n                }\n              }\n            }\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported execution provider: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          checkLastError(`Can't append execution provider: ${epName}.`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      checkLastError('Can\\'t create session options.');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a session config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n// This file includes common definitions. They do NOT have dependency on the WebAssembly instance.\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'float16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float16':\n          return Uint16Array;\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {init as initJsep} from './jsep/init';\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {logLevelStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError} from './wasm-utils';\n\n/**\n * get the input/output count of the session.\n * @param sessionHandle the handle representing the session. should be non-zero.\n * @returns a tuple including 2 numbers, representing the input count and output count.\n */\nconst getSessionInputOutputCount = (sessionHandle: number): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const dataOffset = wasm.stackAlloc(8);\n    const errorCode = wasm._OrtGetInputOutputCount(sessionHandle, dataOffset, dataOffset + 4);\n    if (errorCode !== 0) {\n      checkLastError('Can\\'t get session input/output count.');\n    }\n    return [wasm.HEAP32[dataOffset / 4], wasm.HEAP32[dataOffset / 4 + 1]];\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    checkLastError('Can\\'t initialize onnxruntime.');\n  }\n};\n\n/**\n * intialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async(env: Env): Promise<void> => {\n  // init ORT\n  initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n\n  // init JSEP if available\n  await initJsep(getInstance(), env);\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * allocate the memory and memcpy the model bytes, preparing for creating an instance of InferenceSession.\n * @returns a 2-elements tuple - the pointer and size of the allocated buffer\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  if (modelDataOffset === 0) {\n    throw new Error(`Can't create a session. failed to allocate a buffer of size ${model.byteLength}.`);\n  }\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\n/**\n * create an inference session using the prepared buffer containing the model data.\n * @param modelData a 2-elements tuple containing the pointer and size of the model data buffer.\n * @param options an optional session options object.\n * @returns a 3-elements tuple containing [session handle, input names, output names]\n */\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNamesUTF8Encoded = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          checkLastError('Can\\'t create a session.');\n        }\n\n        const [inputCount, outputCount] = getSessionInputOutputCount(sessionHandle);\n\n        const inputNames = [];\n        const outputNames = [];\n        for (let i = 0; i < inputCount; i++) {\n          const name = wasm._OrtGetInputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an input name.');\n          }\n          inputNamesUTF8Encoded.push(name);\n          inputNames.push(wasm.UTF8ToString(name));\n        }\n        for (let i = 0; i < outputCount; i++) {\n          const name = wasm._OrtGetOutputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an output name.');\n          }\n          outputNamesUTF8Encoded.push(name);\n          outputNames.push(wasm.UTF8ToString(name));\n        }\n\n        activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n        return [sessionHandle, inputNames, outputNames];\n      } catch (e) {\n        inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n        outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n\n        if (sessionHandle !== 0) {\n          wasm._OrtReleaseSession(sessionHandle);\n        }\n        throw e;\n      } finally {\n        wasm._free(modelData[0]);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(alloc => wasm._free(alloc));\n      }\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot release session. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded] = session;\n\n  inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot run inference. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded] = session;\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputValues: number[] = [];\n  const inputAllocs: number[] = [];\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = inputs[i][0];\n      const dims = inputs[i][1];\n      const data = inputs[i][2];\n\n      let dataOffset: number;\n      let dataByteLength: number;\n\n      if (Array.isArray(data)) {\n        // string tensor\n        dataByteLength = 4 * data.length;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        let dataIndex = dataOffset / 4;\n        for (let i = 0; i < data.length; i++) {\n          if (typeof data[i] !== 'string') {\n            throw new TypeError(`tensor data at index ${i} is not a string`);\n          }\n          wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n        }\n      } else {\n        dataByteLength = data.byteLength;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n      }\n\n      const stack = wasm.stackSave();\n      const dimsOffset = wasm.stackAlloc(4 * dims.length);\n      try {\n        let dimIndex = dimsOffset / 4;\n        dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n        const tensor = wasm._OrtCreateTensor(\n            tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n        if (tensor === 0) {\n          checkLastError(`Can't create tensor for input[${i}].`);\n        }\n        inputValues.push(tensor);\n      } finally {\n        wasm.stackRestore(stack);\n      }\n    }\n\n    const beforeRunStack = wasm.stackSave();\n    const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n    const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n    const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n    const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n    try {\n      let inputValuesIndex = inputValuesOffset / 4;\n      let inputNamesIndex = inputNamesOffset / 4;\n      let outputValuesIndex = outputValuesOffset / 4;\n      let outputNamesIndex = outputNamesOffset / 4;\n      for (let i = 0; i < inputCount; i++) {\n        wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n        wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n      }\n      for (let i = 0; i < outputCount; i++) {\n        wasm.HEAPU32[outputValuesIndex++] = 0;\n        wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n      }\n\n      // support RunOptions\n      let errorCode = wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const runPromise = wasm.jsepRunPromise;\n      if (runPromise && typeof runPromise.then !== 'undefined') {\n        errorCode = await runPromise;\n      }\n\n      const output: SerializableTensor[] = [];\n\n      if (errorCode !== 0) {\n        checkLastError('failed to call OrtRun().');\n      }\n\n      for (let i = 0; i < outputCount; i++) {\n        const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n        const beforeGetTensorDataStack = wasm.stackSave();\n        // stack allocate 4 pointer value\n        const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n        let type: Tensor.Type|undefined, dataOffset = 0;\n        try {\n          errorCode = wasm._OrtGetTensorData(\n              tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n          if (errorCode !== 0) {\n            checkLastError(`Can't access output tensor data on index ${i}.`);\n          }\n          let tensorDataIndex = tensorDataOffset / 4;\n          const dataType = wasm.HEAPU32[tensorDataIndex++];\n          dataOffset = wasm.HEAPU32[tensorDataIndex++];\n          const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n          const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n          const dims = [];\n          for (let i = 0; i < dimsLength; i++) {\n            dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n          }\n          wasm._OrtFree(dimsOffset);\n\n          const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n          type = tensorDataTypeEnumToString(dataType);\n          if (type === 'string') {\n            const stringData: string[] = [];\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < size; i++) {\n              const offset = wasm.HEAPU32[dataIndex++];\n              const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n              stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n            }\n            output.push([type, dims, stringData]);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n            output.push([type, dims, data]);\n          }\n        } finally {\n          wasm.stackRestore(beforeGetTensorDataStack);\n          if (type === 'string' && dataOffset) {\n            wasm._free(dataOffset);\n          }\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n\n      return output;\n    } finally {\n      wasm.stackRestore(beforeRunStack);\n    }\n  } finally {\n    inputValues.forEach(v => wasm._OrtReleaseTensor(v));\n    inputAllocs.forEach(p => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    checkLastError('Can\\'t get an profile file name.');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nconst ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule> =\n    BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n\n/**\n * check web assembly API's last error and throw error if any error occurred.\n * @param message a message used when an error occurred.\n */\nexport const checkLastError = (message: string): void => {\n  const wasm = getInstance();\n\n  const stack = wasm.stackSave();\n  try {\n    const paramsOffset = wasm.stackAlloc(8);\n    wasm._OrtGetLastError(paramsOffset, paramsOffset + 4);\n    const errorCode = wasm.HEAP32[paramsOffset / 4];\n    const errorMessagePointer = wasm.HEAPU32[paramsOffset / 4 + 1];\n    const errorMessage = errorMessagePointer ? wasm.UTF8ToString(errorMessagePointer) : '';\n    throw new Error(`${message} ERROR_CODE: ${errorCode}, ERROR_MESSAGE: ${errorMessage}`);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n","\nimport worker from \"!!../../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.16.0-dev.20230704-d540c7da0f\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n(()=>{var e={838:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.WebGpuBackend=void 0;const r=n(955),a=n(771),o=n(510),i=n(305);t.WebGpuBackend=class{constructor(){this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.pendingDispatchNumber=0,this.profilingEnabled=!1}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error(\\\"currentKernelCustomData(): currentKernelId is null. (should not happen)\\\");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e){if(!navigator.gpu)throw new Error(\\\"WebGpuBackend: WebGPU is not available.\\\");const t=await navigator.gpu.requestAdapter();if(!t)throw new Error(\\\"WebGpuBackend: Failed to get GPU adapter.\\\");const n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize}};t.features.has(\\\"timestamp-query-inside-passes\\\")&&\\\"default\\\"===e.webgpu.profilingMode&&(this.profilingEnabled=!0,n.requiredFeatures=[\\\"timestamp-query-inside-passes\\\"]),this.device=await t.requestDevice(n),this.gpuDataManager=(0,a.createGpuDataManager)(this),this.programManager=new i.ProgramManager(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,(0,r.configureLogger)(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},this.profilingEnabled&&(this.profilingQuerySet=this.device.createQuerySet({type:\\\"timestamp\\\",count:2}))}dispose(){}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){return this.computePassEncoder||(this.computePassEncoder=this.getCommandEncoder().beginComputePass()),this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0}run(e,t,n,a,o){if(t.length!==e.inputTypes.length)throw new Error(`Input size must be equal to ${e.inputTypes.length}.`);const i=[];for(let e=0;e<t.length;++e){const n=this.gpuDataManager.get(t[e].data);if(!n)throw new Error(`no GPU data for input: ${t[e].data}`);i[e]=n}const s=((e,t,n)=>{const r=t.map((e=>`${e.join(\\\",\\\")}`)).join(\\\"_\\\"),a=n.join(\\\"_\\\");let o=e.name;return e.cacheHint&&(o+=\\\"[\\\"+e.cacheHint+\\\"]\\\"),o+=\\\":\\\"+r+\\\";\\\"+a,o})(e,t.map((e=>e.dims)),i.map((e=>e.type)));let u=this.programManager.getArtifact(s);const l=u?u.programInfo:\\\"function\\\"==typeof e.get?e.get():e,c=0===n.length?l.outputs.map(((e,t)=>t)):n;if(c.length!==l.outputs.length)throw new Error(`Output size ${c.length} must be equal to ${l.outputs.length}.`);const p=[],d=[];for(let e=0;e<l.outputs.length;++e){if(!Number.isInteger(c[e])||c[e]<-2||c[e]>=l.outputs.length)throw new Error(`Invalid output index: ${c[e]}`);const t=-1===c[e],n=-2===c[e],r=t||n?o(l.outputs[e].dataType,l.outputs[e].dims):a(c[e],l.outputs[e].dataType,l.outputs[e].dims),i=this.gpuDataManager.get(r.data);if(!i)throw new Error(`no GPU data for output: ${r.data}`);if(t&&this.temporaryData.push(i),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(i)}p.push(r),d.push(i)}const f=this.programManager.normalizeDispatchGroupSize(l.dispatchGroup(t));return u||(u=this.programManager.build(l,f),this.programManager.setArtifact(s,u)),(0,r.LOG_DEBUG)(\\\"info\\\",(()=>`[ProgramManager] run \\\"${l.name}\\\" (key=${s}) with ${f[0]}x${f[1]}x${f[2]}`)),this.programManager.run(u,i,d,f),p}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){const n=await this.gpuDataManager.download(e),r=t();r.set(new Uint8Array(n,0,r.byteLength))}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n){const r=o.WEBGPU_OP_RESOLVE_RULES.get(e);if(!r)throw new Error(`kernel not implemented: ${e}`);this.kernels.set(t,[e,r[0],[r[1],n]])}releaseKernel(e){const t=this.kernelPersistentData.get(e);if(t){for(const e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t){const n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);const[a,o,i]=n;if(null!==this.currentKernelId)throw new Error(`kernel \\\"${a}\\\" is not allowed to be called recursively`);this.currentKernelId=e,i[0]&&(i[1]=i[0](i[1]),i[0]=void 0),(0,r.LOG_DEBUG)(\\\"info\\\",(()=>`[WebGPU] Start to run kernel \\\"${a}\\\"...`)),this.temporaryData=[];try{return o(t,i[1]),0}catch(e){return(0,r.LOG_DEBUG)(\\\"warning\\\",`[WebGPU] Kernel \\\"${a}\\\" failed. Error: ${e}`),1}finally{for(const e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}}},675:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.init=void 0;const r=n(917),a=n(838),o=n(955),i=n(952);class s{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){if(1!==this.dataType)throw new Error(\\\"Invalid data type\\\");const e=i.ShapeUtil.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error(\\\"Invalid data type\\\");const e=i.ShapeUtil.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(i.ShapeUtil.size(e)!==i.ShapeUtil.size(this.dims))throw new Error(\\\"Invalid new shape\\\");return new s(this.module,this.dataType,this.data,e)}}class u{get customData(){return this.backend.currentKernelCustomData}constructor(e,t,n){this.module=e,this.backend=t;const r=e.HEAPU32;let a=n>>2;this.opKernelContext=r[a++];const o=r[a++],i=[];for(let t=0;t<o;t++){const t=r[a++],n=r[a++],o=r[a++],u=[];for(let e=0;e<o;e++)u.push(r[a++]);i.push(new s(e,t,n,u))}this.inputs=i}compute(e,t){var n,a,o;const u=null!==(a=null===(n=null==t?void 0:t.inputs)||void 0===n?void 0:n.map((e=>\\\"number\\\"==typeof e?this.inputs[e]:e)))&&void 0!==a?a:this.inputs,l=null!==(o=null==t?void 0:t.outputs)&&void 0!==o?o:[];return this.backend.run(e,u,l,((e,t,n)=>new s(this.module,t,this.output(e,n),n)),((e,t)=>{const n=(0,r.getTensorElementSize)(e);if(!n)throw new Error(`Unsupported data type: ${e}`);const a=n*i.ShapeUtil.size(t);return new s(this.module,e,this.backend.gpuDataManager.create(a).id,t)}))}output(e,t){const n=this.module.stackSave();try{const n=this.module.stackAlloc(4*(1+t.length));let r=n>>2;this.module.HEAPU32[r++]=t.length;for(let e=0;e<t.length;e++)this.module.HEAPU32[r++]=t[e];return this.module._JsepOutput(this.opKernelContext,e,n)}finally{this.module.stackRestore(n)}}}t.init=async(e,t)=>{const n=e.jsepInit;if(n&&navigator.gpu){if(!t.wasm.simd)throw new Error(\\\"Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP\\\");const r=new a.WebGpuBackend;await r.initialize(t),n({backend:r},(e=>r.alloc(e)),(e=>r.free(e)),((t,n,a,i=!1)=>{if(i)(0,o.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${t}, dst=${n}, size=${a}`)),r.memcpy(t,n);else{(0,o.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${t}, gpuDataId=${n}, size=${a}`));const i=e.HEAPU8.subarray(t,t+a);r.upload(n,i)}}),(async(t,n,a)=>{(0,o.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${t}, dataOffset=${n}, size=${a}`)),await r.download(t,(()=>e.HEAPU8.subarray(n,n+a)))}),((e,t,n)=>r.createKernel(e,t,n)),(e=>r.releaseKernel(e)),((t,n)=>{(0,o.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] jsepRun: kernel=${t}, contextDataOffset=${n}`));const a=new u(e,r,n);return r.computeKernel(t,a)}))}}},955:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.LOG_DEBUG=t.LOG=t.configureLogger=void 0;const r=n(917),a=[\\\"V\\\",\\\"I\\\",\\\"W\\\",\\\"E\\\",\\\"F\\\"];let o,i;t.configureLogger=(e,t)=>{o=e,i=t},t.LOG=(e,t)=>{const n=(0,r.logLevelStringToEnum)(e);var i,s;n>=(0,r.logLevelStringToEnum)(o)&&(i=n,s=\\\"function\\\"==typeof t?t():t,console.log(`[${a[i]},${(new Date).toISOString()}]${s}`))},t.LOG_DEBUG=(...e)=>{i&&(0,t.LOG)(...e)}},952:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.MAX_CLIP=t.MIN_CLIP=t.GemmUtil=t.PoolConvUtil=t.ShapeUtil=t.BroadcastUtil=t.MatMulUtil=void 0;class n{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}}t.MatMulUtil=n;class r{static calcShape(e,t,r=!1){const a=e.length,o=t.length;if(0===a)return t;if(0===o)return e;const i=Math.max(e.length,t.length),s=new Array(i);if(r){if(a<2||o<2)return;const r=n.calcMatMulShape([e[a-2],e[a-1]],[t[o-2],t[o-1]]);if(void 0===r)return;[s[i-2],s[i-1]]=r}for(let n=r?3:1;n<=i;n++){const r=a-n<0?1:e[a-n],u=o-n<0?1:t[o-n];if(r!==u&&r>1&&u>1)return;s[i-n]=Math.max(r,u)}return s}static isValidBroadcast(e,t){const n=e.length,r=t.length;if(n>r)return!1;for(let a=1;a<=n;a++)if(1!==e[n-a]&&e[n-a]!==t[r-a])return!1;return!0}}t.BroadcastUtil=r;class a{static size(e){return a.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return a.getSizeFromDimensionRange(e,t,e.length)}static sizeToDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${e.length} dimensions.`);return a.getSizeFromDimensionRange(e,0,t)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let a=t;a<n;a++){if(e[a]<0)throw new Error(\\\"cannot get valid size from specified dimension range. Most likely the range contains negative values in them.\\\");r*=e[a]}return r}static computeStrides(e){const t=e.length;if(0===t)return[];if(1===t)return[1];const n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error(\\\"unsupported axis for this operation.\\\");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,null!=t?t:e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){const n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}}t.ShapeUtil=a;class o{static adjustPoolAttributes(e,t,n,r,a,o){if(!e&&n.length!==t.length-2)throw new Error(\\\"length of specified kernel shapes should be 2 less than length of input dimensions\\\");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error(\\\"strides should be greater than or equal to 1\\\")}else r.push(1);for(let e=0;e<n.length;e++)if(e<a.length){if(a[e]<0)throw new Error(\\\"dilations should be greater than or equal to 1\\\")}else a.push(1);for(let e=0;e<2*n.length;e++)if(e<o.length){if(o[e]<0)throw new Error(\\\"pad should be greater than or equal to 1\\\")}else o.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error(\\\"kernel shapes need to be greater than 0\\\");if(o[e]>=n[e]||o[e+n.length]>=n[e])throw new Error(\\\"pads should be smaller than kernel\\\")}}static adjustPadsBasedOnAutoPad(e,t,n,r,a,i,s){if(s){if(a.length!==2*(e.length-2))throw new Error(\\\"length of pads should be twice the length of data dimensions\\\");if(t.length!==e.length-2)throw new Error(\\\"length of strides should be the length of data dimensions\\\");if(r.length!==e.length-2)throw new Error(\\\"length of kernel shapes should be the length of data dimensions\\\");for(let u=0;u<e.length-2;u++)o.adjustPadAndReturnShape(e[u+(i?1:2)],t[u],n[u],r[u],a,u,u+e.length-2,s)}}static computePoolOutputShape(e,t,n,r,a,i,s){if(t.length<=0)throw new Error(\\\"input shape must be of size greater than 0\\\");const u=[t[0],t[1]];return o.computeShapeHelper(e,t,u,n,r,a,i,s),u}static computeConvOutputShape(e,t,n,r,a,i,s){if(e.length<=0||t.length<=0)throw new Error(\\\"invalid input tensor dims or invalid filter tensor dims\\\");const u=[e[0],t[0]];return o.computeShapeHelper(!1,e,u,n,r,a,i,s),u}static computeShapeHelper(e,t,n,r,a,i,s,u){if(e)for(let e=0;e<t.length-2;e++)n.push(1);else for(let e=0;e<t.length-2;e++)n.push(o.adjustPadAndReturnShape(t[e+2],r[e],a[e],i[e],s,e,e+t.length-2,u))}static adjustPadAndReturnShape(e,t,n,r,a,o,i,s){const u=n*(r-1)+1;if(!s||\\\"NOTSET\\\"===s)return Math.floor((e+a[o]+a[i]-u)/t+1);switch(s){case\\\"VALID\\\":return a[o]=0,a[i]=0,Math.floor((e-u)/t+1);case\\\"SAME_LOWER\\\":case\\\"SAME_UPPER\\\":if(1!==n)throw new Error(\\\"Dilation not supported for SAME_UPPER or SAME_LOWER\\\");{const n=((e+t-1)/t-1)*t+r-e;return a[o]=\\\"SAME_LOWER\\\"===s?Math.floor((n+1)/2):Math.floor(n/2),a[i]=n-a[o],Math.floor((e+n-r)/t+1)}default:throw new Error(\\\"Unsupported AutoPad type\\\")}}}t.PoolConvUtil=o,t.GemmUtil=class{static getShapeOfGemmResult(e,t,n,a,o){if(2!==e.length||2!==n.length)throw new Error(\\\"shape need to be of size 2\\\");let i,s,u;t?(i=e[1],s=e[0]):(i=e[0],s=e[1]);let l=-1;if(a?(u=n[0],l=1):(u=n[1],l=0),n[l]!==s)throw new Error(\\\"dimension mismatch\\\");if(i<=0||u<=0||s<=0)throw new Error(\\\"invalid shape specified\\\");if(o&&!r.isValidBroadcast(o,[i,u]))throw new Error(\\\"gemm: invalid bias shape for broadcast\\\");return[i,u,s]}},t.MIN_CLIP=-34028234663852886e22,t.MAX_CLIP=34028234663852886e22},387:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.createAttributeWithCacheKey=void 0;class n{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(\\\";\\\")),this._cacheKey}}t.createAttributeWithCacheKey=e=>new n(e)},771:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.createGpuDataManager=void 0;const r=n(955),a=n(163),o=e=>16*Math.ceil(e/16);let i=0;class s{constructor(e){this.backend=e,this.storageCache=new Map,this.downloadCache=new Map,this.buffersForUploadingPending=[],this.buffersPending=[]}upload(e,t){const n=t.buffer,a=t.byteOffset,i=t.byteLength,s=o(i),u=this.storageCache.get(e);if(!u)throw new Error(\\\"gpu data for uploading does not exist\\\");if(u.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${u.originalSize}, data size=${i}`);const l=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),c=l.getMappedRange();new Uint8Array(c).set(new Uint8Array(n,a,i)),l.unmap();const p=this.backend.getCommandEncoder();this.backend.endComputePass(),p.copyBufferToBuffer(l,0,u.gpuData.buffer,0,s),(0,r.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`)),this.buffersForUploadingPending.push(l)}memcpy(e,t){const n=this.storageCache.get(e);if(!n)throw new Error(\\\"source gpu data for memcpy does not exist\\\");const r=this.storageCache.get(t);if(!r)throw new Error(\\\"destination gpu data for memcpy does not exist\\\");if(n.originalSize!==r.originalSize)throw new Error(\\\"inconsistent source and destination gpu data size\\\");const a=o(n.originalSize),i=this.backend.getCommandEncoder();this.backend.endComputePass(),i.copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,a)}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){const n=o(e),s=this.backend.device.createBuffer({size:n,usage:t}),u={id:i++,type:a.GpuDataType.default,buffer:s};return this.storageCache.set(u.id,{gpuData:u,originalSize:e}),(0,r.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${u.id}`)),u}get(e){var t;return null===(t=this.storageCache.get(e))||void 0===t?void 0:t.gpuData}release(e){const t=this.storageCache.get(e);if(!t)throw new Error(\\\"releasing data does not exist\\\");return(0,r.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`)),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),this.downloadCache.get(e)&&this.downloadCache.delete(e),t.originalSize}async download(e){const t=this.downloadCache.get(e);if(t)return t.data;const n=this.storageCache.get(e);if(!n)throw new Error(\\\"data does not exist\\\");const r=this.backend.getCommandEncoder();this.backend.endComputePass();const a=o(n.originalSize),i=this.backend.device.createBuffer({size:a,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});r.copyBufferToBuffer(n.gpuData.buffer,0,i,0,a),this.backend.flush();const s=new Promise((e=>{i.mapAsync(GPUMapMode.READ).then((()=>{const t=i.getMappedRange().slice(0);i.destroy(),e(t)}))}));return this.downloadCache.set(e,{data:s}),s}refreshPendingBuffers(){for(const e of this.buffersForUploadingPending)e.destroy();for(const e of this.buffersPending)e.destroy()}}t.createGpuDataManager=(...e)=>new s(...e)},510:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!(\\\"get\\\"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.WEBGPU_OP_RESOLVE_RULES=void 0;const i=o(n(504)),s=n(770),u=n(271),l=n(522),c=o(n(262)),p=n(31),d=n(625),f=o(n(302));t.WEBGPU_OP_RESOLVE_RULES=new Map([[\\\"Abs\\\",[f.abs]],[\\\"Acos\\\",[f.acos]],[\\\"Acosh\\\",[f.acosh]],[\\\"Add\\\",[i.add]],[\\\"Asin\\\",[f.asin]],[\\\"Asinh\\\",[f.asinh]],[\\\"Atan\\\",[f.atan]],[\\\"Atanh\\\",[f.atanh]],[\\\"AveragePool\\\",[c.averagePool,c.parseAveragePoolAttributes]],[\\\"Ceil\\\",[f.ceil]],[\\\"ClipV10\\\",[f.clipV10]],[\\\"Clip\\\",[f.clip]],[\\\"Conv\\\",[s.conv,s.parseConvAttributes]],[\\\"Cos\\\",[f.cos]],[\\\"Cosh\\\",[f.cosh]],[\\\"Div\\\",[i.div]],[\\\"Elu\\\",[f.elu,f.parseAlphaAttributes]],[\\\"Erf\\\",[f.erf]],[\\\"Exp\\\",[f.exp]],[\\\"Floor\\\",[f.floor]],[\\\"Gemm\\\",[u.gemm,u.parseGemmAttributes]],[\\\"GlobalAveragePool\\\",[c.globalAveragePool,c.parseGlobalAveragePoolAttributes]],[\\\"GlobalMaxPool\\\",[c.globalMaxPool,c.parseGlobalMaxPoolAttributes]],[\\\"LeakyRelu\\\",[f.leakyRelu,f.parseAlphaAttributes]],[\\\"MatMul\\\",[l.matMul]],[\\\"MaxPool\\\",[c.maxPool,c.parseMaxPoolAttributes]],[\\\"Mul\\\",[i.mul]],[\\\"Neg\\\",[f.neg]],[\\\"Pow\\\",[i.pow]],[\\\"Reciprocal\\\",[f.reciprocal]],[\\\"ReduceMin\\\",[p.reduceMin,p.parseReduceAttributes]],[\\\"ReduceMean\\\",[p.reduceMean,p.parseReduceAttributes]],[\\\"ReduceMax\\\",[p.reduceMax,p.parseReduceAttributes]],[\\\"ReduceSum\\\",[p.reduceSum,p.parseReduceAttributes]],[\\\"ReduceProd\\\",[p.reduceProd,p.parseReduceAttributes]],[\\\"ReduceL1\\\",[p.reduceL1,p.parseReduceAttributes]],[\\\"ReduceL2\\\",[p.reduceL2,p.parseReduceAttributes]],[\\\"ReduceLogSum\\\",[p.reduceLogSum,p.parseReduceAttributes]],[\\\"ReduceLogSumExp\\\",[p.reduceLogSumExp,p.parseReduceAttributes]],[\\\"ReduceSumSquare\\\",[p.reduceSumSquare,p.parseReduceAttributes]],[\\\"Relu\\\",[f.relu]],[\\\"Sigmoid\\\",[f.sigmoid]],[\\\"Sin\\\",[f.sin]],[\\\"Sinh\\\",[f.sinh]],[\\\"Sqrt\\\",[f.sqrt]],[\\\"Sub\\\",[i.sub]],[\\\"Tan\\\",[f.tan]],[\\\"Tanh\\\",[f.tanh]],[\\\"ThresholdedRelu\\\",[f.thresholdedRelu,f.parseAlphaAttributes]],[\\\"Transpose\\\",[d.transpose,d.parseTransposeAttributes]]])},427:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.biasActivationSnippet=t.activationFnSnippet=t.typeSnippet=void 0,t.typeSnippet=e=>{switch(e){case 1:return\\\"f32\\\";case 2:return\\\"vec2<f32>\\\";case 3:return\\\"vec3<f32>\\\";case 4:return\\\"vec4<f32>\\\";default:throw new Error(`${e}-component is not supported.`)}},t.activationFnSnippet=(e,t=!1,n=!1,r=3)=>\\\"\\\",t.biasActivationSnippet=(e,t)=>`\\\\n      ${e?\\\"value = value + getBiasByOutputCoords(coords);\\\":\\\"\\\"}\\\\n      ${t?\\\"value = activation(value, coords);\\\":\\\"\\\"}\\\\n      `},456:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.createConv2DMatMulProgramInfo=void 0;const r=n(955),a=n(952),o=n(163),i=n(427),s=n(85),u=n(158);t.createConv2DMatMulProgramInfo=(e,t,n,l,c,p,d,f,h)=>{const g=\\\"NHWC\\\"===n.format,m=g?e[0].dims[3]:e[0].dims[1],b=l[0],v=g?l[2]:l[3],y=g?l[1]:l[2],w=g?l[3]:l[1],_=((m%4==0||m%3==0)&&g||v%4==0&&!g)&&w%4==0,$=g?w:v*y,S=g?v*y:w,A=_?[8,8,1]:[$<=4?4:16,$>4&&S<=4?4:16,1],O=_?[4,4,1]:[$<=4?1:2,$>4&&S<=4?1:2,1],E=[Math.ceil($/A[0]/O[0]),Math.ceil(S/A[1]/O[1]),Math.ceil(b/A[2]/O[1])];(0,r.LOG_DEBUG)(\\\"verbose\\\",(()=>`[conv2d_mm_webgpu] dispatch = ${E}`));const C=_?g&&m%4!=0?3:4:O[0],P=A[1]*O[1],M=A[0]*O[0],T=Math.max(A[0]*C,A[1]),x=c%P==0,R=p%M==0,I=d%T==0,k=_?[C,4,4]:[1,1,1],D=[`@group(0) @binding(0) var<storage, read> x: array<${_&&4===C?\\\"vec4<f32>\\\":\\\"f32\\\"}>;`,`@group(0) @binding(1) var<storage, read> w: array<${_?\\\"vec4<f32>\\\":\\\"f32\\\"}>;`];let U=`\\\\n      fn setOutputAtIndex(flatIndex : i32, value : ${_?\\\"vec4<f32>\\\":\\\"f32\\\"}) {\\\\n        result[flatIndex] = ${_?\\\"vec4<f32>\\\":\\\"f32\\\"}(value);\\\\n      }\\\\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${_?\\\"vec4<f32>\\\":\\\"f32\\\"}) {\\\\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\\\\n        setOutputAtIndex(flatIndex ${_?\\\"/ 4\\\":\\\"\\\"}, value);\\\\n      }`;return f&&(D.push(`@group(0) @binding(2) var<storage, read> bias: array<${_?\\\"vec4<f32>\\\":\\\"f32\\\"}>;`),U+=`\\\\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${_?\\\"vec4<f32>\\\":\\\"f32\\\"} {\\\\n          return bias[coords.${g?\\\"w\\\":\\\"y\\\"}${_?\\\"/ 4\\\":\\\"\\\"}];\\\\n        }`),Object.assign(Object.assign({},t),{outputs:[{dims:l,dataType:e[0].dataType,gpuDataType:o.GpuDataType.default}],dispatchGroup:()=>({x:E[0],y:E[1],z:E[2]}),getShaderSource:()=>`\\\\n        ${s.utilFunctions}\\\\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\\\\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\\\\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\\\\n        ${D.join(\\\"\\\")}\\\\n        @group(0) @binding(${D.length}) var<storage, read_write> result: array<${_?\\\"vec4<f32>\\\":\\\"f32\\\"}>;\\\\n        //@group(0) @binding(${D.length+1}) var<uniform> uniforms: Uniforms;\\\\n\\\\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(\\\",\\\")});\\\\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(\\\",\\\")});\\\\n        const outShape : vec4<i32> = vec4<i32>(${l.join(\\\",\\\")});\\\\n        const outShapeStrides : vec3<i32> = vec3<i32>(${a.ShapeUtil.computeStrides(l).slice(0,3).join(\\\",\\\")});\\\\n        const filterDims : vec2<i32> = vec2<i32>(${n.kernelShape[0]}, ${n.kernelShape[1]});\\\\n        const pad : vec2<i32> = vec2<i32>(${n.pads[0]}, ${n.pads[1]});\\\\n        const stride : vec2<i32> = vec2<i32>(${n.strides[0]}, ${n.strides[1]});\\\\n        const dilation : vec2<i32> = vec2<i32>(${n.dilations[0]}, ${n.dilations[1]});\\\\n        const dimAOuter : i32 = ${c};\\\\n        const dimBOuter : i32 = ${p};\\\\n        const dimInner : i32 = ${d};\\\\n        ${U}\\\\n        ${((e,t,n,r,a=!1,o,s=!1,u=4,l=4,c=4)=>{const p=e?\\\"\\\\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\\\\n    \\\":\\\"\\\\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\\\\n    \\\",d=e?\\\"\\\\n    let coords = vec4<i32>(\\\\n      batch,\\\\n      row / outWidth,\\\\n      row % outWidth,\\\\n      col);\\\\n    \\\":\\\"\\\\n    let coords = vec4<i32>(\\\\n      batch,\\\\n      row,\\\\n      col / outWidth,\\\\n      col % outWidth);\\\\n    \\\",f=e?\\\"xShape[1]\\\":\\\"xShape[2]\\\",h=e?\\\"xShape[2]\\\":\\\"xShape[3]\\\",g=e?\\\"row\\\":\\\"col\\\",m=e?\\\"col\\\":\\\"row\\\",b=`\\\\n    let inChannels = wShape[2];\\\\n    let outWidth = ${e?\\\"outShape[2]\\\":\\\"outShape[3]\\\"};\\\\n    let outRow = ${g} / outWidth;\\\\n    let outCol = ${g} % outWidth;\\\\n\\\\n    let WRow = ${m} / (filterDims[1] * inChannels);\\\\n    let WCol = ${m} / inChannels % filterDims[1];\\\\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\\\\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\\\\n    let xCh = ${m} % inChannels;\\\\n    var resData = ${(0,i.typeSnippet)(u)}(0.0);\\\\n    // The bounds checking is always needed since we use it to pad zero for\\\\n    // the 'same' padding type.\\\\n    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${h}) {\\\\n      ${p}\\\\n      let xIndex = getIndexFromCoords4D(coord, xShape);\\\\n      ${(e=>{switch(e){case 1:return\\\"resData = x[xIndex];\\\";case 3:return\\\"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);\\\";case 4:return\\\"resData = x[xIndex / 4];\\\";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(u)}\\\\n    }\\\\n    return resData;`,v=e?t&&r?`\\\\n    let col = colIn * ${u};\\\\n    ${b}`:`\\\\n    let col = colIn * ${u};\\\\n    if (row < dimAOuter && col < dimInner) {\\\\n      ${b}\\\\n    }\\\\n    return ${(0,i.typeSnippet)(u)}(0.0);`:r&&n?`\\\\n    let col = colIn * ${u};\\\\n    ${b}`:`\\\\n    let col = colIn * ${u};\\\\n    if (row < dimInner && col < dimBOuter) {\\\\n      ${b}\\\\n    }\\\\n    return ${(0,i.typeSnippet)(u)}(0.0);`,y=`${(e=>{switch(e){case 1:return\\\"return w[row * wShape[3] + colIn];\\\";case 4:return\\\"return w[row * wShape[3] / 4 + colIn];\\\";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(l)}`,w=(0,i.typeSnippet)(c),_=e?(0,i.typeSnippet)(u):(0,i.typeSnippet)(l),$=e?(0,i.typeSnippet)(l):(0,i.typeSnippet)(u);return`\\\\n    ${(0,i.activationFnSnippet)(o,s,4===c,4)}\\\\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${_} {\\\\n      ${e?v:y}\\\\n    }\\\\n\\\\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${$} {\\\\n      ${e?y:v}\\\\n    }\\\\n\\\\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {\\\\n      let col = colIn * ${c};\\\\n      if (row < dimAOuter && col < dimBOuter)\\\\n      {\\\\n      var value = valueIn;\\\\n      let outWidth = ${e?\\\"outShape[2]\\\":\\\"outShape[3]\\\"};\\\\n      ${d}\\\\n      ${(0,i.biasActivationSnippet)(a,o)}\\\\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\\\\n      }\\\\n    }`})(g,x,R,I,f,void 0,!1,k[0],k[1],k[2])}\\\\n            ${_?(0,u.makeMatMulPackedVec4Source)(O,A,!g,T):(0,u.makeMatMulPackedSource)(O,A,!g,T,!1,void 0,h)}`})}},85:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.utilFunctions=void 0,t.utilFunctions=\\\"\\\\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\\\\n  return dot(coords, vec4<i32>(\\\\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\\\\n}\\\\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\\\\n  return dot(coords, vec4<i32>(\\\\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\\\\n}\\\\n\\\"},158:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.makeMatMulPackedSource=t.makeMatMulPackedVec4Source=void 0,t.makeMatMulPackedVec4Source=(e,t,n=!1,r=32,a=!1,o=32,i=!1)=>{const s=t[1]*e[1],u=t[0]*e[0],l=n?s:r,c=n?r:s,p=l/t[0],d=r/t[1];if((!n||4!==p||4!==e[1])&&(n||3!==p&&4!==p)||l%t[0]!=0||r%t[1]!=0||4!==e[0])throw new Error(`If transposeA ${n} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\\\\n      Otherwise, innerElementSize ${p} must be 3 or 4.\\\\n  tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}. tileInner ${r} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\\\\nvar<workgroup> mm_Asub : array<array<vec${p}<f32>, ${l/p}>, ${c}>;\\\\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${u/e[0]}>, ${r}>;\\\\n\\\\nconst rowPerThread = ${e[1]};\\\\nconst colPerThread = ${e[0]};\\\\nconst innerElementSize = ${p};\\\\nconst tileInner = ${r};\\\\n\\\\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\\\\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\\\\n        @builtin(global_invocation_id) globalId : vec3<u32>,\\\\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\\\\n  let localRow = i32(localId.y);\\\\n  let tileRow = ${i?\\\"0\\\":\\\"localRow * rowPerThread\\\"};\\\\n  let tileCol = i32(localId.x);\\\\n\\\\n  let globalRow = ${i?\\\"0\\\":\\\"i32(globalId.y) * rowPerThread\\\"};\\\\n  let globalCol = i32(globalId.x);\\\\n  let batch = ${a?\\\"0\\\":\\\"i32(globalId.z)\\\"};\\\\n  let globalRowStart = i32(workgroupId.y) * ${s};\\\\n\\\\n  let numTiles = ${a?`${Math.ceil(o/r)}`:\\\"(dimInner - 1) / tileInner + 1\\\"};\\\\n  var kStart = ${a?`i32(globalId.z) * ${o}`:\\\"0\\\"};\\\\n\\\\n  var acc: array<vec4<f32>, rowPerThread>;\\\\n\\\\n  // Loop over shared dimension.\\\\n  let tileRowB = localRow * ${d};\\\\n  for (var t = 0; t < numTiles; t = t + 1) {\\\\n      // Load one tile of A into local memory.\\\\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n          let inputRow = tileRow + innerRow;\\\\n          let inputCol = tileCol;\\\\n          ${f=n,f?\\\"\\\\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\\\\n          kStart + inputRow,\\\\n          globalRowStart / innerElementSize + inputCol);\\\\n        \\\":\\\"\\\\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\\\\n          globalRow + innerRow,\\\\n          kStart / innerElementSize + inputCol);\\\\n        \\\"}\\\\n      }\\\\n\\\\n      // Load one tile of B into local memory.\\\\n      for (var innerRow = 0; innerRow < ${d}; innerRow = innerRow + 1) {\\\\n          let inputRow = tileRowB + innerRow;\\\\n          let inputCol = tileCol;\\\\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);\\\\n      }\\\\n      kStart = kStart + tileInner;\\\\n      workgroupBarrier();\\\\n\\\\n      // Compute acc values for a single thread.\\\\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\\\\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\\\\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\\\\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\\\\n          ${3===p?\\\"\\\":\\\"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];\\\"}\\\\n\\\\n          ${((e,t)=>e?`\\\\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\\\\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\\\\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\\\\n        ${3===t?\\\"\\\":\\\"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];\\\"}\\\\n        for (var i = 0; i < rowPerThread; i = i + 1) {\\\\n          acc[i] = BCached0 * ACached0[i] + acc[i];\\\\n          acc[i] = BCached1 * ACached1[i] + acc[i];\\\\n          acc[i] = BCached2 * ACached2[i] + acc[i];\\\\n          ${3===t?\\\"\\\":\\\"acc[i] = BCached3 * ACached3[i] + acc[i];\\\"}\\\\n        }`:`\\\\n        for (var i = 0; i < rowPerThread; i = i + 1) {\\\\n          let ACached = mm_Asub[tileRow + i][k];\\\\n          acc[i] = BCached0 * ACached.x + acc[i];\\\\n          acc[i] = BCached1 * ACached.y + acc[i];\\\\n          acc[i] = BCached2 * ACached.z + acc[i];\\\\n          ${3===t?\\\"\\\":\\\"acc[i] = BCached3 * ACached.w + acc[i];\\\"}\\\\n        }`)(n,p)}\\\\n      }\\\\n\\\\n      workgroupBarrier();\\\\n  }\\\\n\\\\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\\\\n  }\\\\n}`;var f};const n=e=>e?\\\"\\\\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\\\\n              kStart + inputRow,\\\\n              globalRowStart + inputCol);\\\\n            \\\":\\\"\\\\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\\\\n              globalRowStart + inputRow,\\\\n              kStart + inputCol);\\\\n            \\\";t.makeMatMulPackedSource=(e,t,r=!1,a=32,o=!1,i=32,s=!1)=>{const u=e[1]*t[1],l=e[0]*t[0],c=r?u:a,p=r?a:u;if(p%t[1]!=0||c%t[0]!=0||a%t[1]!=0)throw new Error(`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${a} must be divisible by workgroupSize[1]${t[1]}`);const d=p/t[1],f=c/t[0],h=a/t[1],g=s?`\\\\n    let localRow = i32(localId.y);\\\\n    let localCol = i32(localId.x);\\\\n    let globalRowStart = i32(workgroupId.y) * ${u};\\\\n    let globalColStart = i32(workgroupId.x) * ${l};\\\\n\\\\n    // Loop over shared dimension.\\\\n    for (var t = 0; t < numTiles; t = t + 1) {\\\\n      // Load one tile of A into local memory.\\\\n      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\\\\n        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\\\\n          ${n(r)}\\\\n        }\\\\n      }\\\\n      // Load one tile of B into local memory.\\\\n      for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${t[1]}) {\\\\n            for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {\\\\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\\\\n            kStart + inputRow,\\\\n            globalColStart + inputCol);\\\\n        }\\\\n      }\\\\n      kStart = kStart + tileInner;\\\\n      workgroupBarrier();\\\\n\\\\n      // Compute acc values for a single thread.\\\\n      var BCached : array<f32, colPerThread>;\\\\n      for (var k = 0; k < tileInner; k = k + 1) {\\\\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\\\\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\\\\n        }\\\\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n          let ACached = ${r?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\\\\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\\\\n                ACached * BCached[innerCol];\\\\n          }\\\\n        }\\\\n      }\\\\n      workgroupBarrier();\\\\n    }\\\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\\\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\\\\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\\\\n      }\\\\n    }\\\\n    `:`\\\\nlet tileRow = i32(localId.y) * rowPerThread;\\\\nlet tileCol = i32(localId.x) * colPerThread;\\\\n\\\\nlet globalRow = i32(globalId.y) * rowPerThread;\\\\nlet globalCol = i32(globalId.x) * colPerThread;\\\\nlet globalRowStart = i32(workgroupId.y) * ${u};\\\\n\\\\nlet tileRowA = i32(localId.y) * ${d};\\\\nlet tileColA = i32(localId.x) * ${f};\\\\nlet tileRowB = i32(localId.y) * ${h};\\\\n// Loop over shared dimension.\\\\nfor (var t = 0; t < numTiles; t = t + 1) {\\\\n  // Load one tile of A into local memory.\\\\n  for (var innerRow = 0; innerRow < ${d}; innerRow = innerRow + 1) {\\\\n    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {\\\\n      let inputRow = tileRowA + innerRow;\\\\n      let inputCol = tileColA + innerCol;\\\\n      ${n(r)}\\\\n    }\\\\n  }\\\\n\\\\n  // Load one tile of B into local memory.\\\\n  for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\\\\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n      let inputRow = tileRowB + innerRow;\\\\n      let inputCol = tileCol + innerCol;\\\\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\\\\n        kStart + inputRow,\\\\n        globalCol + innerCol);\\\\n    }\\\\n  }\\\\n  kStart = kStart + tileInner;\\\\n  workgroupBarrier();\\\\n\\\\n  // Compute acc values for a single thread.\\\\n  var BCached : array<f32, colPerThread>;\\\\n  for (var k = 0; k < tileInner; k = k + 1) {\\\\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\\\\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\\\\n    }\\\\n\\\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n      ${(e=>e?\\\"let ACached = mm_Asub[k][tileRow + innerRow];\\\":\\\"let ACached = mm_Asub[tileRow + innerRow][k];\\\")(r)}\\\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\\\\n      }\\\\n    }\\\\n  }\\\\n\\\\n  workgroupBarrier();\\\\n}\\\\n\\\\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\\\\n        acc[innerRow][innerCol]);\\\\n  }\\\\n}\\\\n`;return`\\\\n  var<workgroup> mm_Asub : array<array<f32, ${c}>, ${p}>;\\\\n  var<workgroup> mm_Bsub : array<array<f32, ${l}>, ${a}>;\\\\n  const rowPerThread = ${e[1]};\\\\n  const colPerThread = ${e[0]};\\\\n  const tileInner = ${a};\\\\n\\\\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\\\\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\\\\n        @builtin(global_invocation_id) globalId : vec3<u32>,\\\\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\\\\n    let batch = ${o?\\\"0\\\":\\\"i32(globalId.z)\\\"};\\\\n    let numTiles = ${o?`${Math.ceil(i/a)}`:\\\"(dimInner - 1) / tileInner + 1\\\"};\\\\n    var kStart = ${o?`i32(globalId.z) * ${i}`:\\\"0\\\"};\\\\n\\\\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\\\\n\\\\n    // Without this initialization strange values show up in acc.\\\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n        acc[innerRow][innerCol] = 0.0;\\\\n      }\\\\n    }\\\\n    ${g}\\\\n  }\\\\n`}},504:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.sub=t.pow=t.mul=t.div=t.add=void 0;const r=n(952),a=n(163),o=n(75),i=(e,t,n,i,s)=>{const u={name:t,inputTypes:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:s};return Object.assign(Object.assign({},u),{get:()=>((e,t,n,i,s,u=t.dataType)=>{var l,c;const p=!r.ShapeUtil.areEqual(t.dims,n.dims);let d=t.dims,f=r.ShapeUtil.size(t.dims),h=!1;if(p){const e=r.BroadcastUtil.calcShape(t.dims,n.dims,!1);if(!e)throw new Error(\\\"Can't perform binary op on the given tensors\\\");d=e,f=r.ShapeUtil.size(d);let a=1;for(let e=0;e<d.length;e++){const r=null!==(l=t.dims[t.dims.length-e])&&void 0!==l?l:1;if(r!==(null!==(c=n.dims[n.dims.length-e])&&void 0!==c?c:1))break;a*=r}a%4==0&&(h=!0)}else h=!0;return Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,a,i,s,u,l,c=\\\"f32\\\",p=\\\"f32\\\",d=\\\"f32\\\")=>{const f=r.ShapeUtil.size(a),h=Math.ceil(f/4);let g,m;\\\"string\\\"==typeof u?g=m=(e,t)=>`${u}((${e}),(${t}))`:\\\"function\\\"==typeof u?g=m=u:(g=u.scalar,m=u.vector);let b=\\\"\\\";const v=(0,o.createIndicesHelper)(\\\"output\\\",a);if(s){const e=e=>{const t=r.ShapeUtil.computeStrides(e),n=[];for(let r=e.length-1;r>=0;r--){const o=0===a.length?\\\"0u\\\":1===a.length?\\\"(*outputIndices)\\\":`(*outputIndices)[${r+a.length-e.length}]`;n.push(`${t[r]}u * (${o} % ${e[r]}u)`)}return n.length>0?n.join(\\\"+\\\"):\\\"0u\\\"};b=`\\\\n  ${v.o2iImpl}\\\\n\\\\n  fn calcOffsetA(outputIndices: ptr<function, ${v.iType}>) -> u32 {\\\\n    return ${e(t)};\\\\n  }\\\\n\\\\n  fn calcOffsetB(outputIndices: ptr<function, ${v.iType}>) -> u32 {\\\\n    return ${e(n)};\\\\n  }\\\\n  `}let y;if(i)y=s?`\\\\n      ${v.indicesVariableDeclaration(\\\"outputIndices\\\")}\\\\n      ${v.o2iCall(\\\"global_idx * 4u\\\",\\\"outputIndices\\\")}\\\\n      let offsetA = calcOffsetA(&outputIndices);\\\\n      let offsetB = calcOffsetB(&outputIndices);\\\\n      outputData[global_idx] = ${m(\\\"aData[offsetA / 4u]\\\",\\\"bData[offsetB / 4u]\\\")};`:`outputData[global_idx] = ${m(\\\"aData[global_idx]\\\",\\\"bData[global_idx]\\\")};`;else{if(!s)throw new Error(\\\"no necessary to use scalar implementation for element-wise binary op implementation.\\\");const e=e=>{const t=`aData[indexA${e}][componentA${e}]`,n=`bData[indexB${e}][componentB${e}]`;return`\\\\n      ${v.o2iCall(`global_idx * 4u + ${e}u`,\\\"outputIndices\\\")}\\\\n      let offsetA${e} = calcOffsetA(&outputIndices);\\\\n      let offsetB${e} = calcOffsetB(&outputIndices);\\\\n      let indexA${e} = offsetA${e} / 4u;\\\\n      let indexB${e} = offsetB${e} / 4u;\\\\n      let componentA${e} = offsetA${e} % 4u;\\\\n      let componentB${e} = offsetB${e} % 4u;\\\\n      outputData[global_idx][${e}] = ${g(t,n)};`};y=`\\\\n      ${v.indicesVariableDeclaration(\\\"outputIndices\\\")}\\\\n      ${e(0)}\\\\n      ${e(1)}\\\\n      ${e(2)}\\\\n      ${e(3)}`}return`\\\\n  @group(0) @binding(0) var<storage, read> aData : array<vec4<${c}>>;\\\\n  @group(0) @binding(1) var<storage, read> bData : array<vec4<${p}>>;\\\\n  @group(0) @binding(2) var<storage, read_write> outputData : array<vec4<${d}>>;\\\\n\\\\n  ${null!=l?l:\\\"\\\"}\\\\n  ${b}\\\\n\\\\n  ${e.mainStart()}\\\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(h)}\\\\n    ${y}\\\\n  }`})(e,t.dims,n.dims,d,h,p,i,s),outputs:[{dims:d,dataType:u,gpuDataType:a.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(f/64/(h?4:1))})})})(u,e[0],e[1],n,i)})};t.add=e=>{e.compute(i(e.inputs,\\\"Add\\\",((e,t)=>`${e}+${t}`)))},t.div=e=>{e.compute(i(e.inputs,\\\"Div\\\",((e,t)=>`${e}/${t}`)))},t.mul=e=>{e.compute(i(e.inputs,\\\"Mul\\\",((e,t)=>`${e}*${t}`)))},t.pow=e=>{e.compute(i(e.inputs,\\\"Pow\\\",{scalar:(e,t)=>`pow_f32(${e},${t})`,vector:(e,t)=>`pow_vf32(${e},${t})`},\\\"\\\\n    fn pow_f32(a : f32, b : f32) -> f32 {\\\\n      if (b == 0.0) {\\\\n        return 1.0;\\\\n      } else if (a < 0.0 && b != floor(b)) {\\\\n        return pow(a, b); // NaN\\\\n      }\\\\n      return select(sign(a), 1.0, round(abs(b) % 2.0) != 1.0) * pow(abs(a), b);\\\\n    }\\\\n    fn pow_vf32(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\\\\n      // TODO: implement vectorized pow\\\\n      return vec4<f32>(pow_f32(a.x, b.x), pow_f32(a.y, b.y), pow_f32(a.z, b.z), pow_f32(a.w, b.w));\\\\n    }\\\\n      \\\"))},t.sub=e=>{e.compute(i(e.inputs,\\\"Sub\\\",((e,t)=>`${e}-${t}`)))}},75:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.createShaderHelper=t.createIndicesHelper=t.WORKGROUP_SIZE=void 0;const r=n(952);t.WORKGROUP_SIZE=64,t.createIndicesHelper=(e,t)=>{const n=t.length<2?\\\"u32\\\":`array<u32, ${t.length}>`,a=r.ShapeUtil.computeStrides(t);let o=\\\"\\\";for(let e=0;e<t.length-1;e++)o+=`\\\\n    let dim${e} = current / ${a[e]}u;\\\\n    let rest${e} = current % ${a[e]}u;\\\\n    (*indices)[${e}] = dim${e};\\\\n    current = rest${e};\\\\n    `;o+=`(*indices)[${t.length-1}] = current;`;const i=t.length<2?\\\"\\\":`\\\\n  fn ih_o2i_${e}(offset: u32, indices: ptr<function, ${n}>) {\\\\n    var current = offset;\\\\n    ${o}\\\\n  }`,s=[];if(0===t.length)s.push(\\\"0u\\\");else if(t.length<2)s.push(\\\"(*indices)\\\");else for(let e=t.length-1;e>=0;e--)s.push(`${a[e]}u * ((*indices)[${e}])`);return{o2iImpl:i,o2iCall:(n,r)=>t.length<2?`${r}=${n};`:`ih_o2i_${e}(${n}, &${r});`,i2oImpl:t.length<2?\\\"\\\":`\\\\n  fn ih_i2o_${e}(indices: ptr<function, ${n}>) -> u32 {\\\\n    return ${s.join(\\\"+\\\")};\\\\n  }`,i2oExpression:(n,r)=>t.length<2?`(${r?\\\"*\\\":\\\"\\\"}${n})`:`ih_i2o_${e}(${r?\\\"\\\":\\\"&\\\"}${n})`,indicesVariableDeclaration:(e,t)=>`var ${e}:${n}${t?`=${n}(${t.join(\\\",\\\")})`:\\\"\\\"};`,iType:n}};class a{constructor(e){this.normalizedDispatchGroup=e}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${\\\"number\\\"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=t.WORKGROUP_SIZE){const n=\\\"number\\\"==typeof e?e:e[0],r=\\\"number\\\"==typeof e?1:e[1],a=\\\"number\\\"==typeof e?1:e[2],o=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${n}, ${r}, ${a})\\\\n  fn main(${o?\\\"@builtin(global_invocation_id) global_id : vec3<u32>\\\":\\\"@builtin(local_invocation_index) local_index : u32,\\\\n    @builtin(workgroup_id) workgroup_id : vec3<u32>\\\"}) {\\\\n    ${o?\\\"let global_idx = global_id.x;\\\":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +\\\\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${n*r*a}u + local_index;`}\\\\n  `}}t.createShaderHelper=e=>new a(e)},192:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.createGroupedConvProgramInfoLoader=void 0;const r=n(952),a=n(163),o=n(75),i=n(770),s=n(997);t.createGroupedConvProgramInfoLoader=(e,t,n)=>{const u=(l=e.length>2,c=t.cacheKey,{name:\\\"GroupedConv\\\",inputTypes:l?[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:c});var l,c;return Object.assign(Object.assign({},u),{get:()=>((e,t,n,u)=>{const l=e.length>2,c=l?\\\"value += b[output_channel];\\\":\\\"\\\",p=e[0].dims,d=e[1].dims,f=d[0]/n.group,h=\\\"f32\\\",{activationFunction:g,applyActivation:m}=(0,s.getActicationSnippet)(n),b=[`@group(0) @binding(0) var<storage, read> x : array<${h}>;`,`@group(0) @binding(1) var<storage, read> w : array<${h}>;`];l&&b.push(`@group(0) @binding(2) var<storage, read> b : array<${h}>;`);const v=\\\"NHWC\\\"===n.format,y=(0,i.calculateOutputShape)(p,d,n.dilations,n.pads,n.strides,v),w=r.ShapeUtil.size(y),_=(0,o.createIndicesHelper)(\\\"output\\\",y),$=(0,o.createIndicesHelper)(\\\"x\\\",p),S=(0,o.createIndicesHelper)(\\\"w\\\",d);return Object.assign(Object.assign({},t),{outputs:[{dims:u?u(y):y,dataType:e[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\\\\n  const strides: vec2<u32> = vec2(${n.strides[0]}u, ${n.strides[1]}u);\\\\n  const pads: vec2<u32> = vec2(${n.pads[0]}u, ${n.pads[1]}u);\\\\n\\\\n  ${b.join(\\\"\\\\n\\\")}\\\\n  @group(0) @binding(${b.length}) var<storage, read_write> output : array<${h}>;\\\\n\\\\n  ${g}\\\\n  ${_.o2iImpl}\\\\n  ${$.i2oImpl}\\\\n  ${S.i2oImpl}\\\\n\\\\n  ${e.mainStart()}\\\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(w)}\\\\n\\\\n    ${_.indicesVariableDeclaration(\\\"outputIndices\\\")}\\\\n    ${_.o2iCall(\\\"global_idx\\\",\\\"outputIndices\\\")}\\\\n    let batch: u32 = outputIndices[0];\\\\n    let output_channel: u32 = outputIndices[${v?3:1}];\\\\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${v?1:2}], outputIndices[${v?2:3}]) * strides - pads;\\\\n    let group_id: u32 = output_channel / ${f}u;\\\\n\\\\n    var value: ${h} = ${h}(0);\\\\n    for (var wInChannel: u32 = 0u; wInChannel < ${d[1]}u; wInChannel++) {\\\\n      let input_channel = group_id * ${d[1]}u + wInChannel;\\\\n      for (var wHeight: u32 = 0u; wHeight < ${d[2]}u; wHeight++) {\\\\n        let xHeight = xRCCorner.x + wHeight * ${n.dilations[0]}u;\\\\n\\\\n        if (xHeight < 0u || xHeight >= ${p[v?1:2]}u) {\\\\n          continue;\\\\n        }\\\\n\\\\n        for (var wWidth: u32 = 0u; wWidth < ${d[3]}u; wWidth++) {\\\\n          let xWidth = xRCCorner.y + wWidth * ${n.dilations[1]}u;\\\\n          if (xWidth < 0u || xWidth >= ${p[v?2:3]}u) {\\\\n            continue;\\\\n          }\\\\n\\\\n          ${$.indicesVariableDeclaration(\\\"xIndices\\\",v?[\\\"batch\\\",\\\"xHeight\\\",\\\"xWidth\\\",\\\"input_channel\\\"]:[\\\"batch\\\",\\\"input_channel\\\",\\\"xHeight\\\",\\\"xWidth\\\"])}\\\\n          let xVal = x[${$.i2oExpression(\\\"xIndices\\\")}];\\\\n          ${S.indicesVariableDeclaration(\\\"wIndices\\\",[\\\"output_channel\\\",\\\"wInChannel\\\",\\\"wHeight\\\",\\\"wWidth\\\"])}\\\\n          let wVal = w[${S.i2oExpression(\\\"wIndices\\\")}];\\\\n          value += xVal*wVal;\\\\n        }\\\\n      }\\\\n    }\\\\n    ${c}\\\\n    ${m}\\\\n    output[global_idx] = value;\\\\n  }`,dispatchGroup:()=>({x:Math.ceil(w/64)})})})(e,u,t,n)})}},770:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.conv=t.parseConvAttributes=t.calculateOutputShape=void 0;const r=n(952),a=n(387),o=n(192),i=n(822),s=n(997),u=n(625);t.calculateOutputShape=(e,t,n,r,a,o)=>{const i=e[0],s=e.slice(o?1:2,o?3:4),u=s.length,l=t[0],c=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),p=s.map(((e,t)=>e+r[t]+r[t+u])).map(((e,t)=>Math.floor((e-c[t]+a[t])/a[t])));return p.splice(0,0,i),p.splice(o?3:1,0,l),p};const l=(0,a.createAttributeWithCacheKey)({perm:[2,3,1,0]}),c=(e,t)=>{const n=e.kernelShape.slice();for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);const a=e.pads.slice();r.PoolConvUtil.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,a,\\\"NHWC\\\"===e.format,e.autoPad);const o=Object.assign({},e);return Object.assign(o,{kernelShape:n,pads:a,cacheKey:e.cacheKey}),o};t.parseConvAttributes=e=>{const t=(0,s.parseInternalActivationAttributes)(e),n=e.format,r=[\\\"NOTSET\\\",\\\"VALID\\\",\\\"SAME_UPPER\\\",\\\"SAME_LOWER\\\"][e.auto_pad],o=e.dilations,i=e.group,u=e.kernel_shape,l=e.pads,c=e.strides,p=e.w_is_const();return(0,a.createAttributeWithCacheKey)(Object.assign({autoPad:r,format:n,dilations:o,group:i,kernelShape:u,pads:l,strides:c,wIsConst:p},t))},t.conv=(e,n)=>{((e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error(\\\"Conv requires 2 or 3 inputs\\\");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error(\\\"currently only support conv 1D and 2D\\\");if(e[0].dims.length!==e[1].dims.length)throw new Error(\\\"filter does not have same dimension as input\\\");if(e[0].dims[\\\"NHWC\\\"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error(\\\"FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\\\");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error(\\\"invalid bias\\\");const n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error(\\\"invalid kernel shape\\\");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error(\\\"Conv input(X,W) should be float tensor\\\");if(3===e.length&&1!==e[2].dataType)throw new Error(\\\"Conv input(bias) should be float tensor\\\")})(e.inputs,n),3===e.inputs[0].dims.length?((e,t)=>{const n=\\\"NHWC\\\"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);const a=[0,t.pads[0],0,t.pads[1]],i=[1].concat(t.strides),s=[1].concat(t.dilations),u=[1].concat(t.kernelShape),l=c(Object.assign(Object.assign({},t),{pads:a,strides:i,dilations:s,kernelShape:u}),r);e.compute((0,o.createGroupedConvProgramInfoLoader)(r,l,(e=>n?[e[0],e[2],e[3]]:[])))})(e,n):((e,n,r)=>{var a;const s=c(r,n),p=3===n.length,d=\\\"NHWC\\\"===r.format,f=n[0].dims[d?1:2],h=n[0].dims[d?2:3],g=n[0].dims[d?3:1],m=n[1].dims[2],b=n[1].dims[3],v=(0,t.calculateOutputShape)(n[0].dims,n[1].dims,r.dilations,s.pads,r.strides,d),y=v[d?1:2],w=v[d?2:3],_=v[d?3:1];if(d&&m===f&&b===h&&\\\"VALID\\\"===r.autoPad||1===m&&1===b&&1===r.dilations[0]&&1===r.dilations[1]&&1===r.strides[0]&&1===r.strides[1]&&(\\\"SAME_UPPER\\\"===r.autoPad||\\\"SAME_LOWER\\\"===r.autoPad||\\\"VALID\\\"===r.autoPad))return void e.compute((0,o.createGroupedConvProgramInfoLoader)(n,s));if(!d||1!==r.group)return void e.compute((0,o.createGroupedConvProgramInfoLoader)(n,s));const $=d?y*w:_,S=d?_:y*w,A=m*b*g,O=null!==(a=e.customData.wT)&&void 0!==a?a:e.compute(Object.assign(Object.assign({},u.transposeProgramMetadata),{cacheHint:l.cacheKey,get:()=>(0,u.createTransposeProgramInfo)(n[1],l.perm)}),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.customData.wT&&(e.customData.wT=O);const E=[n[0],O];p&&(d||1!==n[2].dims.length?E.push(n[2]):E.push(n[2].reshape([n[2].dims[0],1,1]))),e.compute((0,i.createConv2DMatMulProgramInfoLoader)(E,s,v,$,S,A,p,!0),{inputs:E})})(e,e.inputs,n)}},822:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.createConv2DMatMulProgramInfoLoader=void 0;const r=n(163),a=n(456);t.createConv2DMatMulProgramInfoLoader=(e,t,n,o,i,s,u,l)=>{const c=((e,t)=>({name:\\\"Conv2DMatMul\\\",inputTypes:e?[r.GpuDataType.default,r.GpuDataType.default,r.GpuDataType.default]:[r.GpuDataType.default,r.GpuDataType.default],cacheHint:t}))(u,t.cacheKey);return Object.assign(Object.assign({},c),{get:()=>(0,a.createConv2DMatMulProgramInfo)(e,c,t,n,o,i,s,u,l)})}},997:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.parseInternalActivationAttributes=t.getActicationSnippet=void 0;const r=n(952);t.getActicationSnippet=e=>{switch(e.activation){case\\\"Relu\\\":return{activationFunction:\\\"\\\",applyActivation:\\\"value = max(value, 0.0);\\\"};case\\\"Sigmoid\\\":return{activationFunction:\\\"\\\",applyActivation:\\\"value = (1.0 / (1.0 + exp(-value)));\\\"};case\\\"Clip\\\":return{activationFunction:`const clip_min_=f32(${e.clipMin});const clip_max_=f32(${e.clipMax});`,applyActivation:\\\"value = clamp(value, clip_min_, clip_max_);\\\"};default:return{activationFunction:\\\"\\\",applyActivation:\\\"\\\"}}},t.parseInternalActivationAttributes=e=>{const t=(null==e?void 0:e.activation)||\\\"\\\";if(\\\"Clip\\\"===t){const[n,a]=(null==e?void 0:e.activation_params)||[r.MIN_CLIP,r.MAX_CLIP];return{activation:t,clipMax:a,clipMin:n,activationCacheKey:`${t}:${n},${a}`}}return{activation:t,activationCacheKey:t}}},271:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.parseGemmAttributes=t.gemm=void 0;const r=n(952),a=n(387),o=n(163);t.gemm=(e,t)=>{(e=>{if(!e)throw new Error(\\\"Input is missing\\\");if(e.length<2||e.length>3)throw new Error(\\\"Invaid input number.\\\");if(3===e.length&&e[2].dims.length>2)throw new Error(\\\"Invalid input shape of C\\\");if(1!==e[0].dataType||1!==e[1].dataType||3===e.length&&1!==e[2].dataType)throw new Error(\\\"Invalid input type.\\\");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error(\\\"Input types are mismatched\\\")})(e.inputs),e.compute(((e,t)=>{const n={name:\\\"Gemm\\\",inputTypes:3===e.length?[o.GpuDataType.default,o.GpuDataType.default,o.GpuDataType.default]:[o.GpuDataType.default,o.GpuDataType.default],cacheHint:t.cacheKey};return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const a=t[0].dims.slice(),i=t[1].dims.slice(),[s,u,l]=r.GemmUtil.getShapeOfGemmResult(a,n.transA,i,n.transB,3===t.length?t[2].dims:void 0),c=[s,u];if(!c)throw new Error(\\\"Can't use gemm on the given tensors\\\");const p=r.ShapeUtil.size(c);let d=\\\"\\\";n.transA&&n.transB?d=\\\"value += a[k * M + m] * b[n * K + k];\\\":n.transA&&!n.transB?d=\\\"value += a[k * M + m] * b[k * N + n];\\\":!n.transA&&n.transB?d=\\\"value += a[m * K + k] * b[n * K + k];\\\":n.transA||n.transB||(d=\\\"value += a[m * K + k] * b[k * N + n];\\\");const f=\\\"f32\\\",h=1===n.alpha?\\\"\\\":\\\"value *= alpha;\\\",g=3===t.length?`value += beta * c[${((e,t,n)=>{if(0===n.length)return\\\"0u\\\";const r=1===n.length&&1!==e||2===n.length&&n[0]!==e,a=n[n.length-1]!==t;let o=\\\"0u\\\";return r||(o+=`+ m * ${n[n.length-1]}u`),a||(o+=\\\"+n\\\"),o})(s,u,t[2].dims)}];`:\\\"\\\",m=[`@group(0) @binding(0) var<storage, read> a : array<${f}>;`,`@group(0) @binding(1) var<storage, read> b : array<${f}>;`];return 3===t.length&&m.push(`@group(0) @binding(2) var<storage, read> c : array<${f}>;`),Object.assign(Object.assign({},e),{outputs:[{dims:c,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>`\\\\n  const M: u32 = ${s}u;\\\\n  const N: u32 = ${u}u;\\\\n  const K: u32 = ${l}u;\\\\n  const alpha = ${f}(${n.alpha});\\\\n  const beta = ${f}(${n.beta});\\\\n\\\\n  ${m.join(\\\"\\\\n\\\")}\\\\n  @group(0) @binding(${t.length}) var<storage, read_write> output : array<${f}>;\\\\n\\\\n  ${e.mainStart()}\\\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(p)}\\\\n\\\\n    let m = global_id.x / N;\\\\n    let n = global_id.x % N;\\\\n\\\\n    var value = ${f}(0);\\\\n    for (var k: u32 = 0u; k<${l}u; k++) {\\\\n      ${d}\\\\n    }\\\\n\\\\n    ${h}\\\\n    ${g}\\\\n    output[global_id.x] = value;\\\\n\\\\n  }`,dispatchGroup:()=>({x:Math.ceil(p/64)})})})(n,e,t)})})(e.inputs,t))},t.parseGemmAttributes=e=>(0,a.createAttributeWithCacheKey)(e)},522:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.matMul=t.createMatmulProgramInfoLoader=void 0;const r=n(952),a=n(163),o=n(997);t.createMatmulProgramInfoLoader=(e,t)=>{const n=(i=e.length>2,s=t.activationCacheKey,{name:\\\"MatMul\\\",inputTypes:i?[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:s});var i,s;return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const i=t[0].dims,s=t[1].dims,u=r.BroadcastUtil.calcShape(i,s,!0);if(!u)throw new Error(\\\"Can't use matmul on the given tensors\\\");const l=r.ShapeUtil.size(u),c=\\\"f32\\\",{activationFunction:p,applyActivation:d}=(0,o.getActicationSnippet)(n),f=u[u.length-2],h=i[i.length-1],g=u[u.length-1];return Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\\\\n  const M: u32 = ${f}u;\\\\n  const N: u32 = ${g}u;\\\\n  const K: u32 = ${h}u;\\\\n\\\\n  @group(0) @binding(0) var<storage, read> a : array<${c}>;\\\\n  @group(0) @binding(1) var<storage, read> b : array<${c}>;\\\\n  @group(0) @binding(2) var<storage, read_write> output : array<${c}>;\\\\n\\\\n  ${p}\\\\n\\\\n  ${e.mainStart()}\\\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\\\\n\\\\n    let stack = global_idx / (M * N);\\\\n    let mn = global_idx % (M * N);\\\\n    let n = global_idx % N;\\\\n    let m = mn / N;\\\\n\\\\n    let offsetA = stack * (M * K);\\\\n    let offsetB = stack * (K * N);\\\\n\\\\n    var value = ${c}(0);\\\\n    for (var k: u32 = 0u; k<${h}u; k++) {\\\\n      value += a[offsetA + m * K + k] * b[offsetB + k * N + n];\\\\n    }\\\\n    ${d}\\\\n    output[global_idx] = value;\\\\n  }`,dispatchGroup:()=>({x:Math.ceil(l/64)})})})(n,e,t)})},t.matMul=e=>{(e=>{if(!e||2!==e.length)throw new Error(\\\"MatMul requires 2 inputs.\\\");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error(\\\"shared dimension does not match.\\\");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error(\\\"inputs should be float type\\\")})(e.inputs),e.compute((0,t.createMatmulProgramInfoLoader)(e.inputs,{activation:\\\"\\\",activationCacheKey:\\\"\\\"}))}},262:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.globalMaxPool=t.parseGlobalMaxPoolAttributes=t.parseMaxPoolAttributes=t.maxPool=t.globalAveragePool=t.parseGlobalAveragePoolAttributes=t.averagePool=t.parseAveragePoolAttributes=void 0;const r=n(952),a=n(387),o=n(163),i=n(75),s=e=>{if(!e||1!==e.length)throw new Error(\\\"Pool ops requires 1 input.\\\");if(4!==e[0].dims.length)throw new Error(\\\"Pool ops supports 2-D inputs only for now.\\\");if(1!==e[0].dataType)throw new Error(\\\"Invalid input type.\\\")},u=(e,t,n)=>{const a=\\\"NHWC\\\"===t.format,o=a?[e[0].dims[0],e[0].dims[3],e[0].dims[1],e[0].dims[2]]:e[0].dims.slice(),i=Object.hasOwnProperty.call(t,\\\"dilations\\\"),s=t.kernelShape.slice(),u=t.strides.slice(),l=i?t.dilations.slice():[],c=t.pads.slice();r.PoolConvUtil.adjustPoolAttributes(n,o,s,u,l,c);const p=r.PoolConvUtil.computePoolOutputShape(n,o,u,l,s,c,t.autoPad),d=Object.assign({},t);return i?Object.assign(d,{kernelShape:s,strides:u,pads:c,dilations:l,cacheKey:t.cacheKey}):Object.assign(d,{kernelShape:s,strides:u,pads:c,cacheKey:t.cacheKey}),[d,a?[p[0],p[2],p[3],p[1]]:p]},l=(e,t,n,a,o,s,u,l)=>{const c=\\\"NHWC\\\"===a.format,p=t.length,d=r.ShapeUtil.size(n),f=(0,i.createIndicesHelper)(\\\"output\\\",n),h=(0,i.createIndicesHelper)(\\\"x\\\",t);if(a.kernelShape.length<=2){const n=a.kernelShape[a.kernelShape.length-1],r=a.strides[a.strides.length-1],i=a.pads[a.pads.length/2-1],g=p-(c?2:1);let m=\\\"\\\",b=\\\"\\\",v=\\\"\\\";if(m=i+a.pads[a.pads.length-1]!==0?`\\\\n              for (var i: u32 = 0u; i < ${n}u; i++) {\\\\n                xIndices[${g}] = indices[${g}] * ${r} - ${i} + i;\\\\n                if (xIndices[${g}] < 0 || xIndices[${g}] >= ${t[g]}) {\\\\n                  pad++;\\\\n                  continue;\\\\n                }\\\\n                let x_val = x[${h.i2oExpression(\\\"xIndices\\\")}];\\\\n                ${o}\\\\n              }`:`\\\\n              for (var i: u32 = 0u; i < ${n}u; i++) {\\\\n                xIndices[${g}] = indices[${g}] * ${r} - ${i} + i;\\\\n                let x_val = x[${h.i2oExpression(\\\"xIndices\\\")}];\\\\n                ${o}\\\\n              }`,2===a.kernelShape.length){const e=a.kernelShape[a.kernelShape.length-2],r=a.strides[a.strides.length-2],o=a.pads[a.pads.length/2-2],i=a.pads[a.pads.length-2],s=p-(c?3:2),u=t[s];b=o+i!==0?`\\\\n                for (var j: u32 = 0u; j < ${e}u; j++) {\\\\n                  xIndices[${s}] = indices[${s}] * ${r} - ${o} + j;\\\\n                  if (xIndices[${s}] < 0 || xIndices[${s}] >= ${u}) {\\\\n                    pad+= ${n};\\\\n                    continue;\\\\n                  }\\\\n              `:`\\\\n                for (var j: u32 = 0u; j < ${e}u; j++) {\\\\n                  xIndices[${s}] = indices[${s}] * ${r} - ${o} + j;\\\\n                `,v=\\\"\\\\n              }\\\\n            \\\"}return`\\\\n            @group(0) @binding(0) var<storage, read> x : array<${u}>;\\\\n            @group(0) @binding(1) var<storage, read_write> output : array<${u}>;\\\\n\\\\n            ${f.o2iImpl}\\\\n            ${h.i2oImpl}\\\\n\\\\n            ${e.mainStart()}\\\\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(d)}\\\\n\\\\n              ${f.indicesVariableDeclaration(\\\"indices\\\")}\\\\n              ${f.o2iCall(\\\"global_idx\\\",\\\"indices\\\")}\\\\n              ${f.indicesVariableDeclaration(\\\"xIndices\\\")}\\\\n              ${f.o2iCall(\\\"global_idx\\\",\\\"xIndices\\\")}\\\\n\\\\n              var value: ${u} = ${u}(${l});\\\\n              var pad = 0;\\\\n              ${b}\\\\n              ${m}\\\\n              ${v}\\\\n              ${s}\\\\n\\\\n              output[global_idx] = value;\\\\n            }`}{if(c)throw new Error(\\\"Pooling with kernelShape.length > 2 is not supported for NHWC format.\\\");const n=r.ShapeUtil.size(a.kernelShape),i=r.ShapeUtil.computeStrides(a.kernelShape),g=i.length,m=a.pads.length;let b=\\\"\\\";return b=a.pads.reduce(((e,t)=>e+t))?`\\\\n                if (xIndices[j] >= inputDims[j]) {\\\\n                  pad++;\\\\n                  isPad = true;\\\\n                  break;\\\\n                }\\\\n              }\\\\n              if (!isPad) {\\\\n                let x_val = x[${h.i2oExpression(\\\"xIndices\\\")}];\\\\n                ${o}\\\\n              }`:`\\\\n              }\\\\n              let x_val = x[${h.i2oExpression(\\\"xIndices\\\")}];\\\\n              ${o}\\\\n            `,`\\\\n            @group(0) @binding(0) var<storage, read> x : array<${u}>;\\\\n            @group(0) @binding(1) var<storage, read_write> output : array<${u}>;\\\\n\\\\n            ${f.o2iImpl}\\\\n            ${h.i2oImpl}\\\\n\\\\n            const pads = array<u32, ${m}>(${a.pads.map((e=>`${e}u`)).join(\\\",\\\")});\\\\n            const inputDims = array<u32, ${p}>(${t.map((e=>`${e}u`)).join(\\\",\\\")});\\\\n            const kernelStrides = array<u32, ${g}>(${i.map((e=>`${e}u`)).join(\\\",\\\")});\\\\n            const strides = array<u32, ${g}>(${a.strides.map((e=>`${e}u`)).join(\\\",\\\")});\\\\n\\\\n            ${e.mainStart()}\\\\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(d)}\\\\n\\\\n              ${f.indicesVariableDeclaration(\\\"indices\\\")}\\\\n              ${f.o2iCall(\\\"global_idx\\\",\\\"indices\\\")}\\\\n              ${f.indicesVariableDeclaration(\\\"xIndices\\\")}\\\\n              ${f.o2iCall(\\\"global_idx\\\",\\\"xIndices\\\")}\\\\n\\\\n              var offsets: array<u32, ${g}>;\\\\n\\\\n              var value = ${u}(${l});\\\\n              var pad = 0;\\\\n              var isPad = false;\\\\n\\\\n              for (var i: u32 = 0u; i < ${n}u; i++) {\\\\n                var offset = i;\\\\n                for (var j = 0u; j < ${g-1}u; j++) {\\\\n                  offsets[j] = offset / kernelStrides[j];\\\\n                  offset -= offsets[j] * kernelStrides[j];\\\\n                }\\\\n                offsets[${g-1}] = offset;\\\\n\\\\n                isPad = false;\\\\n                for (var j = ${p-g}u; j < ${p}u; j++) {\\\\n                  xIndices[j] = indices[j] * strides[j - ${p-g}u]\\\\n                    + offsets[j - ${p-g}u] - pads[j - 2u];\\\\n                  ${b}\\\\n              }\\\\n              ${s}\\\\n\\\\n              output[global_idx] = value;\\\\n            }`}},c=e=>({format:e.format,autoPad:[\\\"NOTSET\\\",\\\"VALID\\\",\\\"SAME_UPPER\\\",\\\"SAME_LOWER\\\"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),p=(e,t,n,a)=>{const[i,s]=u(e,a,n),c=r.ShapeUtil.size(i.kernelShape),p=\\\"f32\\\";let d=\\\"\\\";return i.countIncludePad?d+=`value /= ${p}(${c});`:d+=`value /= ${p}(${c} - pad);`,Object.assign(Object.assign({},t),{outputs:[{dims:s,dataType:e[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:t=>l(t,e[0].dims,s,i,\\\"value += x_val;\\\",d,p,\\\"0.0\\\"),dispatchGroup:()=>({x:Math.ceil(r.ShapeUtil.size(s)/64)})})};t.parseAveragePoolAttributes=e=>{const t=0!==e.count_include_pad,n=c(e);if(0!==n.ceilMode)throw new Error(\\\"using ceil() in shape computation is not yet supported for AveragePool\\\");return(0,a.createAttributeWithCacheKey)(Object.assign({countIncludePad:t},n))},t.averagePool=(e,t)=>{s(e.inputs);const n={name:\\\"AveragePool\\\",inputTypes:[o.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>p(e.inputs,n,!1,t)}))};const d={autoPad:\\\"\\\",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:\\\"\\\"};t.parseGlobalAveragePoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},d),{cacheKey:t})},t.globalAveragePool=(e,t)=>{s(e.inputs);const n={name:\\\"GlobalAveragePool\\\",inputTypes:[o.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>p(e.inputs,n,!0,t)}))};const f=(e,t,n,a)=>{const[i,s]=u(e,a,n);return Object.assign(Object.assign({},t),{outputs:[{dims:s,dataType:e[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:t=>l(t,e[0].dims,s,i,\\\"\\\\n      value = max(x_val, value);\\\\n    \\\",\\\"\\\",\\\"f32\\\",\\\"-1e5\\\"),dispatchGroup:()=>({x:Math.ceil(r.ShapeUtil.size(s)/64)})})};t.maxPool=(e,t)=>{s(e.inputs);const n={name:\\\"MaxPool\\\",inputTypes:[o.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>f(e.inputs,n,!1,t)}))},t.parseMaxPoolAttributes=e=>{const t=e.storage_order,n=e.dilations,r=c(e);if(0!==t)throw new Error(\\\"column major storage order is not yet supported for MaxPool\\\");if(0!==r.ceilMode)throw new Error(\\\"using ceil() in shape computation is not yet supported for MaxPool\\\");return(0,a.createAttributeWithCacheKey)(Object.assign({storageOrder:t,dilations:n},r))},t.parseGlobalMaxPoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},d),{cacheKey:t})},t.globalMaxPool=(e,t)=>{s(e.inputs);const n={name:\\\"GlobalMaxPool\\\",inputTypes:[o.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>f(e.inputs,n,!0,t)}))}},31:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.parseReduceAttributes=t.reduceSumSquare=t.reduceSum=t.reduceProd=t.reduceMin=t.reduceMean=t.reduceMax=t.reduceLogSumExp=t.reduceL2=t.reduceL1=t.reduceLogSum=void 0;const r=n(952),a=n(387),o=n(163),i=n(75),s=e=>{if(!e||0===e.length||e.length>2)throw new Error(\\\"Reduce op requires 1 or 2 inputs.\\\");if(2===e.length&&1!==e[1].dims.length)throw new Error(\\\"Invalid axes input dims.\\\");if(1!==e[0].dataType)throw new Error(\\\"Invalid input type.\\\")},u=()=>[\\\"\\\",\\\"\\\",\\\"value = _A[inputIdx];\\\",\\\"\\\"],l=(e,t,n,s)=>{const l=1===e.length?n:((e,t)=>{const n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),(0,a.createAttributeWithCacheKey)({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})})(e,n),c={name:t,inputTypes:[o.GpuDataType.default],cacheHint:l.cacheKey};return Object.assign(Object.assign({},c),{get:()=>((e,t,n,a)=>{const s=[],u=t[0].dims,l=[],c=r.ShapeUtil.normalizeAxes(n.axes,t[0].dims.length),p=t[0].dims.length-(n.keepDims?0:c.length),d=a(t,c),f=(0,i.createIndicesHelper)(\\\"input\\\",u),h=\\\"\\\"===d[1]?\\\"\\\":`let inputIdx = ${f.i2oExpression(\\\"inputIndices\\\")};`;let g=`\\\\n          let inputIdx = ${f.i2oExpression(\\\"inputIndices\\\")};\\\\n          ${d[2]};`;const m=!n.noopWithEmptyAxes&&0===n.axes.length;for(let e=0;e<t[0].dims.length;e++)m||c.indexOf(e)>=0?(n.keepDims&&s.push(1),g=`for(var j${e}: u32 = 0; j${e} < ${t[0].dims[e]}; j${e}++) {\\\\n                            inputIndices[${e}] = j${e};\\\\n                            ${g}\\\\n                          }`):(p>1?l.push(`inputIndices[${e}] = outputIndices[${s.length}];`):l.push(`inputIndices[${e}] = outputIndices;`),s.push(t[0].dims[e]));const b=(0,i.createIndicesHelper)(\\\"output\\\",s),v=r.ShapeUtil.size(s),y=\\\"f32\\\";return Object.assign(Object.assign({},e),{getShaderSource:e=>`\\\\n          @group(0) @binding(0) var<storage, read> _A : array<${y}>;\\\\n          @group(0) @binding(1) var<storage, read_write> output : array<${y}>;\\\\n\\\\n          ${b.o2iImpl}\\\\n          ${f.i2oImpl}\\\\n\\\\n          ${e.mainStart()}\\\\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes(v)}\\\\n          ${f.indicesVariableDeclaration(\\\"inputIndices\\\")}\\\\n          ${b.indicesVariableDeclaration(\\\"outputIndices\\\")}\\\\n          ${b.o2iCall(\\\"global_idx\\\",\\\"outputIndices\\\")}\\\\n\\\\n          var value = ${y}(0);\\\\n\\\\n          ${l.join(\\\"\\\\n\\\")}\\\\n          ${d[0]}       // init ops for reduce max/min\\\\n          ${h}\\\\n          ${d[1]}\\\\n          ${g}\\\\n          ${d[3]}       // final computation for reduce mean\\\\n          output[global_idx] = value;\\\\n        }`,outputs:[{dims:s,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(v/64)})})})(c,[e[0]],l,l.noopWithEmptyAxes&&0===l.axes.length?u:s)})};t.reduceLogSum=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,\\\"ReduceLogSum\\\",t,(()=>[\\\"value = 0.0;\\\",\\\"\\\",\\\"value += _A[inputIdx];\\\",\\\"value = log(value);\\\"])),{inputs:[0]})},t.reduceL1=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,\\\"ReduceL1\\\",t,(()=>[\\\"value = 0.0;\\\",\\\"\\\",\\\"value += abs(_A[inputIdx]);\\\",\\\"\\\"])),{inputs:[0]})},t.reduceL2=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,\\\"ReduceL2\\\",t,(()=>[\\\"var t = f32(0); value = 0.0;\\\",\\\"\\\",\\\"t = _A[inputIdx]; value += (t * t);\\\",\\\"value = sqrt(value);\\\"])),{inputs:[0]})},t.reduceLogSumExp=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,\\\"ReduceLogSumExp\\\",t,(()=>[\\\"value = 0.0;\\\",\\\"\\\",\\\"value += exp(_A[inputIdx]);\\\",\\\"value = log(value);\\\"])),{inputs:[0]})},t.reduceMax=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,\\\"ReduceMax\\\",t,((e,t)=>{const n=[];for(let r=0;r<e[0].dims.length;r++)(t.indexOf(r)>=0||0===t.length)&&n.push(`inputIndices[${r}] = 0;`);return[`${n.join(\\\"\\\\n\\\")}`,\\\"value = _A[inputIdx];\\\",\\\"value = max(value, _A[inputIdx]);\\\",\\\"\\\"]})),{inputs:[0]})},t.reduceMean=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,\\\"ReduceMean\\\",t,((e,t)=>{let n=1;for(let r=0;r<e[0].dims.length;r++)(t.indexOf(r)>=0||0===t.length)&&(n*=e[0].dims[r]);return[\\\"value = 0.0;\\\",\\\"\\\",\\\"value += _A[inputIdx];\\\",`value = value / ${n}.;`]})),{inputs:[0]})},t.reduceMin=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,\\\"ReduceMin\\\",t,((e,t)=>{const n=[];for(let r=0;r<e[0].dims.length;r++)(t.indexOf(r)>=0||0===t.length)&&n.push(`inputIndices[${r}] = 0;`);return[`${n.join(\\\"\\\\n\\\")}`,\\\"value = _A[inputIdx];\\\",\\\"value = min(value, _A[inputIdx]);\\\",\\\"\\\"]})),{inputs:[0]})},t.reduceProd=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,\\\"ReduceProd\\\",t,(()=>[\\\"value = 1.0;\\\",\\\"\\\",\\\"value *= _A[inputIdx];\\\",\\\"\\\"])),{inputs:[0]})},t.reduceSum=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,\\\"ReduceSum\\\",t,(()=>[\\\"value = 0.0;\\\",\\\"\\\",\\\"value += _A[inputIdx];\\\",\\\"\\\"])),{inputs:[0]})},t.reduceSumSquare=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,\\\"ReduceSumSquare\\\",t,(()=>[\\\"var t = f32(0); value = 0.0;\\\",\\\"\\\",\\\"t = _A[inputIdx]; value += t * t;\\\",\\\"\\\"])),{inputs:[0]})},t.parseReduceAttributes=e=>(0,a.createAttributeWithCacheKey)(e)},625:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.parseTransposeAttributes=t.transpose=t.createTransposeProgramInfo=t.transposeProgramMetadata=void 0;const r=n(952),a=n(387),o=n(163),i=n(75);t.transposeProgramMetadata={name:\\\"Transpose\\\",inputTypes:[o.GpuDataType.default]};const s=(e,t)=>t&&t.length!==e.length?[...e.keys()].reverse():t;t.createTransposeProgramInfo=(e,n)=>{const a=e.dims,u=s(a,n),l=((e,t)=>r.ShapeUtil.sortBasedOnPerm(e,s(e,t)))(a,u),c=a.length,p=r.ShapeUtil.size(l),d=(0,i.createIndicesHelper)(\\\"output\\\",l),f=(0,i.createIndicesHelper)(\\\"a\\\",a);return Object.assign(Object.assign({},t.transposeProgramMetadata),{outputs:[{dims:l,dataType:e.dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>`\\\\n  @group(0) @binding(0) var<storage, read> a : array<f32>;\\\\n  @group(0) @binding(1) var<storage, read_write> output : array<f32>;\\\\n\\\\n  ${((e,t)=>{const n=[];n.push(`fn perm(a: ptr<function, array<u32, ${t}>>, i: ptr<function, array<u32, ${t}>>) {`);for(let r=0;r<t;++r)n.push(`\\\\t(*a)[${e[r]}]=(*i)[${r}];`);return n.push(\\\"\\\\t}\\\"),n.join(\\\"\\\\n\\\")})(u,c)}\\\\n  ${d.o2iImpl}\\\\n  ${f.i2oImpl}\\\\n\\\\n  ${e.mainStart()}\\\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(p)}\\\\n\\\\n    ${d.indicesVariableDeclaration(\\\"indices\\\")}\\\\n    ${d.o2iCall(\\\"global_idx\\\",\\\"indices\\\")}\\\\n    ${f.indicesVariableDeclaration(\\\"aIndices\\\")}\\\\n    perm(&aIndices, &indices);\\\\n\\\\n    output[global_idx] = a[${f.i2oExpression(\\\"aIndices\\\")}];\\\\n  }`,dispatchGroup:()=>({x:Math.ceil(p/64)})})},t.transpose=(e,n)=>{(e=>{if(!e||1!==e.length)throw new Error(\\\"Transpose requires 1 input.\\\");if(1!==e[0].dataType)throw new Error(\\\"input should be float tensor\\\")})(e.inputs),e.compute(Object.assign(Object.assign({},t.transposeProgramMetadata),{cacheHint:n.cacheKey,get:()=>(0,t.createTransposeProgramInfo)(e.inputs[0],n.perm)}))},t.parseTransposeAttributes=e=>(0,a.createAttributeWithCacheKey)({perm:e.perm})},302:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.thresholdedRelu=t.tanh=t.tan=t.sqrt=t.sinh=t.sin=t.sigmoid=t.relu=t.reciprocal=t.neg=t.leakyRelu=t.floor=t.exp=t.erf=t.elu=t.parseAlphaAttributes=t.cosh=t.cos=t.ceil=t.clip=t.clipV10=t.atanh=t.atan=t.asinh=t.asin=t.acosh=t.acos=t.abs=void 0;const r=n(952),a=n(387),o=n(163),i=(e,t,n,a,i)=>{const s={name:t,inputTypes:[o.GpuDataType.default],cacheHint:i};return Object.assign(Object.assign({},s),{get:()=>((e,t,n,a)=>Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,r)=>{const a=Math.ceil(t/4);let o=\\\"\\\";return o=\\\"string\\\"==typeof n?`${n}(a)`:n(\\\"a\\\"),`\\\\n  @group(0) @binding(0) var<storage, read> inputData : array<vec4<f32>>;\\\\n  @group(0) @binding(1) var<storage, read_write> outputData : array<vec4<f32>>;\\\\n\\\\n  ${null!=r?r:\\\"\\\"}\\\\n\\\\n  ${e.mainStart()}\\\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(a)}\\\\n\\\\n    let a = inputData[global_idx];\\\\n    outputData[global_idx] = ${o};\\\\n  }`})(e,r.ShapeUtil.size(t.dims),n,a),outputs:[{dims:t.dims,dataType:t.dataType,gpuDataType:o.GpuDataType.default}],dispatchGroup:e=>({x:Math.ceil(r.ShapeUtil.size(e[0].dims)/64/4)})}))(s,e,n,a)})};t.abs=e=>{e.compute(i(e.inputs[0],\\\"Abs\\\",\\\"abs\\\"))},t.acos=e=>{e.compute(i(e.inputs[0],\\\"Acos\\\",\\\"acos\\\"))},t.acosh=e=>{e.compute(i(e.inputs[0],\\\"Acosh\\\",\\\"acosh\\\"))},t.asin=e=>{e.compute(i(e.inputs[0],\\\"Asin\\\",\\\"asin\\\"))},t.asinh=e=>{e.compute(i(e.inputs[0],\\\"Asinh\\\",\\\"asinh\\\"))},t.atan=e=>{e.compute(i(e.inputs[0],\\\"Atan\\\",\\\"atan\\\"))},t.atanh=e=>{e.compute(i(e.inputs[0],\\\"Atanh\\\",\\\"atanh\\\"))},t.clipV10=(e,t)=>{e.compute(i(e.inputs[0],\\\"Clip\\\",(e=>`clamp(${e}, clip_min_, clip_max_)`),`\\\\n    const clip_min_: vec4<f32> = vec4(f32(${t.min}));\\\\n    const clip_max_: vec4<f32> = vec4(f32(${t.max}));\\\\n`,t.cacheKey),{inputs:[0]})},t.clip=e=>{const n=(e=>{const t=e.length>=2?e[1].getFloat32Array()[0]:r.MIN_CLIP,n=e.length>=3?e[2].getFloat32Array()[0]:r.MAX_CLIP;return(0,a.createAttributeWithCacheKey)({min:t,max:n})})(e.inputs);(0,t.clipV10)(e,n)},t.ceil=e=>{e.compute(i(e.inputs[0],\\\"Ceil\\\",\\\"ceil\\\"))},t.cos=e=>{e.compute(i(e.inputs[0],\\\"Cos\\\",\\\"cos\\\"))},t.cosh=e=>{e.compute(i(e.inputs[0],\\\"Cosh\\\",\\\"cosh\\\"))},t.parseAlphaAttributes=e=>(0,a.createAttributeWithCacheKey)(e),t.elu=(e,t)=>{e.compute(i(e.inputs[0],\\\"Elu\\\",(e=>`elu_vf32(${e})`),`\\\\n  const elu_alpha_: f32 = f32(${t.alpha});\\\\n\\\\n  fn elu_f32(a: f32) -> f32 {\\\\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\\\\n  }\\\\n\\\\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\\\\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\\\\n  }`,t.cacheKey))},t.erf=e=>{e.compute(i(e.inputs[0],\\\"Erf\\\",(e=>`erf_vf32(${e})`),\\\"\\\\n  const r0: f32 = 0.3275911;\\\\n  const r1: f32 = 0.254829592;\\\\n  const r2: f32 = -0.284496736;\\\\n  const r3: f32 = 1.421413741;\\\\n  const r4: f32 = -1.453152027;\\\\n  const r5: f32 = 1.061405429;\\\\n\\\\n  fn erf_vf32(v: vec4<f32>) -> vec4<f32> {\\\\n    let absv = abs(v);\\\\n    let x = 1.0 / (1.0 + r0 * absv);\\\\n    return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\\\\n  }\\\"))},t.exp=e=>{e.compute(i(e.inputs[0],\\\"Exp\\\",\\\"exp\\\"))},t.floor=e=>{e.compute(i(e.inputs[0],\\\"Floor\\\",\\\"floor\\\"))},t.leakyRelu=(e,t)=>{e.compute(i(e.inputs[0],\\\"LeakyRelu\\\",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<f32>(0.0))`),`const leaky_relu_alpha_: f32 = f32(${t.alpha});`,t.cacheKey))},t.neg=e=>{e.compute(i(e.inputs[0],\\\"Neg\\\",(e=>`-${e}`)))},t.reciprocal=e=>{e.compute(i(e.inputs[0],\\\"Reciprocal\\\",(e=>`1.0/${e}`)))},t.relu=e=>{e.compute(i(e.inputs[0],\\\"Relu\\\",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > vec4<f32>(0.0))`)))},t.sigmoid=e=>{e.compute(i(e.inputs[0],\\\"Sigmoid\\\",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},t.sin=e=>{e.compute(i(e.inputs[0],\\\"Sin\\\",\\\"sin\\\"))},t.sinh=e=>{e.compute(i(e.inputs[0],\\\"Sinh\\\",\\\"sinh\\\"))},t.sqrt=e=>{e.compute(i(e.inputs[0],\\\"Sqrt\\\",\\\"sqrt\\\"))},t.tan=e=>{e.compute(i(e.inputs[0],\\\"Tan\\\",\\\"tan\\\"))},t.tanh=e=>{e.compute(i(e.inputs[0],\\\"Tanh\\\",\\\"tanh\\\"))},t.thresholdedRelu=(e,t)=>(e.compute(i(e.inputs[0],\\\"ThresholdedRelu\\\",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${t.alpha});`,t.cacheKey)),0)},305:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.ProgramManager=void 0;const r=n(955),a=n(75);t.ProgramManager=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,r){const a=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.profilingEnabled&&o.writeTimestamp(this.backend.profilingQuerySet,0),o.setPipeline(e.computePipeline);const i=[];for(const e of t)i.push({binding:i.length,resource:{buffer:e.buffer}});for(const e of n)i.push({binding:i.length,resource:{buffer:e.buffer}});const s=a.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:i});if(o.setBindGroup(0,s),o.dispatchWorkgroups(...r),this.backend.pendingDispatchNumber++,this.backend.profilingEnabled){o.writeTimestamp(this.backend.profilingQuerySet,1);const e=this.backend.gpuDataManager.create(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),t=this.backend.gpuDataManager.create(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet,0,2,e.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(e.buffer,0,t.buffer,0,16),this.backend.flush();const n=this.backend.currentKernelId,r=this.backend.kernels.get(n)[0];t.buffer.mapAsync(GPUMapMode.READ).then((()=>{const a=new BigUint64Array(t.buffer.getMappedRange()),o=a[0],i=a[1];t.buffer.unmap(),void 0===this.backend.profilingTimeBase&&(this.backend.profilingTimeBase=o);const s=Number(o-this.backend.profilingTimeBase),u=Number(i-this.backend.profilingTimeBase);if(!Number.isSafeInteger(s)||!Number.isSafeInteger(u))throw new RangeError(\\\"incorrect timestamp range\\\");this.backend.gpuDataManager.release(e.id),this.backend.gpuDataManager.release(t.id),console.log(`[profiling] kernel \\\"${n}|${r}\\\" execution time: ${u-s} ns`)}))}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(e,t){const n=this.backend.device,o=e.getShaderSource((0,a.createShaderHelper)(t)),i=n.createShaderModule({code:o});return(0,r.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] shader code: ${o}`)),{programInfo:e,computePipeline:n.createComputePipeline({compute:{module:i,entryPoint:\\\"main\\\"},layout:\\\"auto\\\"})}}normalizeDispatchGroupSize(e){const t=\\\"number\\\"==typeof e?e:e.x,n=\\\"number\\\"==typeof e?1:e.y||1,r=\\\"number\\\"==typeof e?1:e.z||1,a=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=a&&n<=a&&r<=a)return[t,n,r];const o=t*n*r;let i=Math.ceil(Math.sqrt(o));if(i>a){if(i=Math.ceil(Math.cbrt(o)),i>a)throw new Error(\\\"Total dispatch size exceeds WebGPU maximum.\\\");return[i,i,i]}return[i,i,1]}}},163:(e,t)=>{\\\"use strict\\\";var n;Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.GpuDataType=void 0,(n=t.GpuDataType||(t.GpuDataType={}))[n.default=0]=\\\"default\\\",n[n.upload=1]=\\\"upload\\\",n[n.profile=2]=\\\"profile\\\"},918:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;const r=n(263),a=n(497);t.setRunOptions=e=>{const t=(0,r.getInstance)();let n=0;const o=[],i=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))i.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))i.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(i.terminate=!1);let r=0;return void 0!==(null==e?void 0:e.tag)&&(r=(0,a.allocWasmString)(e.tag,o)),n=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,r),0===n&&(0,a.checkLastError)(\\\"Can't create run options.\\\"),void 0!==(null==e?void 0:e.extra)&&(0,a.iterateExtraOptions)(e.extra,\\\"\\\",new WeakSet,((e,r)=>{const i=(0,a.allocWasmString)(e,o),s=(0,a.allocWasmString)(r,o);0!==t._OrtAddRunConfigEntry(n,i,s)&&(0,a.checkLastError)(`Can't set a run config entry: ${e} - ${r}.`)})),[n,o]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),o.forEach((e=>t._free(e))),e}}},622:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;const r=n(263),a=n(497);t.setSessionOptions=e=>{var t,n,o,i;const s=(0,r.getInstance)();let u=0;const l=[],c=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\"),e.executionProviders&&e.executionProviders.some((e=>\\\"webgpu\\\"===(\\\"string\\\"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)})(c);try{const e=(e=>{switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(null!==(t=c.graphOptimizationLevel)&&void 0!==t?t:\\\"all\\\"),p=(e=>{switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(null!==(n=c.executionMode)&&void 0!==n?n:\\\"sequential\\\"),d=\\\"string\\\"==typeof c.logId?(0,a.allocWasmString)(c.logId,l):0,f=null!==(o=c.logSeverityLevel)&&void 0!==o?o:2;if(!Number.isInteger(f)||f<0||f>4)throw new Error(`log serverity level is not valid: ${f}`);const h=null!==(i=c.logVerbosityLevel)&&void 0!==i?i:0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);const g=\\\"string\\\"==typeof c.optimizedModelFilePath?(0,a.allocWasmString)(c.optimizedModelFilePath,l):0;return u=s._OrtCreateSessionOptions(e,!!c.enableCpuMemArena,!!c.enableMemPattern,p,!!c.enableProfiling,0,d,f,h,g),0===u&&(0,a.checkLastError)(\\\"Can't create session options.\\\"),c.executionProviders&&((e,t,n)=>{for(const o of t){let t=\\\"string\\\"==typeof o?o:o.name;switch(t){case\\\"xnnpack\\\":t=\\\"XNNPACK\\\";break;case\\\"webnn\\\":if(t=\\\"WEBNN\\\",\\\"string\\\"!=typeof o){const t=o;if(null==t?void 0:t.deviceType){const o=(0,a.allocWasmString)(\\\"deviceType\\\",n),i=(0,a.allocWasmString)(t.deviceType,n);0!==(0,r.getInstance)()._OrtAddSessionConfigEntry(e,o,i)&&(0,a.checkLastError)(`Can't set a session config entry: 'deviceType' - ${t.deviceType}.`)}if(null==t?void 0:t.powerPreference){const o=(0,a.allocWasmString)(\\\"powerPreference\\\",n),i=(0,a.allocWasmString)(t.powerPreference,n);0!==(0,r.getInstance)()._OrtAddSessionConfigEntry(e,o,i)&&(0,a.checkLastError)(`Can't set a session config entry: 'powerPreference' - ${t.powerPreference}.`)}}break;case\\\"webgpu\\\":t=\\\"JS\\\";break;case\\\"wasm\\\":case\\\"cpu\\\":continue;default:throw new Error(`not supported execution provider: ${t}`)}const i=(0,a.allocWasmString)(t,n);0!==(0,r.getInstance)()._OrtAppendExecutionProvider(e,i)&&(0,a.checkLastError)(`Can't append execution provider: ${t}.`)}})(u,c.executionProviders,l),void 0!==c.extra&&(0,a.iterateExtraOptions)(c.extra,\\\"\\\",new WeakSet,((e,t)=>{const n=(0,a.allocWasmString)(e,l),r=(0,a.allocWasmString)(t,l);0!==s._OrtAddSessionConfigEntry(u,n,r)&&(0,a.checkLastError)(`Can't set a session config entry: ${e} - ${t}.`)})),[u,l]}catch(e){throw 0!==u&&s._OrtReleaseSessionOptions(u),l.forEach((e=>s._free(e))),e}}},917:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.logLevelStringToEnum=t.tensorTypeToTypedArrayConstructor=t.getTensorElementSize=t.tensorDataTypeEnumToString=t.tensorDataTypeStringToEnum=void 0,t.tensorDataTypeStringToEnum=e=>{switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float16\\\":return 10;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(`unsupported data type: ${e}`)}},t.tensorDataTypeEnumToString=e=>{switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 10:return\\\"float16\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int64\\\";case 13:return\\\"uint64\\\";default:throw new Error(`unsupported data type: ${e}`)}},t.getTensorElementSize=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],t.tensorTypeToTypedArrayConstructor=e=>{switch(e){case\\\"float16\\\":case\\\"uint16\\\":return Uint16Array;case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":case\\\"bool\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},t.logLevelStringToEnum=e=>{switch(e){case\\\"verbose\\\":return 0;case\\\"info\\\":return 1;case\\\"warning\\\":return 2;case\\\"error\\\":return 3;case\\\"fatal\\\":return 4;default:throw new Error(`unsupported logging level: ${e}`)}}},259:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.createSessionFinalize=t.createSessionAllocate=t.initRuntime=void 0;const r=n(675),a=n(918),o=n(622),i=n(917),s=n(263),u=n(497);t.initRuntime=async e=>{var t,n;t=e.wasm.numThreads,n=(0,i.logLevelStringToEnum)(e.logLevel),0!==(0,s.getInstance)()._OrtInit(t,n)&&(0,u.checkLastError)(\\\"Can't initialize onnxruntime.\\\"),await(0,r.init)((0,s.getInstance)(),e)};const l=new Map;t.createSessionAllocate=e=>{const t=(0,s.getInstance)(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},t.createSessionFinalize=(e,t)=>{const n=(0,s.getInstance)();let r=0,a=0,i=[];const c=[],p=[];try{[a,i]=(0,o.setSessionOptions)(t),r=n._OrtCreateSession(e[0],e[1],a),0===r&&(0,u.checkLastError)(\\\"Can't create a session.\\\");const[d,f]=(e=>{const t=(0,s.getInstance)(),n=t.stackSave();try{const n=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,n,n+4)&&(0,u.checkLastError)(\\\"Can't get session input/output count.\\\"),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(n)}})(r),h=[],g=[];for(let e=0;e<d;e++){const t=n._OrtGetInputName(r,e);0===t&&(0,u.checkLastError)(\\\"Can't get an input name.\\\"),c.push(t),h.push(n.UTF8ToString(t))}for(let e=0;e<f;e++){const t=n._OrtGetOutputName(r,e);0===t&&(0,u.checkLastError)(\\\"Can't get an output name.\\\"),p.push(t),g.push(n.UTF8ToString(t))}return l.set(r,[r,c,p]),[r,h,g]}catch(e){throw c.forEach((e=>n._OrtFree(e))),p.forEach((e=>n._OrtFree(e))),0!==r&&n._OrtReleaseSession(r),e}finally{n._free(e[0]),0!==a&&n._OrtReleaseSessionOptions(a),i.forEach((e=>n._free(e)))}},t.createSession=(e,n)=>{const r=(0,t.createSessionAllocate)(e);return(0,t.createSessionFinalize)(r,n)},t.releaseSession=e=>{const t=(0,s.getInstance)(),n=l.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);const[r,a,o]=n;a.forEach((e=>t._OrtFree(e))),o.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(r),l.delete(e)},t.run=async(e,t,n,r,o)=>{const c=(0,s.getInstance)(),p=l.get(e);if(!p)throw new Error(`cannot run inference. invalid session id: ${e}`);const[d,f,h]=p,g=t.length,m=r.length;let b=0,v=[];const y=[],w=[];try{[b,v]=(0,a.setRunOptions)(o);for(let e=0;e<g;e++){const t=n[e][0],r=n[e][1],a=n[e][2];let o,s;if(Array.isArray(a)){s=4*a.length,o=c._malloc(s),w.push(o);let e=o/4;for(let t=0;t<a.length;t++){if(\\\"string\\\"!=typeof a[t])throw new TypeError(`tensor data at index ${t} is not a string`);c.HEAPU32[e++]=(0,u.allocWasmString)(a[t],w)}}else s=a.byteLength,o=c._malloc(s),w.push(o),c.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,s),o);const l=c.stackSave(),p=c.stackAlloc(4*r.length);try{let n=p/4;r.forEach((e=>c.HEAP32[n++]=e));const a=c._OrtCreateTensor((0,i.tensorDataTypeStringToEnum)(t),o,s,p,r.length);0===a&&(0,u.checkLastError)(`Can't create tensor for input[${e}].`),y.push(a)}finally{c.stackRestore(l)}}const e=c.stackSave(),s=c.stackAlloc(4*g),l=c.stackAlloc(4*g),p=c.stackAlloc(4*m),_=c.stackAlloc(4*m);try{let e=s/4,n=l/4,a=p/4,o=_/4;for(let r=0;r<g;r++)c.HEAPU32[e++]=y[r],c.HEAPU32[n++]=f[t[r]];for(let e=0;e<m;e++)c.HEAPU32[a++]=0,c.HEAPU32[o++]=h[r[e]];let v=c._OrtRun(d,l,s,g,_,m,p,b);const w=c.jsepRunPromise;w&&void 0!==w.then&&(v=await w);const $=[];0!==v&&(0,u.checkLastError)(\\\"failed to call OrtRun().\\\");for(let e=0;e<m;e++){const t=c.HEAPU32[p/4+e],n=c.stackSave(),r=c.stackAlloc(16);let a,o=0;try{v=c._OrtGetTensorData(t,r,r+4,r+8,r+12),0!==v&&(0,u.checkLastError)(`Can't access output tensor data on index ${e}.`);let n=r/4;const s=c.HEAPU32[n++];o=c.HEAPU32[n++];const l=c.HEAPU32[n++],p=c.HEAPU32[n++],d=[];for(let e=0;e<p;e++)d.push(c.HEAPU32[l/4+e]);c._OrtFree(l);const f=0===d.length?1:d.reduce(((e,t)=>e*t));if(a=(0,i.tensorDataTypeEnumToString)(s),\\\"string\\\"===a){const e=[];let t=o/4;for(let n=0;n<f;n++){const r=c.HEAPU32[t++],a=n===f-1?void 0:c.HEAPU32[t]-r;e.push(c.UTF8ToString(r,a))}$.push([a,d,e])}else{const e=new((0,i.tensorTypeToTypedArrayConstructor)(a))(f);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(c.HEAPU8.subarray(o,o+e.byteLength)),$.push([a,d,e])}}finally{c.stackRestore(n),\\\"string\\\"===a&&o&&c._free(o),c._OrtReleaseTensor(t)}}return $}finally{c.stackRestore(e)}}finally{y.forEach((e=>c._OrtReleaseTensor(e))),w.forEach((e=>c._free(e))),0!==b&&c._OrtReleaseRunOptions(b),v.forEach((e=>c._free(e)))}},t.endProfiling=e=>{const t=(0,s.getInstance)(),n=l.get(e);if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],a=t._OrtEndProfiling(r);0===a&&(0,u.checkLastError)(\\\"Can't get an profile file name.\\\"),t._OrtFree(a)},t.extractTransferableBuffers=e=>{const t=[];for(const n of e){const e=n[2];!Array.isArray(e)&&e.buffer&&t.push(e.buffer)}return t}},263:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!(\\\"get\\\"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;const i=o(n(449)),s=n(932),u=n(474);let l,c=!1,p=!1,d=!1;t.initializeWebAssembly=async e=>{if(c)return Promise.resolve();if(p)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(d)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");p=!0;const t=e.initTimeout,r=e.numThreads,a=e.simd,o=r>1&&(()=>{try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),f=a&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(e){return!1}})(),h=e.wasmPaths,g=\\\"string\\\"==typeof h?h:void 0,m=((e,t)=>t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\")(f,o),b=\\\"object\\\"==typeof h?h[m]:void 0;let v=!1;const y=[];if(t>0&&y.push(new Promise((e=>{setTimeout((()=>{v=!0,e()}),t)}))),y.push(new Promise(((e,t)=>{const r=o?u:s,a={locateFile:(e,t)=>o&&e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(154)],{type:\\\"text/javascript\\\"})):e.endsWith(\\\".wasm\\\")?b||(null!=g?g:t)+m:t+e};if(o)if(\\\"undefined\\\"==typeof Blob)a.mainScriptUrlOrBlob=i.join(__dirname,\\\"ort-wasm-threaded.js\\\");else{const e=`var ortWasmThreaded=(function(){var _scriptDir;return ${r.toString()}})();`;a.mainScriptUrlOrBlob=new Blob([e],{type:\\\"text/javascript\\\"})}r(a).then((t=>{p=!1,c=!0,l=t,e()}),(e=>{p=!1,d=!0,t(e)}))}))),await Promise.race(y),v)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},t.getInstance=()=>{if(c&&l)return l;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=()=>{var e;!c||p||d||(p=!0,null===(e=l.PThread)||void 0===e||e.terminateAllThreads(),l=void 0,p=!1,c=!1,d=!0)}},497:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.checkLastError=t.iterateExtraOptions=t.allocWasmString=void 0;const r=n(263);t.allocWasmString=(e,t)=>{const n=(0,r.getInstance)(),a=n.lengthBytesUTF8(e)+1,o=n._malloc(a);return n.stringToUTF8(e,o,a),t.push(o),o},t.iterateExtraOptions=(e,n,r,a)=>{if(\\\"object\\\"==typeof e&&null!==e){if(r.has(e))throw new Error(\\\"Circular reference in options\\\");r.add(e)}Object.entries(e).forEach((([e,o])=>{const i=n?n+e:e;if(\\\"object\\\"==typeof o)(0,t.iterateExtraOptions)(o,i+\\\".\\\",r,a);else if(\\\"string\\\"==typeof o||\\\"number\\\"==typeof o)a(i,o.toString());else{if(\\\"boolean\\\"!=typeof o)throw new Error(\\\"Can't handle extra config type: \\\"+typeof o);a(i,o?\\\"1\\\":\\\"0\\\")}}))},t.checkLastError=e=>{const t=(0,r.getInstance)(),n=t.stackSave();try{const n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);const r=t.HEAP32[n/4],a=t.HEAPU32[n/4+1],o=a?t.UTF8ToString(a):\\\"\\\";throw new Error(`${e} ERROR_CODE: ${r}, ERROR_MESSAGE: ${o}`)}finally{t.stackRestore(n)}}},474:(e,t,n)=>{var _scriptDir,r=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\\\"undefined\\\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){function t(){return T.buffer!=I.buffer&&B(),I}function r(){return T.buffer!=I.buffer&&B(),k}function a(){return T.buffer!=I.buffer&&B(),D}function o(){return T.buffer!=I.buffer&&B(),U}function i(){return T.buffer!=I.buffer&&B(),j}var s,u,l;s||(s=void 0!==e?e:{}),s.ready=new Promise(((e,t)=>{u=e,l=t}));var c,p,d,f=Object.assign({},s),h=\\\"./this.program\\\",g=(e,t)=>{throw t},m=\\\"object\\\"==typeof window,b=\\\"function\\\"==typeof importScripts,v=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,y=s.ENVIRONMENT_IS_PTHREAD||!1,w=\\\"\\\";function _(e){return s.locateFile?s.locateFile(e,w):w+e}if(v){var $=n(384),S=n(908);let t;w=b?S.dirname(w)+\\\"/\\\":__dirname+\\\"/\\\",c=(e,t)=>(e=e.startsWith(\\\"file://\\\")?new URL(e):S.normalize(e),$.readFileSync(e,t?void 0:\\\"utf8\\\")),d=e=>((e=c(e,!0)).buffer||(e=new Uint8Array(e)),e),p=(e,t,n,r=!0)=>{e=e.startsWith(\\\"file://\\\")?new URL(e):S.normalize(e),$.readFile(e,r?void 0:\\\"utf8\\\",((e,a)=>{e?n(e):t(r?a.buffer:a)}))},!s.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),g=(e,t)=>{throw process.exitCode=e,t},s.inspect=()=>\\\"[Emscripten Module object]\\\";try{t=n(925)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=t.Worker}else(m||b)&&(b?w=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(w=document.currentScript.src),_scriptDir&&(w=_scriptDir),w=0!==w.indexOf(\\\"blob:\\\")?w.substr(0,w.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",v||(c=e=>{var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},b&&(d=e=>{var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),p=(e,t,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));v&&\\\"undefined\\\"==typeof performance&&(global.performance=n(953).performance);var A=console.log.bind(console),O=console.warn.bind(console);v&&(A=(...e)=>$.writeSync(1,e.join(\\\" \\\")+\\\"\\\\n\\\"),O=(...e)=>$.writeSync(2,e.join(\\\" \\\")+\\\"\\\\n\\\"));var E,C=s.print||A,P=s.printErr||O;Object.assign(s,f),f=null,s.thisProgram&&(h=s.thisProgram),s.quit&&(g=s.quit),s.wasmBinary&&(E=s.wasmBinary);var M=s.noExitRuntime||!0;\\\"object\\\"!=typeof WebAssembly&&Q(\\\"no native wasm support detected\\\");var T,x,R,I,k,D,U,j,G=!1;function B(){var e=T.buffer;s.HEAP8=I=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=D=new Int32Array(e),s.HEAPU8=k=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=U=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=j=new Float64Array(e)}var L=s.INITIAL_MEMORY||16777216;if(5242880<=L||Q(\\\"INITIAL_MEMORY should be larger than STACK_SIZE, was \\\"+L+\\\"! (STACK_SIZE=5242880)\\\"),y)T=s.wasmMemory;else if(s.wasmMemory)T=s.wasmMemory;else if(!((T=new WebAssembly.Memory({initial:L/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw P(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),v&&P(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\\\"),Error(\\\"bad memory\\\");B(),L=T.buffer.byteLength;var W,z=[],F=[],H=[],N=0;function K(){return M||0<N}function Y(){var e=s.preRun.shift();z.unshift(e)}var V,q=0,J=null,X=null;function Q(e){throw s.onAbort&&s.onAbort(e),P(e=\\\"Aborted(\\\"+e+\\\")\\\"),G=!0,R=1,e=new WebAssembly.RuntimeError(e+\\\". Build with -sASSERTIONS for more info.\\\"),l(e),e}function Z(e){return e.startsWith(\\\"data:application/octet-stream;base64,\\\")}function ee(e){try{if(e==V&&E)return new Uint8Array(E);if(d)return d(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){Q(e)}}function te(e,t,n){return function(e){if(!E&&(m||b)){if(\\\"function\\\"==typeof fetch&&!e.startsWith(\\\"file://\\\"))return fetch(e,{credentials:\\\"same-origin\\\"}).then((t=>{if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+e+\\\"'\\\";return t.arrayBuffer()})).catch((()=>ee(e)));if(p)return new Promise(((t,n)=>{p(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>ee(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{P(\\\"failed to asynchronously prepare wasm: \\\"+e),Q(e)}))}function ne(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function re(e){e.terminate(),e.onmessage=()=>{}}function ae(e){(e=de.Ha[e])||Q(),de.hb(e)}function oe(e){var t=de.bb();if(!t)return 6;de.Ka.push(t),de.Ha[e.Ja]=t,t.Ja=e.Ja;var n={cmd:\\\"run\\\",start_routine:e.ib,arg:e.$a,pthread_ptr:e.Ja};return v&&t.unref(),t.postMessage(n,e.ob),0}Z(V=\\\"ort-wasm-threaded.wasm\\\")||(V=_(V));var ie=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function se(e,t,n){var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&ie)return ie.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,n):e.subarray(t,n));for(r=\\\"\\\";t<n;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function ue(e,t){return(e>>>=0)?se(r(),e,t):\\\"\\\"}function le(e){if(y)return Ke(1,1,e);R=e,K()||(de.jb(),s.onExit&&s.onExit(e),G=!0),g(e,new ne(e))}function ce(e){if(R=e,y)throw he(e),\\\"unwind\\\";le(e)}function pe(e){e instanceof ne||\\\"unwind\\\"==e||g(1,e)}var de={Na:[],Ka:[],Va:[],Ha:{},Ra:function(){y&&de.cb()},rb:function(){},cb:function(){de.receiveObjectTransfer=de.gb,de.threadInitTLS=de.Ua,de.setExitStatus=de.Ta,M=!1},Ta:function(e){R=e},tb:[\\\"$terminateWorker\\\"],jb:function(){for(var e of de.Ka)re(e);for(e of de.Na)re(e);de.Na=[],de.Ka=[],de.Ha=[]},hb:function(e){var t=e.Ja;delete de.Ha[t],de.Na.push(e),de.Ka.splice(de.Ka.indexOf(e),1),e.Ja=0,ht(t)},gb:function(){},Ua:function(){de.Va.forEach((e=>e()))},fb:e=>new Promise((t=>{e.onmessage=n=>{var r=(n=n.data).cmd;if(e.Ja&&(de.ab=e.Ja),n.targetThread&&n.targetThread!=ct()){var a=de.Ha[n.sb];a?a.postMessage(n,n.transferList):P('Internal error! Worker sent a message \\\"'+r+'\\\" to target pthread '+n.targetThread+\\\", but that thread no longer exists!\\\")}else\\\"checkMailbox\\\"===r?Ue():\\\"spawnThread\\\"===r?oe(n):\\\"cleanupThread\\\"===r?ae(n.thread):\\\"killThread\\\"===r?(n=n.thread,r=de.Ha[n],delete de.Ha[n],re(r),ht(n),de.Ka.splice(de.Ka.indexOf(r),1),r.Ja=0):\\\"cancelThread\\\"===r?de.Ha[n.thread].postMessage({cmd:\\\"cancel\\\"}):\\\"loaded\\\"===r?(e.loaded=!0,t(e)):\\\"print\\\"===r?C(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"printErr\\\"===r?P(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"alert\\\"===r?alert(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"setimmediate\\\"===n.target?e.postMessage(n):\\\"callHandler\\\"===r?s[n.handler](...n.args):r&&P(\\\"worker sent an unknown command \\\"+r);de.ab=void 0},e.onerror=e=>{throw P(\\\"worker sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message),e},v&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})));var n,r=[];for(n of[\\\"onExit\\\",\\\"onAbort\\\",\\\"print\\\",\\\"printErr\\\"])s.hasOwnProperty(n)&&r.push(n);e.postMessage({cmd:\\\"load\\\",handlers:r,urlOrBlob:s.mainScriptUrlOrBlob||_scriptDir,wasmMemory:T,wasmModule:x})})),eb:function(e){e()},Za:function(){var e=_(\\\"ort-wasm-threaded.worker.js\\\");e=new Worker(e),de.Na.push(e)},bb:function(){return 0==de.Na.length&&(de.Za(),de.fb(de.Na[0])),de.Na.pop()}};function fe(e){for(;0<e.length;)e.shift()(s)}function he(e){if(y)return Ke(2,0,e);ce(e)}s.PThread=de,s.establishStackSpace=function(){var e=ct(),t=a()[e+52>>2>>>0];vt(t,t-(e=a()[e+56>>2>>>0])),wt(t)};var ge=[];function me(e){this.Qa=e-24,this.Ya=function(e){o()[this.Qa+4>>2>>>0]=e},this.Xa=function(e){o()[this.Qa+8>>2>>>0]=e},this.Ra=function(e,t){this.Wa(),this.Ya(e),this.Xa(t)},this.Wa=function(){o()[this.Qa+16>>2>>>0]=0}}function be(e,t,n,r){return y?Ke(3,1,e,t,n,r):ve(e,t,n,r)}function ve(e,t,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return P(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;var a=[];return y&&0===a.length?be(e,t,n,r):(e={ib:n,Ja:e,$a:r,ob:a},y?(e.qb=\\\"spawnThread\\\",postMessage(e,a),0):oe(e))}function ye(e,t,n){return y?Ke(4,1,e,t,n):0}function we(e,t){if(y)return Ke(5,1,e,t)}function _e(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t}function $e(e,t,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(n>=r)break;t[n++>>>0]=i}else{if(2047>=i){if(n+1>=r)break;t[n++>>>0]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++>>>0]=224|i>>12}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63}t[n++>>>0]=128|i>>6&63}t[n++>>>0]=128|63&i}}return t[n>>>0]=0,n-a}function Se(e,t,n){return $e(e,r(),t,n)}function Ae(e,t){if(y)return Ke(6,1,e,t)}function Oe(e,t,n){if(y)return Ke(7,1,e,t,n)}function Ee(e,t,n){return y?Ke(8,1,e,t,n):0}function Ce(e,t){if(y)return Ke(9,1,e,t)}function Pe(e,t,n){if(y)return Ke(10,1,e,t,n)}function Me(e,t,n,r){if(y)return Ke(11,1,e,t,n,r)}function Te(e,t,n,r){if(y)return Ke(12,1,e,t,n,r)}function xe(e,t,n,r){if(y)return Ke(13,1,e,t,n,r)}function Re(e){if(y)return Ke(14,1,e)}function Ie(e,t){if(y)return Ke(15,1,e,t)}function ke(e,t,n){if(y)return Ke(16,1,e,t,n)}function De(e){\\\"function\\\"==typeof Atomics.pb&&(Atomics.pb(a(),e>>2,e).value.then(Ue),e+=128,Atomics.store(a(),e>>2,1))}function Ue(){var e=ct();e&&(De(e),function(e){if(!G)try{if(bt(),!K())try{y?mt(R):ce(R)}catch(e){pe(e)}}catch(e){pe(e)}}())}function je(e){return o()[e>>>2]+4294967296*a()[e+4>>>2]}function Ge(e){return 0==e%4&&(0!=e%100||0==e%400)}s.invokeEntryPoint=function(e,t){var n=ge[e];n||(e>=ge.length&&(ge.length=e+1),ge[e]=n=W.get(e)),e=n(t),K()?de.Ta(e):mt(e)},s.__emscripten_thread_mailbox_await=De,s.checkMailbox=Ue;var Be,Le=[0,31,60,91,121,152,182,213,244,274,305,335],We=[0,31,59,90,120,151,181,212,243,273,304,334];function ze(e){return(Ge(e.getFullYear())?Le:We)[e.getMonth()]+e.getDate()-1}function Fe(e,t,n,r,a,o,i){return y?Ke(17,1,e,t,n,r,a,o,i):-52}function He(e,t,n,r,a,o){if(y)return Ke(18,1,e,t,n,r,a,o)}function Ne(e){var t=_e(e)+1,n=pt(t);return n&&Se(e,n,t),n}function Ke(e,t){var n=arguments.length-2,r=arguments;return function(e){var t=yt();return e=e(),wt(t),e}((()=>{for(var a=_t(8*n),o=a>>3,s=0;s<n;s++){var u=r[2+s];i()[o+s>>>0]=u}return ft(e,n,a,t)}))}Be=v?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var Ye,Ve=[],qe={};function Je(){if(!Ye){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:h||\\\"./this.program\\\"};for(e in qe)void 0===qe[e]?delete t[e]:t[e]=qe[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Ye=n}return Ye}function Xe(e,n){if(y)return Ke(19,1,e,n);var r=0;return Je().forEach((function(a,i){var s=n+r;for(i=o()[e+4*i>>2>>>0]=s,s=0;s<a.length;++s)t()[i++>>0>>>0]=a.charCodeAt(s);t()[i>>0>>>0]=0,r+=a.length+1})),0}function Qe(e,t){if(y)return Ke(20,1,e,t);var n=Je();o()[e>>2>>>0]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),o()[t>>2>>>0]=r,0}function Ze(e){return y?Ke(21,1,e):52}function et(e,t,n,r){return y?Ke(22,1,e,t,n,r):52}function tt(e,t,n,r,a){return y?Ke(23,1,e,t,n,r,a):70}var nt=[null,[],[]];function rt(e,t,n,a){if(y)return Ke(24,1,e,t,n,a);for(var i=0,s=0;s<n;s++){var u=o()[t>>2>>>0],l=o()[t+4>>2>>>0];t+=8;for(var c=0;c<l;c++){var p=r()[u+c>>>0],d=nt[e];0===p||10===p?((1===e?C:P)(se(d,0)),d.length=0):d.push(p)}i+=l}return o()[a>>2>>>0]=i,0}function at(e){return(at=function(){if(\\\"object\\\"==typeof crypto&&\\\"function\\\"==typeof crypto.getRandomValues)return e=>(e.set(crypto.getRandomValues(new Uint8Array(e.byteLength))),e);if(v)try{var e=n(760);if(e.randomFillSync)return t=>e.randomFillSync(t);var t=e.randomBytes;return e=>(e.set(t(e.byteLength)),e)}catch(e){}Q(\\\"initRandomDevice\\\")}())(e)}var ot=[31,29,31,30,31,30,31,31,30,31,30,31],it=[31,28,31,30,31,30,31,31,30,31,30,31];function st(e,n,r,o){function i(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function s(e,t){return i(e,t,\\\"0\\\")}function u(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function l(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function c(e){var t=e.La;for(e=new Date(new Date(e.Ma+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(Ge(e.getFullYear())?ot:it)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=l(new Date(e.getFullYear(),0,4)),n=l(n),0>=u(t,e)?0>=u(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var p=a()[o+40>>2>>>0];for(var d in o={mb:a()[o>>2>>>0],lb:a()[o+4>>2>>>0],Oa:a()[o+8>>2>>>0],Sa:a()[o+12>>2>>>0],Pa:a()[o+16>>2>>>0],Ma:a()[o+20>>2>>>0],Ia:a()[o+24>>2>>>0],La:a()[o+28>>2>>>0],ub:a()[o+32>>2>>>0],kb:a()[o+36>>2>>>0],nb:p?ue(p):\\\"\\\"},r=ue(r),p={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(d,\\\"g\\\"),p[d]);var f=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),h=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(d in p={\\\"%a\\\":function(e){return f[e.Ia].substring(0,3)},\\\"%A\\\":function(e){return f[e.Ia]},\\\"%b\\\":function(e){return h[e.Pa].substring(0,3)},\\\"%B\\\":function(e){return h[e.Pa]},\\\"%C\\\":function(e){return s((e.Ma+1900)/100|0,2)},\\\"%d\\\":function(e){return s(e.Sa,2)},\\\"%e\\\":function(e){return i(e.Sa,2,\\\" \\\")},\\\"%g\\\":function(e){return c(e).toString().substring(2)},\\\"%G\\\":function(e){return c(e)},\\\"%H\\\":function(e){return s(e.Oa,2)},\\\"%I\\\":function(e){return 0==(e=e.Oa)?e=12:12<e&&(e-=12),s(e,2)},\\\"%j\\\":function(e){for(var t=0,n=0;n<=e.Pa-1;t+=(Ge(e.Ma+1900)?ot:it)[n++]);return s(e.Sa+t,3)},\\\"%m\\\":function(e){return s(e.Pa+1,2)},\\\"%M\\\":function(e){return s(e.lb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.Oa&&12>e.Oa?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return s(e.mb,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.Ia||7},\\\"%U\\\":function(e){return s(Math.floor((e.La+7-e.Ia)/7),2)},\\\"%V\\\":function(e){var t=Math.floor((e.La+7-(e.Ia+6)%7)/7);if(2>=(e.Ia+371-e.La-2)%7&&t++,t)53==t&&(4==(n=(e.Ia+371-e.La)%7)||3==n&&Ge(e.Ma)||(t=1));else{t=52;var n=(e.Ia+7-e.La-1)%7;(4==n||5==n&&Ge(e.Ma%400-1))&&t++}return s(t,2)},\\\"%w\\\":function(e){return e.Ia},\\\"%W\\\":function(e){return s(Math.floor((e.La+7-(e.Ia+6)%7)/7),2)},\\\"%y\\\":function(e){return(e.Ma+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.Ma+1900},\\\"%z\\\":function(e){var t=0<=(e=e.kb);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.nb},\\\"%%\\\":function(){return\\\"%\\\"}},r=r.replace(/%%/g,\\\"\\\\0\\\\0\\\"),p)r.includes(d)&&(r=r.replace(new RegExp(d,\\\"g\\\"),p[d](o)));return d=function(e){var t=Array(_e(e)+1);return $e(e,t,0,t.length),t}(r=r.replace(/\\\\0\\\\0/g,\\\"%\\\")),d.length>n?0:(function(e,n){t().set(e,n>>>0)}(d,e),d.length-1)}de.Ra();var ut=[null,le,he,be,ye,we,Ae,Oe,Ee,Ce,Pe,Me,Te,xe,Re,Ie,ke,Fe,He,Xe,Qe,Ze,et,tt,rt],lt={b:function(e,t,n){throw new me(e).Ra(t,n),e},p:function(){Q(\\\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\\\")},N:function(e){dt(e,!b,1,!m),de.Ua()},k:function(e){y?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):ae(e)},C:ve,h:ye,U:we,y:Ae,B:Oe,V:Ee,R:Ce,J:Pe,Q:Me,o:Te,A:xe,w:Re,T:Ie,x:ke,D:function(){return 131072},Y:function(){return!0},u:function(e,t){e==t?setTimeout((()=>Ue())):y?postMessage({targetThread:e,cmd:\\\"checkMailbox\\\"}):(e=de.Ha[e])&&e.postMessage({cmd:\\\"checkMailbox\\\"})},L:function(){return-1},M:De,X:function(e){v&&de.Ha[e].ref()},G:function(e,t){e=new Date(1e3*je(e)),a()[t>>2>>>0]=e.getUTCSeconds(),a()[t+4>>2>>>0]=e.getUTCMinutes(),a()[t+8>>2>>>0]=e.getUTCHours(),a()[t+12>>2>>>0]=e.getUTCDate(),a()[t+16>>2>>>0]=e.getUTCMonth(),a()[t+20>>2>>>0]=e.getUTCFullYear()-1900,a()[t+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[t+28>>2>>>0]=e},H:function(e,t){e=new Date(1e3*je(e)),a()[t>>2>>>0]=e.getSeconds(),a()[t+4>>2>>>0]=e.getMinutes(),a()[t+8>>2>>>0]=e.getHours(),a()[t+12>>2>>>0]=e.getDate(),a()[t+16>>2>>>0]=e.getMonth(),a()[t+20>>2>>>0]=e.getFullYear()-1900,a()[t+24>>2>>>0]=e.getDay();var n=0|ze(e);a()[t+28>>2>>>0]=n,a()[t+36>>2>>>0]=-60*e.getTimezoneOffset(),n=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(n!=r&&e.getTimezoneOffset()==Math.min(r,n)),a()[t+32>>2>>>0]=e},I:function(e){var t=new Date(a()[e+20>>2>>>0]+1900,a()[e+16>>2>>>0],a()[e+12>>2>>>0],a()[e+8>>2>>>0],a()[e+4>>2>>>0],a()[e>>2>>>0],0),n=a()[e+32>>2>>>0],r=t.getTimezoneOffset(),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=new Date(t.getFullYear(),0,1).getTimezoneOffset(),s=Math.min(i,o);return 0>n?a()[e+32>>2>>>0]=Number(o!=i&&s==r):0<n!=(s==r)&&(o=Math.max(i,o),t.setTime(t.getTime()+6e4*((0<n?s:o)-r))),a()[e+24>>2>>>0]=t.getDay(),n=0|ze(t),a()[e+28>>2>>>0]=n,a()[e>>2>>>0]=t.getSeconds(),a()[e+4>>2>>>0]=t.getMinutes(),a()[e+8>>2>>>0]=t.getHours(),a()[e+12>>2>>>0]=t.getDate(),a()[e+16>>2>>>0]=t.getMonth(),a()[e+20>>2>>>0]=t.getYear(),t.getTime()/1e3|0},E:Fe,F:He,t:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}var i=(new Date).getFullYear(),s=new Date(i,0,1),u=new Date(i,6,1);i=s.getTimezoneOffset();var l=u.getTimezoneOffset(),c=Math.max(i,l);o()[e>>2>>>0]=60*c,a()[t>>2>>>0]=Number(i!=l),e=r(s),t=r(u),e=Ne(e),t=Ne(t),l<i?(o()[n>>2>>>0]=e,o()[n+4>>2>>>0]=t):(o()[n>>2>>>0]=t,o()[n+4>>2>>>0]=e)},c:function(){Q(\\\"\\\")},S:function(){Q(\\\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\\\")},l:function(){},i:function(){return Date.now()},W:function(){throw N+=1,\\\"unwind\\\"},v:function(){return 4294901760},e:Be,f:function(){return v?n(993).cpus().length:navigator.hardwareConcurrency},K:function(e,t,n){Ve.length=t,n>>=3;for(var r=0;r<t;r++)Ve[r]=i()[n+r>>>0];return ut[e].apply(null,Ve)},s:function(e){var t=r().length;if((e>>>=0)<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var a=t*(1+.2/n);a=Math.min(a,e+100663296);var o=Math,i=o.min;a=Math.max(e,a),a+=(65536-a%65536)%65536;e:{var s=T.buffer;try{T.grow(i.call(o,4294901760,a)-s.byteLength+65535>>>16),B();var u=1;break e}catch(e){}u=void 0}if(u)return!0}return!1},O:Xe,P:Qe,j:ce,g:Ze,n:et,q:tt,m:rt,r:function(e,t){return at(r().subarray(e>>>0,e+t>>>0)),0},a:T||s.wasmMemory,z:st,d:function(e,t,n,r){return st(e,t,n,r)}};!function(){function e(e,t){return e=e.exports,s.asm=e,de.Va.push(s.asm.va),W=s.asm.wa,F.unshift(s.asm.Z),x=t,de.eb((()=>{if(q--,s.monitorRunDependencies&&s.monitorRunDependencies(q),0==q&&(null!==J&&(clearInterval(J),J=null),X)){var e=X;X=null,e()}})),e}var t={a:lt};if(q++,s.monitorRunDependencies&&s.monitorRunDependencies(q),s.instantiateWasm)try{return s.instantiateWasm(t,e)}catch(e){P(\\\"Module.instantiateWasm callback failed with error: \\\"+e),l(e)}(function(e,t){var n=V;return E||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||Z(n)||n.startsWith(\\\"file://\\\")||v||\\\"function\\\"!=typeof fetch?te(n,e,t):fetch(n,{credentials:\\\"same-origin\\\"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return P(\\\"wasm streaming compile failed: \\\"+r),P(\\\"falling back to ArrayBuffer instantiation\\\"),te(n,e,t)}))))})(t,(function(t){e(t.instance,t.module)})).catch(l)}(),s._OrtInit=function(){return(s._OrtInit=s.asm._).apply(null,arguments)},s._OrtGetLastError=function(){return(s._OrtGetLastError=s.asm.$).apply(null,arguments)},s._OrtCreateSessionOptions=function(){return(s._OrtCreateSessionOptions=s.asm.aa).apply(null,arguments)},s._OrtAppendExecutionProvider=function(){return(s._OrtAppendExecutionProvider=s.asm.ba).apply(null,arguments)},s._OrtAddSessionConfigEntry=function(){return(s._OrtAddSessionConfigEntry=s.asm.ca).apply(null,arguments)},s._OrtReleaseSessionOptions=function(){return(s._OrtReleaseSessionOptions=s.asm.da).apply(null,arguments)},s._OrtCreateSession=function(){return(s._OrtCreateSession=s.asm.ea).apply(null,arguments)},s._OrtReleaseSession=function(){return(s._OrtReleaseSession=s.asm.fa).apply(null,arguments)},s._OrtGetInputOutputCount=function(){return(s._OrtGetInputOutputCount=s.asm.ga).apply(null,arguments)},s._OrtGetInputName=function(){return(s._OrtGetInputName=s.asm.ha).apply(null,arguments)},s._OrtGetOutputName=function(){return(s._OrtGetOutputName=s.asm.ia).apply(null,arguments)},s._OrtFree=function(){return(s._OrtFree=s.asm.ja).apply(null,arguments)},s._OrtCreateTensor=function(){return(s._OrtCreateTensor=s.asm.ka).apply(null,arguments)},s._OrtGetTensorData=function(){return(s._OrtGetTensorData=s.asm.la).apply(null,arguments)},s._OrtReleaseTensor=function(){return(s._OrtReleaseTensor=s.asm.ma).apply(null,arguments)},s._OrtCreateRunOptions=function(){return(s._OrtCreateRunOptions=s.asm.na).apply(null,arguments)},s._OrtAddRunConfigEntry=function(){return(s._OrtAddRunConfigEntry=s.asm.oa).apply(null,arguments)},s._OrtReleaseRunOptions=function(){return(s._OrtReleaseRunOptions=s.asm.pa).apply(null,arguments)},s._OrtRun=function(){return(s._OrtRun=s.asm.qa).apply(null,arguments)},s._OrtEndProfiling=function(){return(s._OrtEndProfiling=s.asm.ra).apply(null,arguments)};var ct=s._pthread_self=function(){return(ct=s._pthread_self=s.asm.sa).apply(null,arguments)},pt=s._malloc=function(){return(pt=s._malloc=s.asm.ta).apply(null,arguments)};s._free=function(){return(s._free=s.asm.ua).apply(null,arguments)},s.__emscripten_tls_init=function(){return(s.__emscripten_tls_init=s.asm.va).apply(null,arguments)};var dt=s.__emscripten_thread_init=function(){return(dt=s.__emscripten_thread_init=s.asm.xa).apply(null,arguments)};function ft(){return(ft=s.asm.za).apply(null,arguments)}function ht(){return(ht=s.asm.Aa).apply(null,arguments)}s.__emscripten_thread_crashed=function(){return(s.__emscripten_thread_crashed=s.asm.ya).apply(null,arguments)};var gt,mt=s.__emscripten_thread_exit=function(){return(mt=s.__emscripten_thread_exit=s.asm.Ba).apply(null,arguments)},bt=s.__emscripten_check_mailbox=function(){return(bt=s.__emscripten_check_mailbox=s.asm.Ca).apply(null,arguments)};function vt(){return(vt=s.asm.Da).apply(null,arguments)}function yt(){return(yt=s.asm.Ea).apply(null,arguments)}function wt(){return(wt=s.asm.Fa).apply(null,arguments)}function _t(){return(_t=s.asm.Ga).apply(null,arguments)}function $t(){function e(){if(!gt&&(gt=!0,s.calledRun=!0,!G)&&(y||fe(F),u(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),!y)){if(s.postRun)for(\\\"function\\\"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;){var e=s.postRun.shift();H.unshift(e)}fe(H)}}if(!(0<q))if(y)u(s),y||fe(F),startWorker(s);else{if(s.preRun)for(\\\"function\\\"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)Y();fe(z),0<q||(s.setStatus?(s.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){s.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(s.keepRuntimeAlive=K,s.wasmMemory=T,s.stackAlloc=_t,s.stackSave=yt,s.stackRestore=wt,s.UTF8ToString=ue,s.stringToUTF8=Se,s.lengthBytesUTF8=_e,s.ExitStatus=ne,s.PThread=de,X=function e(){gt||$t(),gt||(X=e)},s.preInit)for(\\\"function\\\"==typeof s.preInit&&(s.preInit=[s.preInit]);0<s.preInit.length;)s.preInit.pop()();return $t(),e.ready});e.exports=r},932:(e,t,n)=>{var _scriptDir,r=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\\\"undefined\\\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){var t,r,a;t||(t=void 0!==e?e:{}),t.ready=new Promise(((e,t)=>{r=e,a=t}));var o,i,s,u=Object.assign({},t),l=\\\"./this.program\\\",c=(e,t)=>{throw t},p=\\\"object\\\"==typeof window,d=\\\"function\\\"==typeof importScripts,f=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,h=\\\"\\\";if(f){var g=n(384),m=n(908);h=d?m.dirname(h)+\\\"/\\\":__dirname+\\\"/\\\",o=(e,t)=>(e=e.startsWith(\\\"file://\\\")?new URL(e):m.normalize(e),g.readFileSync(e,t?void 0:\\\"utf8\\\")),s=e=>((e=o(e,!0)).buffer||(e=new Uint8Array(e)),e),i=(e,t,n,r=!0)=>{e=e.startsWith(\\\"file://\\\")?new URL(e):m.normalize(e),g.readFile(e,r?void 0:\\\"utf8\\\",((e,a)=>{e?n(e):t(r?a.buffer:a)}))},!t.thisProgram&&1<process.argv.length&&(l=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),c=(e,t)=>{throw process.exitCode=e,t},t.inspect=()=>\\\"[Emscripten Module object]\\\"}else(p||d)&&(d?h=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(h=document.currentScript.src),_scriptDir&&(h=_scriptDir),h=0!==h.indexOf(\\\"blob:\\\")?h.substr(0,h.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",o=e=>{var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},d&&(s=e=>{var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),i=(e,t,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var b,v=t.print||console.log.bind(console),y=t.printErr||console.warn.bind(console);Object.assign(t,u),u=null,t.thisProgram&&(l=t.thisProgram),t.quit&&(c=t.quit),t.wasmBinary&&(b=t.wasmBinary);var w=t.noExitRuntime||!0;\\\"object\\\"!=typeof WebAssembly&&U(\\\"no native wasm support detected\\\");var _,$,S,A,O,E=!1;function C(){var e=_.buffer;t.HEAP8=$=new Int8Array(e),t.HEAP16=new Int16Array(e),t.HEAP32=A=new Int32Array(e),t.HEAPU8=S=new Uint8Array(e),t.HEAPU16=new Uint16Array(e),t.HEAPU32=O=new Uint32Array(e),t.HEAPF32=new Float32Array(e),t.HEAPF64=new Float64Array(e)}var P=[],M=[],T=[];function x(){var e=t.preRun.shift();P.unshift(e)}var R,I=0,k=null,D=null;function U(e){throw t.onAbort&&t.onAbort(e),y(e=\\\"Aborted(\\\"+e+\\\")\\\"),E=!0,e=new WebAssembly.RuntimeError(e+\\\". Build with -sASSERTIONS for more info.\\\"),a(e),e}function j(e){return e.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(!j(R=\\\"ort-wasm.wasm\\\")){var G=R;R=t.locateFile?t.locateFile(G,h):h+G}function B(e){try{if(e==R&&b)return new Uint8Array(b);if(s)return s(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){U(e)}}function L(e,t,n){return function(e){if(!b&&(p||d)){if(\\\"function\\\"==typeof fetch&&!e.startsWith(\\\"file://\\\"))return fetch(e,{credentials:\\\"same-origin\\\"}).then((t=>{if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+e+\\\"'\\\";return t.arrayBuffer()})).catch((()=>B(e)));if(i)return new Promise(((t,n)=>{i(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>B(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{y(\\\"failed to asynchronously prepare wasm: \\\"+e),U(e)}))}function W(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function z(e){for(;0<e.length;)e.shift()(t)}function F(e){this.ra=e-24,this.wa=function(e){O[this.ra+4>>2>>>0]=e},this.va=function(e){O[this.ra+8>>2>>>0]=e},this.ta=function(e,t){this.ua(),this.wa(e),this.va(t)},this.ua=function(){O[this.ra+16>>2>>>0]=0}}var H=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function N(e,t,n){var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&H)return H.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function K(e,t){return(e>>>=0)?N(S,e,t):\\\"\\\"}function Y(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t}function V(e,t,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(n>=r)break;t[n++>>>0]=i}else{if(2047>=i){if(n+1>=r)break;t[n++>>>0]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++>>>0]=224|i>>12}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63}t[n++>>>0]=128|i>>6&63}t[n++>>>0]=128|63&i}}return t[n>>>0]=0,n-a}function q(e,t,n){return V(e,S,t,n)}function J(e){return 0==e%4&&(0!=e%100||0==e%400)}var X=[0,31,60,91,121,152,182,213,244,274,305,335],Q=[0,31,59,90,120,151,181,212,243,273,304,334];function Z(e){return(J(e.getFullYear())?X:Q)[e.getMonth()]+e.getDate()-1}function ee(e){var t=Y(e)+1,n=pe(t);return n&&q(e,n,t),n}var te={};function ne(){if(!re){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:l||\\\"./this.program\\\"};for(e in te)void 0===te[e]?delete t[e]:t[e]=te[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);re=n}return re}var re,ae=[null,[],[]];function oe(e){return(oe=function(){if(\\\"object\\\"==typeof crypto&&\\\"function\\\"==typeof crypto.getRandomValues)return e=>crypto.getRandomValues(e);if(f)try{var e=n(760);if(e.randomFillSync)return t=>e.randomFillSync(t);var t=e.randomBytes;return e=>(e.set(t(e.byteLength)),e)}catch(e){}U(\\\"initRandomDevice\\\")}())(e)}var ie=[31,29,31,30,31,30,31,31,30,31,30,31],se=[31,28,31,30,31,30,31,31,30,31,30,31];function ue(e,t,n,r){function a(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function o(e,t){return a(e,t,\\\"0\\\")}function i(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function u(e){var t=e.na;for(e=new Date(new Date(e.oa+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(J(e.getFullYear())?ie:se)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=s(new Date(e.getFullYear(),0,4)),n=s(n),0>=i(t,e)?0>=i(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=A[r+40>>2>>>0];for(var c in r={za:A[r>>2>>>0],ya:A[r+4>>2>>>0],pa:A[r+8>>2>>>0],sa:A[r+12>>2>>>0],qa:A[r+16>>2>>>0],oa:A[r+20>>2>>>0],ja:A[r+24>>2>>>0],na:A[r+28>>2>>>0],Ba:A[r+32>>2>>>0],xa:A[r+36>>2>>>0],Aa:l?K(l):\\\"\\\"},n=K(n),l={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(c,\\\"g\\\"),l[c]);var p=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(c in l={\\\"%a\\\":function(e){return p[e.ja].substring(0,3)},\\\"%A\\\":function(e){return p[e.ja]},\\\"%b\\\":function(e){return d[e.qa].substring(0,3)},\\\"%B\\\":function(e){return d[e.qa]},\\\"%C\\\":function(e){return o((e.oa+1900)/100|0,2)},\\\"%d\\\":function(e){return o(e.sa,2)},\\\"%e\\\":function(e){return a(e.sa,2,\\\" \\\")},\\\"%g\\\":function(e){return u(e).toString().substring(2)},\\\"%G\\\":function(e){return u(e)},\\\"%H\\\":function(e){return o(e.pa,2)},\\\"%I\\\":function(e){return 0==(e=e.pa)?e=12:12<e&&(e-=12),o(e,2)},\\\"%j\\\":function(e){for(var t=0,n=0;n<=e.qa-1;t+=(J(e.oa+1900)?ie:se)[n++]);return o(e.sa+t,3)},\\\"%m\\\":function(e){return o(e.qa+1,2)},\\\"%M\\\":function(e){return o(e.ya,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.pa&&12>e.pa?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return o(e.za,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.ja||7},\\\"%U\\\":function(e){return o(Math.floor((e.na+7-e.ja)/7),2)},\\\"%V\\\":function(e){var t=Math.floor((e.na+7-(e.ja+6)%7)/7);if(2>=(e.ja+371-e.na-2)%7&&t++,t)53==t&&(4==(n=(e.ja+371-e.na)%7)||3==n&&J(e.oa)||(t=1));else{t=52;var n=(e.ja+7-e.na-1)%7;(4==n||5==n&&J(e.oa%400-1))&&t++}return o(t,2)},\\\"%w\\\":function(e){return e.ja},\\\"%W\\\":function(e){return o(Math.floor((e.na+7-(e.ja+6)%7)/7),2)},\\\"%y\\\":function(e){return(e.oa+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.oa+1900},\\\"%z\\\":function(e){var t=0<=(e=e.xa);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.Aa},\\\"%%\\\":function(){return\\\"%\\\"}},n=n.replace(/%%/g,\\\"\\\\0\\\\0\\\"),l)n.includes(c)&&(n=n.replace(new RegExp(c,\\\"g\\\"),l[c](r)));return c=function(e){var t=Array(Y(e)+1);return V(e,t,0,t.length),t}(n=n.replace(/\\\\0\\\\0/g,\\\"%\\\")),c.length>t?0:($.set(c,e>>>0),c.length-1)}var le={a:function(e,t,n){throw new F(e).ta(t,n),e},l:function(){U(\\\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\\\")},f:function(){return 0},K:function(){},u:function(){},x:function(){},M:function(){return 0},I:function(){},D:function(){},H:function(){},j:function(){},w:function(){},s:function(){},J:function(){},t:function(){},k:function(){return!0},A:function(e,t){e=new Date(1e3*(O[e>>>2]+4294967296*A[e+4>>>2])),A[t>>2>>>0]=e.getUTCSeconds(),A[t+4>>2>>>0]=e.getUTCMinutes(),A[t+8>>2>>>0]=e.getUTCHours(),A[t+12>>2>>>0]=e.getUTCDate(),A[t+16>>2>>>0]=e.getUTCMonth(),A[t+20>>2>>>0]=e.getUTCFullYear()-1900,A[t+24>>2>>>0]=e.getUTCDay(),A[t+28>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},B:function(e,t){e=new Date(1e3*(O[e>>>2]+4294967296*A[e+4>>>2])),A[t>>2>>>0]=e.getSeconds(),A[t+4>>2>>>0]=e.getMinutes(),A[t+8>>2>>>0]=e.getHours(),A[t+12>>2>>>0]=e.getDate(),A[t+16>>2>>>0]=e.getMonth(),A[t+20>>2>>>0]=e.getFullYear()-1900,A[t+24>>2>>>0]=e.getDay(),A[t+28>>2>>>0]=0|Z(e),A[t+36>>2>>>0]=-60*e.getTimezoneOffset();var n=new Date(e.getFullYear(),6,1).getTimezoneOffset(),r=new Date(e.getFullYear(),0,1).getTimezoneOffset();A[t+32>>2>>>0]=0|(n!=r&&e.getTimezoneOffset()==Math.min(r,n))},C:function(e){var t=new Date(A[e+20>>2>>>0]+1900,A[e+16>>2>>>0],A[e+12>>2>>>0],A[e+8>>2>>>0],A[e+4>>2>>>0],A[e>>2>>>0],0),n=A[e+32>>2>>>0],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=new Date(t.getFullYear(),0,1).getTimezoneOffset(),i=Math.min(o,a);return 0>n?A[e+32>>2>>>0]=Number(a!=o&&i==r):0<n!=(i==r)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?i:a)-r))),A[e+24>>2>>>0]=t.getDay(),A[e+28>>2>>>0]=0|Z(t),A[e>>2>>>0]=t.getSeconds(),A[e+4>>2>>>0]=t.getMinutes(),A[e+8>>2>>>0]=t.getHours(),A[e+12>>2>>>0]=t.getDate(),A[e+16>>2>>>0]=t.getMonth(),A[e+20>>2>>>0]=t.getYear(),t.getTime()/1e3|0},y:function(){return-52},z:function(){},q:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}var a=(new Date).getFullYear(),o=new Date(a,0,1),i=new Date(a,6,1);a=o.getTimezoneOffset();var s=i.getTimezoneOffset();O[e>>2>>>0]=60*Math.max(a,s),A[t>>2>>>0]=Number(a!=s),e=r(o),t=r(i),e=ee(e),t=ee(t),s<a?(O[n>>2>>>0]=e,O[n+4>>2>>>0]=t):(O[n>>2>>>0]=t,O[n+4>>2>>>0]=e)},d:function(){U(\\\"\\\")},G:function(){U(\\\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\\\")},g:function(){return Date.now()},r:function(){return 4294901760},b:f?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.now(),L:function(e,t,n){S.copyWithin(e>>>0,t>>>0,t+n>>>0)},p:function(e){var t=S.length;if(4294901760<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);var a=Math,o=a.min;r=Math.max(e,r),r+=(65536-r%65536)%65536;e:{var i=_.buffer;try{_.grow(o.call(a,4294901760,r)-i.byteLength+65535>>>16),C();var s=1;break e}catch(e){}s=void 0}if(s)return!0}return!1},E:function(e,t){var n=0;return ne().forEach((function(r,a){var o=t+n;for(a=O[e+4*a>>2>>>0]=o,o=0;o<r.length;++o)$[a++>>0>>>0]=r.charCodeAt(o);$[a>>0>>>0]=0,n+=r.length+1})),0},F:function(e,t){var n=ne();O[e>>2>>>0]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),O[t>>2>>>0]=r,0},m:function(e){w||(t.onExit&&t.onExit(e),E=!0),c(e,new W(e))},e:function(){return 52},i:function(){return 52},n:function(){return 70},h:function(e,t,n,r){for(var a=0,o=0;o<n;o++){var i=O[t>>2>>>0],s=O[t+4>>2>>>0];t+=8;for(var u=0;u<s;u++){var l=S[i+u>>>0],c=ae[e];0===l||10===l?((1===e?v:y)(N(c,0)),c.length=0):c.push(l)}a+=s}return O[r>>2>>>0]=a,0},o:function(e,t){return oe(S.subarray(e>>>0,e+t>>>0)),0},v:ue,c:function(e,t,n,r){return ue(e,t,n,r)}};!function(){function e(e){if(e=e.exports,t.asm=e,_=t.asm.N,C(),M.unshift(t.asm.O),I--,t.monitorRunDependencies&&t.monitorRunDependencies(I),0==I&&(null!==k&&(clearInterval(k),k=null),D)){var n=D;D=null,n()}return e}var n={a:le};if(I++,t.monitorRunDependencies&&t.monitorRunDependencies(I),t.instantiateWasm)try{return t.instantiateWasm(n,e)}catch(e){y(\\\"Module.instantiateWasm callback failed with error: \\\"+e),a(e)}(function(e,t){var n=R;return b||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||j(n)||n.startsWith(\\\"file://\\\")||f||\\\"function\\\"!=typeof fetch?L(n,e,t):fetch(n,{credentials:\\\"same-origin\\\"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return y(\\\"wasm streaming compile failed: \\\"+r),y(\\\"falling back to ArrayBuffer instantiation\\\"),L(n,e,t)}))))})(n,(function(t){e(t.instance)})).catch(a)}(),t._OrtInit=function(){return(t._OrtInit=t.asm.P).apply(null,arguments)},t._OrtGetLastError=function(){return(t._OrtGetLastError=t.asm.Q).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.R).apply(null,arguments)},t._OrtAppendExecutionProvider=function(){return(t._OrtAppendExecutionProvider=t.asm.S).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.T).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.U).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.V).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.W).apply(null,arguments)},t._OrtGetInputOutputCount=function(){return(t._OrtGetInputOutputCount=t.asm.X).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.Y).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.Z).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm._).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.$).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm.aa).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.ba).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.ca).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.da).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.ea).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.fa).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.ga).apply(null,arguments)};var ce,pe=t._malloc=function(){return(pe=t._malloc=t.asm.ha).apply(null,arguments)};function de(){return(de=t.asm.ka).apply(null,arguments)}function fe(){return(fe=t.asm.la).apply(null,arguments)}function he(){return(he=t.asm.ma).apply(null,arguments)}function ge(){function e(){if(!ce&&(ce=!0,t.calledRun=!0,!E)){if(z(M),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for(\\\"function\\\"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();T.unshift(e)}z(T)}}if(!(0<I)){if(t.preRun)for(\\\"function\\\"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)x();z(P),0<I||(t.setStatus?(t.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){t.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(t._free=function(){return(t._free=t.asm.ia).apply(null,arguments)},t.stackAlloc=he,t.stackSave=de,t.stackRestore=fe,t.UTF8ToString=K,t.stringToUTF8=q,t.lengthBytesUTF8=Y,D=function e(){ce||ge(),ce||(D=e)},t.preInit)for(\\\"function\\\"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return ge(),e.ready});e.exports=r},154:e=>{\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={},a=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node;if(a){var r=require(\\\"worker_threads\\\"),t=r.parentPort;t.on(\\\"message\\\",(e=>onmessage({data:e})));var s=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:function(e){(0,eval)(s.readFileSync(e,\\\"utf8\\\")+\\\"//# sourceURL=\\\"+e)},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var o=!1,n=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");a?s.writeSync(2,e+\\\"\\\\\\\\n\\\"):console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=(a,r)=>{var t=e.wasmModule;return e.wasmModule=null,r(new WebAssembly.Instance(t,a))},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=function a(r){try{if(\\\"load\\\"===r.data.cmd){let s=[];self.onmessage=e=>s.push(e),self.startWorker=r=>{e=r,postMessage({cmd:\\\"loaded\\\"});for(let e of s)a(e);self.onmessage=a},e.wasmModule=r.data.wasmModule;for(const a of r.data.handlers)e[a]=function(){postMessage({cmd:\\\"callHandler\\\",handler:a,args:[...arguments]})};if(e.wasmMemory=r.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof r.data.urlOrBlob)importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e)}else if(\\\"run\\\"===r.data.cmd){e.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),e.__emscripten_thread_mailbox_await(r.data.pthread_ptr),e.establishStackSpace(),e.PThread.receiveObjectTransfer(r.data),e.PThread.threadInitTLS(),o||(o=!0);try{e.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if(\\\"unwind\\\"!=e)throw e}}else\\\"cancel\\\"===r.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):\\\"setimmediate\\\"===r.data.target||(\\\"checkMailbox\\\"===r.data.cmd?o&&e.checkMailbox():r.data.cmd&&(n(\\\"worker.js received unknown command \\\"+r.data.cmd),n(r.data)))}catch(a){throw e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),a}};\\\\n'},760:()=>{},384:()=>{},993:()=>{},908:()=>{},953:()=>{},925:()=>{},449:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}(()=>{\\\"use strict\\\";const e=n(259),t=n(263);self.onmessage=n=>{switch(n.data.type){case\\\"init-wasm\\\":try{(0,t.initializeWebAssembly)(n.data.in).then((()=>postMessage({type:\\\"init-wasm\\\"})),(e=>postMessage({type:\\\"init-wasm\\\",err:e})))}catch(e){postMessage({type:\\\"init-wasm\\\",err:e})}break;case\\\"init-ort\\\":try{(0,e.initRuntime)(n.data.in).then((()=>postMessage({type:\\\"init-ort\\\"})),(e=>postMessage({type:\\\"init-ort\\\",err:e}))),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create_allocate\\\":try{const{model:t}=n.data.in,r=(0,e.createSessionAllocate)(t);postMessage({type:\\\"create_allocate\\\",out:r})}catch(e){postMessage({type:\\\"create_allocate\\\",err:e})}break;case\\\"create_finalize\\\":try{const{modeldata:t,options:r}=n.data.in,a=(0,e.createSessionFinalize)(t,r);postMessage({type:\\\"create_finalize\\\",out:a})}catch(e){postMessage({type:\\\"create_finalize\\\",err:e})}break;case\\\"create\\\":try{const{model:t,options:r}=n.data.in,a=(0,e.createSession)(t,r);postMessage({type:\\\"create\\\",out:a})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{const t=n.data.in;(0,e.releaseSession)(t),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{const{sessionId:t,inputIndices:r,inputs:a,outputIndices:o,options:i}=n.data.in;(0,e.run)(t,r,a,o,i).then((t=>{postMessage({type:\\\"run\\\",out:t},(0,e.extractTransferableBuffers)(t))}),(e=>{postMessage({type:\\\"run\\\",err:e})}))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{const t=n.data.in;(0,e.endProfiling)(t),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}})()})();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){function n(){return D.buffer!=C.buffer&&P(),C}function t(){return D.buffer!=C.buffer&&P(),F}function r(){return D.buffer!=C.buffer&&P(),k}function a(){return D.buffer!=C.buffer&&P(),H}function o(){return D.buffer!=C.buffer&&P(),Y}var i,u,s;i||(i=void 0!==e?e:{}),i.ready=new Promise(((e,n)=>{u=e,s=n}));var f,c,l,p=Object.assign({},i),m=\"./this.program\",d=(e,n)=>{throw n},h=\"object\"==typeof window,g=\"function\"==typeof importScripts,y=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,b=i.ENVIRONMENT_IS_PTHREAD||!1,v=\"\";function w(e){return i.locateFile?i.locateFile(e,v):v+e}if(y){var _=require(\"fs\"),O=require(\"path\");let e;v=g?O.dirname(v)+\"/\":__dirname+\"/\",f=(e,n)=>(e=e.startsWith(\"file://\")?new URL(e):O.normalize(e),_.readFileSync(e,n?void 0:\"utf8\")),l=e=>((e=f(e,!0)).buffer||(e=new Uint8Array(e)),e),c=(e,n,t,r=!0)=>{e=e.startsWith(\"file://\")?new URL(e):O.normalize(e),_.readFile(e,r?void 0:\"utf8\",((e,a)=>{e?t(e):n(r?a.buffer:a)}))},!i.thisProgram&&1<process.argv.length&&(m=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),d=(e,n)=>{throw process.exitCode=e,n},i.inspect=()=>\"[Emscripten Module object]\";try{e=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=e.Worker}else(h||g)&&(g?v=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(v=document.currentScript.src),_scriptDir&&(v=_scriptDir),v=0!==v.indexOf(\"blob:\")?v.substr(0,v.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",y||(f=e=>{var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.send(null),n.responseText},g&&(l=e=>{var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.responseType=\"arraybuffer\",n.send(null),new Uint8Array(n.response)}),c=(e,n,t)=>{var r=new XMLHttpRequest;r.open(\"GET\",e,!0),r.responseType=\"arraybuffer\",r.onload=()=>{200==r.status||0==r.status&&r.response?n(r.response):t()},r.onerror=t,r.send(null)}));y&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var T=console.log.bind(console),M=console.warn.bind(console);y&&(T=(...e)=>_.writeSync(1,e.join(\" \")+\"\\n\"),M=(...e)=>_.writeSync(2,e.join(\" \")+\"\\n\"));var S,A=i.print||T,R=i.printErr||M;Object.assign(i,p),p=null,i.thisProgram&&(m=i.thisProgram),i.quit&&(d=i.quit),i.wasmBinary&&(S=i.wasmBinary);var E=i.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&Z(\"no native wasm support detected\");var D,I,x,C,F,k,H,Y,U=!1;function P(){var e=D.buffer;i.HEAP8=C=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=k=new Int32Array(e),i.HEAPU8=F=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=H=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=Y=new Float64Array(e)}var W=i.INITIAL_MEMORY||16777216;if(5242880<=W||Z(\"INITIAL_MEMORY should be larger than STACK_SIZE, was \"+W+\"! (STACK_SIZE=5242880)\"),b)D=i.wasmMemory;else if(i.wasmMemory)D=i.wasmMemory;else if(!((D=new WebAssembly.Memory({initial:W/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw R(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),y&&R(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\"),Error(\"bad memory\");P(),W=D.buffer.byteLength;var L,N=[],j=[],G=[],B=0;function z(){return E||0<B}function q(){var e=i.preRun.shift();N.unshift(e)}var J,K=0,V=null,X=null;function Z(e){throw i.onAbort&&i.onAbort(e),R(e=\"Aborted(\"+e+\")\"),U=!0,x=1,e=new WebAssembly.RuntimeError(e+\". Build with -sASSERTIONS for more info.\"),s(e),e}function Q(e){return e.startsWith(\"data:application/octet-stream;base64,\")}function $(e){try{if(e==J&&S)return new Uint8Array(S);if(l)return l(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){Z(e)}}function ee(e,n,t){return function(e){if(!S&&(h||g)){if(\"function\"==typeof fetch&&!e.startsWith(\"file://\"))return fetch(e,{credentials:\"same-origin\"}).then((n=>{if(!n.ok)throw\"failed to load wasm binary file at '\"+e+\"'\";return n.arrayBuffer()})).catch((()=>$(e)));if(c)return new Promise(((n,t)=>{c(e,(e=>n(new Uint8Array(e))),t)}))}return Promise.resolve().then((()=>$(e)))}(e).then((e=>WebAssembly.instantiate(e,n))).then((e=>e)).then(t,(e=>{R(\"failed to asynchronously prepare wasm: \"+e),Z(e)}))}function ne(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function te(e){e.terminate(),e.onmessage=()=>{}}function re(e){(e=le.Ha[e])||Z(),le.hb(e)}function ae(e){var n=le.bb();if(!n)return 6;le.Ka.push(n),le.Ha[e.Ja]=n,n.Ja=e.Ja;var t={cmd:\"run\",start_routine:e.ib,arg:e.$a,pthread_ptr:e.Ja};return y&&n.unref(),n.postMessage(t,e.ob),0}Q(J=\"ort-wasm-threaded.wasm\")||(J=w(J));var oe=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function ie(e,n,t){var r=(n>>>=0)+t;for(t=n;e[t]&&!(t>=r);)++t;if(16<t-n&&e.buffer&&oe)return oe.decode(e.buffer instanceof SharedArrayBuffer?e.slice(n,t):e.subarray(n,t));for(r=\"\";n<t;){var a=e[n++];if(128&a){var o=63&e[n++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[n++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[n++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function ue(e,n){return(e>>>=0)?ie(t(),e,n):\"\"}function se(e){if(b)return ze(1,1,e);x=e,z()||(le.jb(),i.onExit&&i.onExit(e),U=!0),d(e,new ne(e))}function fe(e){if(x=e,b)throw me(e),\"unwind\";se(e)}function ce(e){e instanceof ne||\"unwind\"==e||d(1,e)}var le={Na:[],Ka:[],Va:[],Ha:{},Ra:function(){b&&le.cb()},rb:function(){},cb:function(){le.receiveObjectTransfer=le.gb,le.threadInitTLS=le.Ua,le.setExitStatus=le.Ta,E=!1},Ta:function(e){x=e},tb:[\"$terminateWorker\"],jb:function(){for(var e of le.Ka)te(e);for(e of le.Na)te(e);le.Na=[],le.Ka=[],le.Ha=[]},hb:function(e){var n=e.Ja;delete le.Ha[n],le.Na.push(e),le.Ka.splice(le.Ka.indexOf(e),1),e.Ja=0,dn(n)},gb:function(){},Ua:function(){le.Va.forEach((e=>e()))},fb:e=>new Promise((n=>{e.onmessage=t=>{var r=(t=t.data).cmd;if(e.Ja&&(le.ab=e.Ja),t.targetThread&&t.targetThread!=cn()){var a=le.Ha[t.sb];a?a.postMessage(t,t.transferList):R('Internal error! Worker sent a message \"'+r+'\" to target pthread '+t.targetThread+\", but that thread no longer exists!\")}else\"checkMailbox\"===r?He():\"spawnThread\"===r?ae(t):\"cleanupThread\"===r?re(t.thread):\"killThread\"===r?(t=t.thread,r=le.Ha[t],delete le.Ha[t],te(r),dn(t),le.Ka.splice(le.Ka.indexOf(r),1),r.Ja=0):\"cancelThread\"===r?le.Ha[t.thread].postMessage({cmd:\"cancel\"}):\"loaded\"===r?(e.loaded=!0,n(e)):\"print\"===r?A(\"Thread \"+t.threadId+\": \"+t.text):\"printErr\"===r?R(\"Thread \"+t.threadId+\": \"+t.text):\"alert\"===r?alert(\"Thread \"+t.threadId+\": \"+t.text):\"setimmediate\"===t.target?e.postMessage(t):\"callHandler\"===r?i[t.handler](...t.args):r&&R(\"worker sent an unknown command \"+r);le.ab=void 0},e.onerror=e=>{throw R(\"worker sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message),e},y&&(e.on(\"message\",(function(n){e.onmessage({data:n})})),e.on(\"error\",(function(n){e.onerror(n)})));var t,r=[];for(t of[\"onExit\",\"onAbort\",\"print\",\"printErr\"])i.hasOwnProperty(t)&&r.push(t);e.postMessage({cmd:\"load\",handlers:r,urlOrBlob:i.mainScriptUrlOrBlob||_scriptDir,wasmMemory:D,wasmModule:I})})),eb:function(e){e()},Za:function(){var e=w(\"ort-wasm-threaded.worker.js\");e=new Worker(e),le.Na.push(e)},bb:function(){return 0==le.Na.length&&(le.Za(),le.fb(le.Na[0])),le.Na.pop()}};function pe(e){for(;0<e.length;)e.shift()(i)}function me(e){if(b)return ze(2,0,e);fe(e)}i.PThread=le,i.establishStackSpace=function(){var e=cn(),n=r()[e+52>>2>>>0];bn(n,n-(e=r()[e+56>>2>>>0])),wn(n)};var de=[];function he(e){this.Qa=e-24,this.Ya=function(e){a()[this.Qa+4>>2>>>0]=e},this.Xa=function(e){a()[this.Qa+8>>2>>>0]=e},this.Ra=function(e,n){this.Wa(),this.Ya(e),this.Xa(n)},this.Wa=function(){a()[this.Qa+16>>2>>>0]=0}}function ge(e,n,t,r){return b?ze(3,1,e,n,t,r):ye(e,n,t,r)}function ye(e,n,t,r){if(\"undefined\"==typeof SharedArrayBuffer)return R(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var a=[];return b&&0===a.length?ge(e,n,t,r):(e={ib:t,Ja:e,$a:r,ob:a},b?(e.qb=\"spawnThread\",postMessage(e,a),0):ae(e))}function be(e,n,t){return b?ze(4,1,e,n,t):0}function ve(e,n){if(b)return ze(5,1,e,n)}function we(e){for(var n=0,t=0;t<e.length;++t){var r=e.charCodeAt(t);127>=r?n++:2047>=r?n+=2:55296<=r&&57343>=r?(n+=4,++t):n+=3}return n}function _e(e,n,t,r){if(!(0<r))return 0;var a=t>>>=0;r=t+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(t>=r)break;n[t++>>>0]=i}else{if(2047>=i){if(t+1>=r)break;n[t++>>>0]=192|i>>6}else{if(65535>=i){if(t+2>=r)break;n[t++>>>0]=224|i>>12}else{if(t+3>=r)break;n[t++>>>0]=240|i>>18,n[t++>>>0]=128|i>>12&63}n[t++>>>0]=128|i>>6&63}n[t++>>>0]=128|63&i}}return n[t>>>0]=0,t-a}function Oe(e,n,r){return _e(e,t(),n,r)}function Te(e,n){if(b)return ze(6,1,e,n)}function Me(e,n,t){if(b)return ze(7,1,e,n,t)}function Se(e,n,t){return b?ze(8,1,e,n,t):0}function Ae(e,n){if(b)return ze(9,1,e,n)}function Re(e,n,t){if(b)return ze(10,1,e,n,t)}function Ee(e,n,t,r){if(b)return ze(11,1,e,n,t,r)}function De(e,n,t,r){if(b)return ze(12,1,e,n,t,r)}function Ie(e,n,t,r){if(b)return ze(13,1,e,n,t,r)}function xe(e){if(b)return ze(14,1,e)}function Ce(e,n){if(b)return ze(15,1,e,n)}function Fe(e,n,t){if(b)return ze(16,1,e,n,t)}function ke(e){\"function\"==typeof Atomics.pb&&(Atomics.pb(r(),e>>2,e).value.then(He),e+=128,Atomics.store(r(),e>>2,1))}function He(){var e=cn();e&&(ke(e),function(e){if(!U)try{if(yn(),!z())try{b?gn(x):fe(x)}catch(e){ce(e)}}catch(e){ce(e)}}())}function Ye(e){return a()[e>>>2]+4294967296*r()[e+4>>>2]}function Ue(e){return 0==e%4&&(0!=e%100||0==e%400)}i.invokeEntryPoint=function(e,n){var t=de[e];t||(e>=de.length&&(de.length=e+1),de[e]=t=L.get(e)),e=t(n),z()?le.Ta(e):gn(e)},i.__emscripten_thread_mailbox_await=ke,i.checkMailbox=He;var Pe,We=[0,31,60,91,121,152,182,213,244,274,305,335],Le=[0,31,59,90,120,151,181,212,243,273,304,334];function Ne(e){return(Ue(e.getFullYear())?We:Le)[e.getMonth()]+e.getDate()-1}function je(e,n,t,r,a,o,i){return b?ze(17,1,e,n,t,r,a,o,i):-52}function Ge(e,n,t,r,a,o){if(b)return ze(18,1,e,n,t,r,a,o)}function Be(e){var n=we(e)+1,t=ln(n);return t&&Oe(e,t,n),t}function ze(e,n){var t=arguments.length-2,r=arguments;return function(e){var n=vn();return e=e(),wn(n),e}((()=>{for(var a=_n(8*t),i=a>>3,u=0;u<t;u++){var s=r[2+u];o()[i+u>>>0]=s}return mn(e,t,a,n)}))}Pe=y?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var qe,Je=[],Ke={};function Ve(){if(!qe){var e,n={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:m||\"./this.program\"};for(e in Ke)void 0===Ke[e]?delete n[e]:n[e]=Ke[e];var t=[];for(e in n)t.push(e+\"=\"+n[e]);qe=t}return qe}function Xe(e,t){if(b)return ze(19,1,e,t);var r=0;return Ve().forEach((function(o,i){var u=t+r;for(i=a()[e+4*i>>2>>>0]=u,u=0;u<o.length;++u)n()[i++>>0>>>0]=o.charCodeAt(u);n()[i>>0>>>0]=0,r+=o.length+1})),0}function Ze(e,n){if(b)return ze(20,1,e,n);var t=Ve();a()[e>>2>>>0]=t.length;var r=0;return t.forEach((function(e){r+=e.length+1})),a()[n>>2>>>0]=r,0}function Qe(e){return b?ze(21,1,e):52}function $e(e,n,t,r){return b?ze(22,1,e,n,t,r):52}function en(e,n,t,r,a){return b?ze(23,1,e,n,t,r,a):70}var nn=[null,[],[]];function tn(e,n,r,o){if(b)return ze(24,1,e,n,r,o);for(var i=0,u=0;u<r;u++){var s=a()[n>>2>>>0],f=a()[n+4>>2>>>0];n+=8;for(var c=0;c<f;c++){var l=t()[s+c>>>0],p=nn[e];0===l||10===l?((1===e?A:R)(ie(p,0)),p.length=0):p.push(l)}i+=f}return a()[o>>2>>>0]=i,0}function rn(e){return(rn=function(){if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues)return e=>(e.set(crypto.getRandomValues(new Uint8Array(e.byteLength))),e);if(y)try{var e=require(\"crypto\");if(e.randomFillSync)return n=>e.randomFillSync(n);var n=e.randomBytes;return e=>(e.set(n(e.byteLength)),e)}catch(e){}Z(\"initRandomDevice\")}())(e)}var an=[31,29,31,30,31,30,31,31,30,31,30,31],on=[31,28,31,30,31,30,31,31,30,31,30,31];function un(e,t,a,o){function i(e,n,t){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<n;)e=t[0]+e;return e}function u(e,n){return i(e,n,\"0\")}function s(e,n){function t(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=t(e.getFullYear()-n.getFullYear()))&&0===(r=t(e.getMonth()-n.getMonth()))&&(r=t(e.getDate()-n.getDate())),r}function f(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function c(e){var n=e.La;for(e=new Date(new Date(e.Ma+1900,0,1).getTime());0<n;){var t=e.getMonth(),r=(Ue(e.getFullYear())?an:on)[t];if(!(n>r-e.getDate())){e.setDate(e.getDate()+n);break}n-=r-e.getDate()+1,e.setDate(1),11>t?e.setMonth(t+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return t=new Date(e.getFullYear()+1,0,4),n=f(new Date(e.getFullYear(),0,4)),t=f(t),0>=s(n,e)?0>=s(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=r()[o+40>>2>>>0];for(var p in o={mb:r()[o>>2>>>0],lb:r()[o+4>>2>>>0],Oa:r()[o+8>>2>>>0],Sa:r()[o+12>>2>>>0],Pa:r()[o+16>>2>>>0],Ma:r()[o+20>>2>>>0],Ia:r()[o+24>>2>>>0],La:r()[o+28>>2>>>0],ub:r()[o+32>>2>>>0],kb:r()[o+36>>2>>>0],nb:l?ue(l):\"\"},a=ue(a),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})a=a.replace(new RegExp(p,\"g\"),l[p]);var m=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),d=\"January February March April May June July August September October November December\".split(\" \");for(p in l={\"%a\":function(e){return m[e.Ia].substring(0,3)},\"%A\":function(e){return m[e.Ia]},\"%b\":function(e){return d[e.Pa].substring(0,3)},\"%B\":function(e){return d[e.Pa]},\"%C\":function(e){return u((e.Ma+1900)/100|0,2)},\"%d\":function(e){return u(e.Sa,2)},\"%e\":function(e){return i(e.Sa,2,\" \")},\"%g\":function(e){return c(e).toString().substring(2)},\"%G\":function(e){return c(e)},\"%H\":function(e){return u(e.Oa,2)},\"%I\":function(e){return 0==(e=e.Oa)?e=12:12<e&&(e-=12),u(e,2)},\"%j\":function(e){for(var n=0,t=0;t<=e.Pa-1;n+=(Ue(e.Ma+1900)?an:on)[t++]);return u(e.Sa+n,3)},\"%m\":function(e){return u(e.Pa+1,2)},\"%M\":function(e){return u(e.lb,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.Oa&&12>e.Oa?\"AM\":\"PM\"},\"%S\":function(e){return u(e.mb,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.Ia||7},\"%U\":function(e){return u(Math.floor((e.La+7-e.Ia)/7),2)},\"%V\":function(e){var n=Math.floor((e.La+7-(e.Ia+6)%7)/7);if(2>=(e.Ia+371-e.La-2)%7&&n++,n)53==n&&(4==(t=(e.Ia+371-e.La)%7)||3==t&&Ue(e.Ma)||(n=1));else{n=52;var t=(e.Ia+7-e.La-1)%7;(4==t||5==t&&Ue(e.Ma%400-1))&&n++}return u(n,2)},\"%w\":function(e){return e.Ia},\"%W\":function(e){return u(Math.floor((e.La+7-(e.Ia+6)%7)/7),2)},\"%y\":function(e){return(e.Ma+1900).toString().substring(2)},\"%Y\":function(e){return e.Ma+1900},\"%z\":function(e){var n=0<=(e=e.kb);return e=Math.abs(e)/60,(n?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.nb},\"%%\":function(){return\"%\"}},a=a.replace(/%%/g,\"\\0\\0\"),l)a.includes(p)&&(a=a.replace(new RegExp(p,\"g\"),l[p](o)));return p=function(e){var n=Array(we(e)+1);return _e(e,n,0,n.length),n}(a=a.replace(/\\0\\0/g,\"%\")),p.length>t?0:(function(e,t){n().set(e,t>>>0)}(p,e),p.length-1)}le.Ra();var sn=[null,se,me,ge,be,ve,Te,Me,Se,Ae,Re,Ee,De,Ie,xe,Ce,Fe,je,Ge,Xe,Ze,Qe,$e,en,tn],fn={b:function(e,n,t){throw new he(e).Ra(n,t),e},p:function(){Z(\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\")},N:function(e){pn(e,!g,1,!h),le.Ua()},k:function(e){b?postMessage({cmd:\"cleanupThread\",thread:e}):re(e)},C:ye,h:be,U:ve,y:Te,B:Me,V:Se,R:Ae,J:Re,Q:Ee,o:De,A:Ie,w:xe,T:Ce,x:Fe,D:function(){return 131072},Y:function(){return!0},u:function(e,n){e==n?setTimeout((()=>He())):b?postMessage({targetThread:e,cmd:\"checkMailbox\"}):(e=le.Ha[e])&&e.postMessage({cmd:\"checkMailbox\"})},L:function(){return-1},M:ke,X:function(e){y&&le.Ha[e].ref()},G:function(e,n){e=new Date(1e3*Ye(e)),r()[n>>2>>>0]=e.getUTCSeconds(),r()[n+4>>2>>>0]=e.getUTCMinutes(),r()[n+8>>2>>>0]=e.getUTCHours(),r()[n+12>>2>>>0]=e.getUTCDate(),r()[n+16>>2>>>0]=e.getUTCMonth(),r()[n+20>>2>>>0]=e.getUTCFullYear()-1900,r()[n+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2>>>0]=e},H:function(e,n){e=new Date(1e3*Ye(e)),r()[n>>2>>>0]=e.getSeconds(),r()[n+4>>2>>>0]=e.getMinutes(),r()[n+8>>2>>>0]=e.getHours(),r()[n+12>>2>>>0]=e.getDate(),r()[n+16>>2>>>0]=e.getMonth(),r()[n+20>>2>>>0]=e.getFullYear()-1900,r()[n+24>>2>>>0]=e.getDay();var t=0|Ne(e);r()[n+28>>2>>>0]=t,r()[n+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var a=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(t!=a&&e.getTimezoneOffset()==Math.min(a,t)),r()[n+32>>2>>>0]=e},I:function(e){var n=new Date(r()[e+20>>2>>>0]+1900,r()[e+16>>2>>>0],r()[e+12>>2>>>0],r()[e+8>>2>>>0],r()[e+4>>2>>>0],r()[e>>2>>>0],0),t=r()[e+32>>2>>>0],a=n.getTimezoneOffset(),o=new Date(n.getFullYear(),6,1).getTimezoneOffset(),i=new Date(n.getFullYear(),0,1).getTimezoneOffset(),u=Math.min(i,o);return 0>t?r()[e+32>>2>>>0]=Number(o!=i&&u==a):0<t!=(u==a)&&(o=Math.max(i,o),n.setTime(n.getTime()+6e4*((0<t?u:o)-a))),r()[e+24>>2>>>0]=n.getDay(),t=0|Ne(n),r()[e+28>>2>>>0]=t,r()[e>>2>>>0]=n.getSeconds(),r()[e+4>>2>>>0]=n.getMinutes(),r()[e+8>>2>>>0]=n.getHours(),r()[e+12>>2>>>0]=n.getDate(),r()[e+16>>2>>>0]=n.getMonth(),r()[e+20>>2>>>0]=n.getYear(),n.getTime()/1e3|0},E:je,F:Ge,t:function(e,n,t){function o(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}var i=(new Date).getFullYear(),u=new Date(i,0,1),s=new Date(i,6,1);i=u.getTimezoneOffset();var f=s.getTimezoneOffset(),c=Math.max(i,f);a()[e>>2>>>0]=60*c,r()[n>>2>>>0]=Number(i!=f),e=o(u),n=o(s),e=Be(e),n=Be(n),f<i?(a()[t>>2>>>0]=e,a()[t+4>>2>>>0]=n):(a()[t>>2>>>0]=n,a()[t+4>>2>>>0]=e)},c:function(){Z(\"\")},S:function(){Z(\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\")},l:function(){},i:function(){return Date.now()},W:function(){throw B+=1,\"unwind\"},v:function(){return 4294901760},e:Pe,f:function(){return y?require(\"os\").cpus().length:navigator.hardwareConcurrency},K:function(e,n,t){Je.length=n,t>>=3;for(var r=0;r<n;r++)Je[r]=o()[t+r>>>0];return sn[e].apply(null,Je)},s:function(e){var n=t().length;if((e>>>=0)<=n||4294901760<e)return!1;for(var r=1;4>=r;r*=2){var a=n*(1+.2/r);a=Math.min(a,e+100663296);var o=Math,i=o.min;a=Math.max(e,a),a+=(65536-a%65536)%65536;e:{var u=D.buffer;try{D.grow(i.call(o,4294901760,a)-u.byteLength+65535>>>16),P();var s=1;break e}catch(e){}s=void 0}if(s)return!0}return!1},O:Xe,P:Ze,j:fe,g:Qe,n:$e,q:en,m:tn,r:function(e,n){return rn(t().subarray(e>>>0,e+n>>>0)),0},a:D||i.wasmMemory,z:un,d:function(e,n,t,r){return un(e,n,t,r)}};!function(){function e(e,n){return e=e.exports,i.asm=e,le.Va.push(i.asm.va),L=i.asm.wa,j.unshift(i.asm.Z),I=n,le.eb((()=>{if(K--,i.monitorRunDependencies&&i.monitorRunDependencies(K),0==K&&(null!==V&&(clearInterval(V),V=null),X)){var e=X;X=null,e()}})),e}var n={a:fn};if(K++,i.monitorRunDependencies&&i.monitorRunDependencies(K),i.instantiateWasm)try{return i.instantiateWasm(n,e)}catch(e){R(\"Module.instantiateWasm callback failed with error: \"+e),s(e)}(function(e,n){var t=J;return S||\"function\"!=typeof WebAssembly.instantiateStreaming||Q(t)||t.startsWith(\"file://\")||y||\"function\"!=typeof fetch?ee(t,e,n):fetch(t,{credentials:\"same-origin\"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(n,(function(r){return R(\"wasm streaming compile failed: \"+r),R(\"falling back to ArrayBuffer instantiation\"),ee(t,e,n)}))))})(n,(function(n){e(n.instance,n.module)})).catch(s)}(),i._OrtInit=function(){return(i._OrtInit=i.asm._).apply(null,arguments)},i._OrtGetLastError=function(){return(i._OrtGetLastError=i.asm.$).apply(null,arguments)},i._OrtCreateSessionOptions=function(){return(i._OrtCreateSessionOptions=i.asm.aa).apply(null,arguments)},i._OrtAppendExecutionProvider=function(){return(i._OrtAppendExecutionProvider=i.asm.ba).apply(null,arguments)},i._OrtAddSessionConfigEntry=function(){return(i._OrtAddSessionConfigEntry=i.asm.ca).apply(null,arguments)},i._OrtReleaseSessionOptions=function(){return(i._OrtReleaseSessionOptions=i.asm.da).apply(null,arguments)},i._OrtCreateSession=function(){return(i._OrtCreateSession=i.asm.ea).apply(null,arguments)},i._OrtReleaseSession=function(){return(i._OrtReleaseSession=i.asm.fa).apply(null,arguments)},i._OrtGetInputOutputCount=function(){return(i._OrtGetInputOutputCount=i.asm.ga).apply(null,arguments)},i._OrtGetInputName=function(){return(i._OrtGetInputName=i.asm.ha).apply(null,arguments)},i._OrtGetOutputName=function(){return(i._OrtGetOutputName=i.asm.ia).apply(null,arguments)},i._OrtFree=function(){return(i._OrtFree=i.asm.ja).apply(null,arguments)},i._OrtCreateTensor=function(){return(i._OrtCreateTensor=i.asm.ka).apply(null,arguments)},i._OrtGetTensorData=function(){return(i._OrtGetTensorData=i.asm.la).apply(null,arguments)},i._OrtReleaseTensor=function(){return(i._OrtReleaseTensor=i.asm.ma).apply(null,arguments)},i._OrtCreateRunOptions=function(){return(i._OrtCreateRunOptions=i.asm.na).apply(null,arguments)},i._OrtAddRunConfigEntry=function(){return(i._OrtAddRunConfigEntry=i.asm.oa).apply(null,arguments)},i._OrtReleaseRunOptions=function(){return(i._OrtReleaseRunOptions=i.asm.pa).apply(null,arguments)},i._OrtRun=function(){return(i._OrtRun=i.asm.qa).apply(null,arguments)},i._OrtEndProfiling=function(){return(i._OrtEndProfiling=i.asm.ra).apply(null,arguments)};var cn=i._pthread_self=function(){return(cn=i._pthread_self=i.asm.sa).apply(null,arguments)},ln=i._malloc=function(){return(ln=i._malloc=i.asm.ta).apply(null,arguments)};i._free=function(){return(i._free=i.asm.ua).apply(null,arguments)},i.__emscripten_tls_init=function(){return(i.__emscripten_tls_init=i.asm.va).apply(null,arguments)};var pn=i.__emscripten_thread_init=function(){return(pn=i.__emscripten_thread_init=i.asm.xa).apply(null,arguments)};function mn(){return(mn=i.asm.za).apply(null,arguments)}function dn(){return(dn=i.asm.Aa).apply(null,arguments)}i.__emscripten_thread_crashed=function(){return(i.__emscripten_thread_crashed=i.asm.ya).apply(null,arguments)};var hn,gn=i.__emscripten_thread_exit=function(){return(gn=i.__emscripten_thread_exit=i.asm.Ba).apply(null,arguments)},yn=i.__emscripten_check_mailbox=function(){return(yn=i.__emscripten_check_mailbox=i.asm.Ca).apply(null,arguments)};function bn(){return(bn=i.asm.Da).apply(null,arguments)}function vn(){return(vn=i.asm.Ea).apply(null,arguments)}function wn(){return(wn=i.asm.Fa).apply(null,arguments)}function _n(){return(_n=i.asm.Ga).apply(null,arguments)}function On(){function e(){if(!hn&&(hn=!0,i.calledRun=!0,!U)&&(b||pe(j),u(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),!b)){if(i.postRun)for(\"function\"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;){var e=i.postRun.shift();G.unshift(e)}pe(G)}}if(!(0<K))if(b)u(i),b||pe(j),startWorker(i);else{if(i.preRun)for(\"function\"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)q();pe(N),0<K||(i.setStatus?(i.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){i.setStatus(\"\")}),1),e()}),1)):e())}}if(i.keepRuntimeAlive=z,i.wasmMemory=D,i.stackAlloc=_n,i.stackSave=vn,i.stackRestore=wn,i.UTF8ToString=ue,i.stringToUTF8=Oe,i.lengthBytesUTF8=we,i.ExitStatus=ne,i.PThread=le,X=function e(){hn||On(),hn||(X=e)},i.preInit)for(\"function\"==typeof i.preInit&&(i.preInit=[i.preInit]);0<i.preInit.length;)i.preInit.pop()();return On(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\r\nvar ortWasm = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\r\n  return (\r\nfunction(ortWasm = {})  {\r\n\r\nvar c;c||(c=typeof ortWasm !== 'undefined' ? ortWasm : {});var h,p;c.ready=new Promise((a,b)=>{h=a;p=b});var t=Object.assign({},c),w=\"./this.program\",x=(a,b)=>{throw b;},aa=\"object\"==typeof window,y=\"function\"==typeof importScripts,A=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,B=\"\",C,D,E;\r\nif(A){var fs=require(\"fs\"),F=require(\"path\");B=y?F.dirname(B)+\"/\":__dirname+\"/\";C=(a,b)=>{a=a.startsWith(\"file://\")?new URL(a):F.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")};E=a=>{a=C(a,!0);a.buffer||(a=new Uint8Array(a));return a};D=(a,b,e,f=!0)=>{a=a.startsWith(\"file://\")?new URL(a):F.normalize(a);fs.readFile(a,f?void 0:\"utf8\",(g,k)=>{g?e(g):b(f?k.buffer:k)})};!c.thisProgram&&1<process.argv.length&&(w=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);x=(a,b)=>{process.exitCode=\r\na;throw b;};c.inspect=()=>\"[Emscripten Module object]\"}else if(aa||y)y?B=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(B=document.currentScript.src),_scriptDir&&(B=_scriptDir),0!==B.indexOf(\"blob:\")?B=B.substr(0,B.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):B=\"\",C=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},y&&(E=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),\r\nD=(a,b,e)=>{var f=new XMLHttpRequest;f.open(\"GET\",a,!0);f.responseType=\"arraybuffer\";f.onload=()=>{200==f.status||0==f.status&&f.response?b(f.response):e()};f.onerror=e;f.send(null)};var ba=c.print||console.log.bind(console),G=c.printErr||console.warn.bind(console);Object.assign(c,t);t=null;c.thisProgram&&(w=c.thisProgram);c.quit&&(x=c.quit);var H;c.wasmBinary&&(H=c.wasmBinary);var noExitRuntime=c.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&I(\"no native wasm support detected\");\r\nvar J,K=!1,L,M,N,O;function ca(){var a=J.buffer;c.HEAP8=L=new Int8Array(a);c.HEAP16=new Int16Array(a);c.HEAP32=N=new Int32Array(a);c.HEAPU8=M=new Uint8Array(a);c.HEAPU16=new Uint16Array(a);c.HEAPU32=O=new Uint32Array(a);c.HEAPF32=new Float32Array(a);c.HEAPF64=new Float64Array(a)}var da=[],ea=[],fa=[];function ha(){var a=c.preRun.shift();da.unshift(a)}var P=0,Q=null,R=null;\r\nfunction I(a){if(c.onAbort)c.onAbort(a);a=\"Aborted(\"+a+\")\";G(a);K=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");p(a);throw a;}function ia(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var S;S=\"ort-wasm.wasm\";if(!ia(S)){var ja=S;S=c.locateFile?c.locateFile(ja,B):B+ja}function ka(a){try{if(a==S&&H)return new Uint8Array(H);if(E)return E(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){I(b)}}\r\nfunction la(a){if(!H&&(aa||y)){if(\"function\"==typeof fetch&&!a.startsWith(\"file://\"))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>ka(a));if(D)return new Promise((b,e)=>{D(a,f=>b(new Uint8Array(f)),e)})}return Promise.resolve().then(()=>ka(a))}function ma(a,b,e){return la(a).then(f=>WebAssembly.instantiate(f,b)).then(f=>f).then(e,f=>{G(\"failed to asynchronously prepare wasm: \"+f);I(f)})}\r\nfunction na(a,b){var e=S;return H||\"function\"!=typeof WebAssembly.instantiateStreaming||ia(e)||e.startsWith(\"file://\")||A||\"function\"!=typeof fetch?ma(e,a,b):fetch(e,{credentials:\"same-origin\"}).then(f=>WebAssembly.instantiateStreaming(f,a).then(b,function(g){G(\"wasm streaming compile failed: \"+g);G(\"falling back to ArrayBuffer instantiation\");return ma(e,a,b)}))}function oa(a){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+a+\")\";this.status=a}\r\nfunction T(a){for(;0<a.length;)a.shift()(c)}function pa(a){this.ra=a-24;this.wa=function(b){O[this.ra+4>>2>>>0]=b};this.va=function(b){O[this.ra+8>>2>>>0]=b};this.ta=function(b,e){this.ua();this.wa(b);this.va(e)};this.ua=function(){O[this.ra+16>>2>>>0]=0}}var qa=0,ra=0,sa=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\r\nfunction ta(a,b,e){b>>>=0;var f=b+e;for(e=b;a[e]&&!(e>=f);)++e;if(16<e-b&&a.buffer&&sa)return sa.decode(a.subarray(b,e));for(f=\"\";b<e;){var g=a[b++];if(g&128){var k=a[b++]&63;if(192==(g&224))f+=String.fromCharCode((g&31)<<6|k);else{var l=a[b++]&63;g=224==(g&240)?(g&15)<<12|k<<6|l:(g&7)<<18|k<<12|l<<6|a[b++]&63;65536>g?f+=String.fromCharCode(g):(g-=65536,f+=String.fromCharCode(55296|g>>10,56320|g&1023))}}else f+=String.fromCharCode(g)}return f}function U(a,b){return(a>>>=0)?ta(M,a,b):\"\"}\r\nfunction V(a){for(var b=0,e=0;e<a.length;++e){var f=a.charCodeAt(e);127>=f?b++:2047>=f?b+=2:55296<=f&&57343>=f?(b+=4,++e):b+=3}return b}\r\nfunction ua(a,b,e,f){e>>>=0;if(!(0<f))return 0;var g=e;f=e+f-1;for(var k=0;k<a.length;++k){var l=a.charCodeAt(k);if(55296<=l&&57343>=l){var q=a.charCodeAt(++k);l=65536+((l&1023)<<10)|q&1023}if(127>=l){if(e>=f)break;b[e++>>>0]=l}else{if(2047>=l){if(e+1>=f)break;b[e++>>>0]=192|l>>6}else{if(65535>=l){if(e+2>=f)break;b[e++>>>0]=224|l>>12}else{if(e+3>=f)break;b[e++>>>0]=240|l>>18;b[e++>>>0]=128|l>>12&63}b[e++>>>0]=128|l>>6&63}b[e++>>>0]=128|l&63}}b[e>>>0]=0;return e-g}\r\nfunction va(a,b,e){return ua(a,M,b,e)}function W(a){return 0===a%4&&(0!==a%100||0===a%400)}var wa=[0,31,60,91,121,152,182,213,244,274,305,335],Aa=[0,31,59,90,120,151,181,212,243,273,304,334];function Ba(a){return(W(a.getFullYear())?wa:Aa)[a.getMonth()]+a.getDate()-1}function Ca(a){var b=V(a)+1,e=Da(b);e&&va(a,e,b);return e}var X={};\r\nfunction Ea(){if(!Y){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:w||\"./this.program\"},b;for(b in X)void 0===X[b]?delete a[b]:a[b]=X[b];var e=[];for(b in a)e.push(b+\"=\"+a[b]);Y=e}return Y}var Y,Fa=[null,[],[]];\r\nfunction Ga(){if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues)return e=>crypto.getRandomValues(e);if(A)try{var a=require(\"crypto\");if(a.randomFillSync)return e=>a.randomFillSync(e);var b=a.randomBytes;return e=>(e.set(b(e.byteLength)),e)}catch(e){}I(\"initRandomDevice\")}function Ha(a){return(Ha=Ga())(a)}var Ia=[31,29,31,30,31,30,31,31,30,31,30,31],Ja=[31,28,31,30,31,30,31,31,30,31,30,31];function Ka(a){var b=Array(V(a)+1);ua(a,b,0,b.length);return b}\r\nfunction La(a,b,e,f){function g(d,m,n){for(d=\"number\"==typeof d?d.toString():d||\"\";d.length<m;)d=n[0]+d;return d}function k(d,m){return g(d,m,\"0\")}function l(d,m){function n(xa){return 0>xa?-1:0<xa?1:0}var z;0===(z=n(d.getFullYear()-m.getFullYear()))&&0===(z=n(d.getMonth()-m.getMonth()))&&(z=n(d.getDate()-m.getDate()));return z}function q(d){switch(d.getDay()){case 0:return new Date(d.getFullYear()-1,11,29);case 1:return d;case 2:return new Date(d.getFullYear(),0,3);case 3:return new Date(d.getFullYear(),\r\n0,2);case 4:return new Date(d.getFullYear(),0,1);case 5:return new Date(d.getFullYear()-1,11,31);case 6:return new Date(d.getFullYear()-1,11,30)}}function v(d){var m=d.na;for(d=new Date((new Date(d.oa+1900,0,1)).getTime());0<m;){var n=d.getMonth(),z=(W(d.getFullYear())?Ia:Ja)[n];if(m>z-d.getDate())m-=z-d.getDate()+1,d.setDate(1),11>n?d.setMonth(n+1):(d.setMonth(0),d.setFullYear(d.getFullYear()+1));else{d.setDate(d.getDate()+m);break}}n=new Date(d.getFullYear()+1,0,4);m=q(new Date(d.getFullYear(),\r\n0,4));n=q(n);return 0>=l(m,d)?0>=l(n,d)?d.getFullYear()+1:d.getFullYear():d.getFullYear()-1}var u=N[f+40>>2>>>0];f={za:N[f>>2>>>0],ya:N[f+4>>2>>>0],pa:N[f+8>>2>>>0],sa:N[f+12>>2>>>0],qa:N[f+16>>2>>>0],oa:N[f+20>>2>>>0],ja:N[f+24>>2>>>0],na:N[f+28>>2>>>0],Ba:N[f+32>>2>>>0],xa:N[f+36>>2>>>0],Aa:u?U(u):\"\"};e=U(e);u={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\r\n\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var r in u)e=e.replace(new RegExp(r,\"g\"),u[r]);var ya=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),za=\"January February March April May June July August September October November December\".split(\" \");u={\"%a\":function(d){return ya[d.ja].substring(0,3)},\"%A\":function(d){return ya[d.ja]},\"%b\":function(d){return za[d.qa].substring(0,\r\n3)},\"%B\":function(d){return za[d.qa]},\"%C\":function(d){return k((d.oa+1900)/100|0,2)},\"%d\":function(d){return k(d.sa,2)},\"%e\":function(d){return g(d.sa,2,\" \")},\"%g\":function(d){return v(d).toString().substring(2)},\"%G\":function(d){return v(d)},\"%H\":function(d){return k(d.pa,2)},\"%I\":function(d){d=d.pa;0==d?d=12:12<d&&(d-=12);return k(d,2)},\"%j\":function(d){for(var m=0,n=0;n<=d.qa-1;m+=(W(d.oa+1900)?Ia:Ja)[n++]);return k(d.sa+m,3)},\"%m\":function(d){return k(d.qa+1,2)},\"%M\":function(d){return k(d.ya,\r\n2)},\"%n\":function(){return\"\\n\"},\"%p\":function(d){return 0<=d.pa&&12>d.pa?\"AM\":\"PM\"},\"%S\":function(d){return k(d.za,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(d){return d.ja||7},\"%U\":function(d){return k(Math.floor((d.na+7-d.ja)/7),2)},\"%V\":function(d){var m=Math.floor((d.na+7-(d.ja+6)%7)/7);2>=(d.ja+371-d.na-2)%7&&m++;if(m)53==m&&(n=(d.ja+371-d.na)%7,4==n||3==n&&W(d.oa)||(m=1));else{m=52;var n=(d.ja+7-d.na-1)%7;(4==n||5==n&&W(d.oa%400-1))&&m++}return k(m,2)},\"%w\":function(d){return d.ja},\"%W\":function(d){return k(Math.floor((d.na+\r\n7-(d.ja+6)%7)/7),2)},\"%y\":function(d){return(d.oa+1900).toString().substring(2)},\"%Y\":function(d){return d.oa+1900},\"%z\":function(d){d=d.xa;var m=0<=d;d=Math.abs(d)/60;return(m?\"+\":\"-\")+String(\"0000\"+(d/60*100+d%60)).slice(-4)},\"%Z\":function(d){return d.Aa},\"%%\":function(){return\"%\"}};e=e.replace(/%%/g,\"\\x00\\x00\");for(r in u)e.includes(r)&&(e=e.replace(new RegExp(r,\"g\"),u[r](f)));e=e.replace(/\\0\\0/g,\"%\");r=Ka(e);if(r.length>b)return 0;L.set(r,a>>>0);return r.length-1}\r\nvar Ma={a:function(a,b,e){(new pa(a)).ta(b,e);qa=a;ra++;throw qa;},l:function(){I(\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\")},f:function(){return 0},K:function(){},u:function(){},x:function(){},M:function(){return 0},I:function(){},D:function(){},H:function(){},j:function(){},w:function(){},s:function(){},J:function(){},t:function(){},k:function(){return!0},A:function(a,b){a=new Date(1E3*(O[a>>>2]+4294967296*N[a+4>>>2]));N[b>>\r\n2>>>0]=a.getUTCSeconds();N[b+4>>2>>>0]=a.getUTCMinutes();N[b+8>>2>>>0]=a.getUTCHours();N[b+12>>2>>>0]=a.getUTCDate();N[b+16>>2>>>0]=a.getUTCMonth();N[b+20>>2>>>0]=a.getUTCFullYear()-1900;N[b+24>>2>>>0]=a.getUTCDay();N[b+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},B:function(a,b){a=new Date(1E3*(O[a>>>2]+4294967296*N[a+4>>>2]));N[b>>2>>>0]=a.getSeconds();N[b+4>>2>>>0]=a.getMinutes();N[b+8>>2>>>0]=a.getHours();N[b+12>>2>>>0]=a.getDate();N[b+16>>2>>>0]=a.getMonth();N[b+\r\n20>>2>>>0]=a.getFullYear()-1900;N[b+24>>2>>>0]=a.getDay();N[b+28>>2>>>0]=Ba(a)|0;N[b+36>>2>>>0]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset(),f=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();N[b+32>>2>>>0]=(e!=f&&a.getTimezoneOffset()==Math.min(f,e))|0},C:function(a){var b=new Date(N[a+20>>2>>>0]+1900,N[a+16>>2>>>0],N[a+12>>2>>>0],N[a+8>>2>>>0],N[a+4>>2>>>0],N[a>>2>>>0],0),e=N[a+32>>2>>>0],f=b.getTimezoneOffset(),g=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),\r\nk=(new Date(b.getFullYear(),0,1)).getTimezoneOffset(),l=Math.min(k,g);0>e?N[a+32>>2>>>0]=Number(g!=k&&l==f):0<e!=(l==f)&&(g=Math.max(k,g),b.setTime(b.getTime()+6E4*((0<e?l:g)-f)));N[a+24>>2>>>0]=b.getDay();N[a+28>>2>>>0]=Ba(b)|0;N[a>>2>>>0]=b.getSeconds();N[a+4>>2>>>0]=b.getMinutes();N[a+8>>2>>>0]=b.getHours();N[a+12>>2>>>0]=b.getDate();N[a+16>>2>>>0]=b.getMonth();N[a+20>>2>>>0]=b.getYear();return b.getTime()/1E3|0},y:function(){return-52},z:function(){},q:function(a,b,e){function f(v){return(v=v.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?\r\nv[1]:\"GMT\"}var g=(new Date).getFullYear(),k=new Date(g,0,1),l=new Date(g,6,1);g=k.getTimezoneOffset();var q=l.getTimezoneOffset();O[a>>2>>>0]=60*Math.max(g,q);N[b>>2>>>0]=Number(g!=q);a=f(k);b=f(l);a=Ca(a);b=Ca(b);q<g?(O[e>>2>>>0]=a,O[e+4>>2>>>0]=b):(O[e>>2>>>0]=b,O[e+4>>2>>>0]=a)},d:function(){I(\"\")},G:function(){I(\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\")},g:function(){return Date.now()},r:function(){return 4294901760},b:A?\r\n()=>{var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:()=>performance.now(),L:function(a,b,e){M.copyWithin(a>>>0,b>>>0,b+e>>>0)},p:function(a){var b=M.length;a>>>=0;if(4294901760<a)return!1;for(var e=1;4>=e;e*=2){var f=b*(1+.2/e);f=Math.min(f,a+100663296);var g=Math,k=g.min;f=Math.max(a,f);f+=(65536-f%65536)%65536;a:{var l=J.buffer;try{J.grow(k.call(g,4294901760,f)-l.byteLength+65535>>>16);ca();var q=1;break a}catch(v){}q=void 0}if(q)return!0}return!1},E:function(a,b){var e=0;Ea().forEach(function(f,\r\ng){var k=b+e;g=O[a+4*g>>2>>>0]=k;for(k=0;k<f.length;++k)L[g++>>0>>>0]=f.charCodeAt(k);L[g>>0>>>0]=0;e+=f.length+1});return 0},F:function(a,b){var e=Ea();O[a>>2>>>0]=e.length;var f=0;e.forEach(function(g){f+=g.length+1});O[b>>2>>>0]=f;return 0},m:function(a){if(!noExitRuntime){if(c.onExit)c.onExit(a);K=!0}x(a,new oa(a))},e:function(){return 52},i:function(){return 52},n:function(){return 70},h:function(a,b,e,f){for(var g=0,k=0;k<e;k++){var l=O[b>>2>>>0],q=O[b+4>>2>>>0];b+=8;for(var v=0;v<q;v++){var u=\r\nM[l+v>>>0],r=Fa[a];0===u||10===u?((1===a?ba:G)(ta(r,0)),r.length=0):r.push(u)}g+=q}O[f>>2>>>0]=g;return 0},o:function(a,b){Ha(M.subarray(a>>>0,a+b>>>0));return 0},v:La,c:function(a,b,e,f){return La(a,b,e,f)}};\r\n(function(){function a(e){e=e.exports;c.asm=e;J=c.asm.N;ca();ea.unshift(c.asm.O);P--;c.monitorRunDependencies&&c.monitorRunDependencies(P);if(0==P&&(null!==Q&&(clearInterval(Q),Q=null),R)){var f=R;R=null;f()}return e}var b={a:Ma};P++;c.monitorRunDependencies&&c.monitorRunDependencies(P);if(c.instantiateWasm)try{return c.instantiateWasm(b,a)}catch(e){G(\"Module.instantiateWasm callback failed with error: \"+e),p(e)}na(b,function(e){a(e.instance)}).catch(p);return{}})();\r\nc._OrtInit=function(){return(c._OrtInit=c.asm.P).apply(null,arguments)};c._OrtGetLastError=function(){return(c._OrtGetLastError=c.asm.Q).apply(null,arguments)};c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.R).apply(null,arguments)};c._OrtAppendExecutionProvider=function(){return(c._OrtAppendExecutionProvider=c.asm.S).apply(null,arguments)};c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.T).apply(null,arguments)};\r\nc._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.U).apply(null,arguments)};c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.V).apply(null,arguments)};c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.W).apply(null,arguments)};c._OrtGetInputOutputCount=function(){return(c._OrtGetInputOutputCount=c.asm.X).apply(null,arguments)};c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.Y).apply(null,arguments)};\r\nc._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.Z).apply(null,arguments)};c._OrtFree=function(){return(c._OrtFree=c.asm._).apply(null,arguments)};c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.$).apply(null,arguments)};c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.aa).apply(null,arguments)};c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.ba).apply(null,arguments)};\r\nc._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.ca).apply(null,arguments)};c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.da).apply(null,arguments)};c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.ea).apply(null,arguments)};c._OrtRun=function(){return(c._OrtRun=c.asm.fa).apply(null,arguments)};c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.ga).apply(null,arguments)};\r\nvar Da=c._malloc=function(){return(Da=c._malloc=c.asm.ha).apply(null,arguments)};c._free=function(){return(c._free=c.asm.ia).apply(null,arguments)};function Na(){return(Na=c.asm.ka).apply(null,arguments)}function Oa(){return(Oa=c.asm.la).apply(null,arguments)}function Pa(){return(Pa=c.asm.ma).apply(null,arguments)}c.stackAlloc=Pa;c.stackSave=Na;c.stackRestore=Oa;c.UTF8ToString=U;c.stringToUTF8=va;c.lengthBytesUTF8=V;var Z;R=function Qa(){Z||Ra();Z||(R=Qa)};\r\nfunction Ra(){function a(){if(!Z&&(Z=!0,c.calledRun=!0,!K)){T(ea);h(c);if(c.onRuntimeInitialized)c.onRuntimeInitialized();if(c.postRun)for(\"function\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var b=c.postRun.shift();fa.unshift(b)}T(fa)}}if(!(0<P)){if(c.preRun)for(\"function\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ha();T(da);0<P||(c.setStatus?(c.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){c.setStatus(\"\")},1);a()},1)):a())}}\r\nif(c.preInit)for(\"function\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();Ra();\r\n\r\n\r\n  return ortWasm.ready\r\n}\r\n\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n  module.exports = ortWasm;\r\nelse if (typeof define === 'function' && define['amd'])\r\n  define([], function() { return ortWasm; });\r\nelse if (typeof exports === 'object')\r\n  exports[\"ortWasm\"] = ortWasm;\r\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveBackend = exports.registerBackend = void 0;\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @internal\n */\nconst registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.priority > priority) {\n            // same name is already registered with a higher priority. skip registeration.\n            return;\n        }\n        else if (currentBackend.priority === priority) {\n            if (currentBackend.backend !== backend) {\n                throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n            }\n        }\n        if (priority >= 0) {\n            const i = backendsSortedByPriority.indexOf(name);\n            if (i !== -1) {\n                backendsSortedByPriority.splice(i, 1);\n            }\n            for (let i = 0; i < backendsSortedByPriority.length; i++) {\n                if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                    backendsSortedByPriority.splice(i, 0, name);\n                    return;\n                }\n            }\n            backendsSortedByPriority.push(name);\n        }\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\nexports.registerBackend = registerBackend;\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @internal\n */\nconst resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            const isInitializing = !!backendInfo.initPromise;\n            try {\n                if (!isInitializing) {\n                    backendInfo.initPromise = backendInfo.backend.init();\n                }\n                await backendInfo.initPromise;\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                if (!isInitializing) {\n                    errors.push({ name: backendName, err: e });\n                }\n                backendInfo.aborted = true;\n            }\n            finally {\n                delete backendInfo.initPromise;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\nexports.resolveBackend = resolveBackend;\n//# sourceMappingURL=backend-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.registerBackend = void 0;\nvar backend_impl_js_1 = require(\"./backend-impl.js\");\nObject.defineProperty(exports, \"registerBackend\", { enumerable: true, get: function () { return backend_impl_js_1.registerBackend; } });\n//# sourceMappingURL=backend.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.env = void 0;\nconst version_js_1 = require(\"./version.js\");\nlet logLevelValue = 'warning';\nexports.env = {\n    wasm: {},\n    webgl: {},\n    webgpu: {},\n    versions: { common: version_js_1.version },\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        logLevelValue = value;\n    },\n    get logLevel() {\n        return logLevelValue;\n    },\n};\n// set property 'logLevel' so that they can be correctly transferred to worker by `postMessage()`.\nObject.defineProperty(exports.env, 'logLevel', { enumerable: true });\n//# sourceMappingURL=env-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.env = void 0;\nconst env_impl_js_1 = require(\"./env-impl.js\");\n/**\n * Represent a set of flags as a global singleton.\n */\nexports.env = env_impl_js_1.env;\n//# sourceMappingURL=env.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * # ONNX Runtime JavaScript API\n *\n * ONNX Runtime JavaScript API is a unified API for all JavaScript usages, including the following NPM packages:\n *\n * - [onnxruntime-node](https://www.npmjs.com/package/onnxruntime-node)\n * - [onnxruntime-web](https://www.npmjs.com/package/onnxruntime-web)\n * - [onnxruntime-react-native](https://www.npmjs.com/package/onnxruntime-react-native)\n *\n * See also:\n * - [Get Started](https://onnxruntime.ai/docs/get-started/with-javascript.html)\n * - [Inference examples](https://github.com/microsoft/onnxruntime-inference-examples/tree/main/js)\n *\n * @packageDocumentation\n */\n__exportStar(require(\"./backend.js\"), exports);\n__exportStar(require(\"./env.js\"), exports);\n__exportStar(require(\"./inference-session.js\"), exports);\n__exportStar(require(\"./tensor.js\"), exports);\n__exportStar(require(\"./onnx-value.js\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InferenceSession = void 0;\nconst backend_impl_js_1 = require(\"./backend-impl.js\");\nconst tensor_js_1 = require(\"./tensor.js\");\nclass InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof tensor_js_1.Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof tensor_js_1.Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof tensor_js_1.Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new tensor_js_1.Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    async release() {\n        return this.handler.dispose();\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await (0, backend_impl_js_1.resolveBackend)(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\nexports.InferenceSession = InferenceSession;\n//# sourceMappingURL=inference-session-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InferenceSession = void 0;\nconst inference_session_impl_js_1 = require(\"./inference-session-impl.js\");\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexports.InferenceSession = inference_session_impl_js_1.InferenceSession;\n//# sourceMappingURL=inference-session.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=onnx-value.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tensorToImageData = exports.tensorToDataURL = void 0;\n/**\n * implementation of Tensor.toDataURL()\n */\nconst tensorToDataURL = (tensor, options) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = tensor.dims[3];\n    canvas.height = tensor.dims[2];\n    const pixels2DContext = canvas.getContext('2d');\n    if (pixels2DContext != null) {\n        // Default values for height and width & format\n        let width;\n        let height;\n        if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n            width = tensor.dims[2];\n            height = tensor.dims[3];\n        }\n        else { // Default layout is NCWH\n            width = tensor.dims[3];\n            height = tensor.dims[2];\n        }\n        const inputformat = options?.format !== undefined ? options.format : 'RGB';\n        const norm = options?.norm;\n        let normMean;\n        let normBias;\n        if (norm === undefined || norm.mean === undefined) {\n            normMean = [255, 255, 255, 255];\n        }\n        else {\n            if (typeof (norm.mean) === 'number') {\n                normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n            }\n            else {\n                normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n                if (norm.mean[3] !== undefined) {\n                    normMean[3] = norm.mean[3];\n                }\n            }\n        }\n        if (norm === undefined || norm.bias === undefined) {\n            normBias = [0, 0, 0, 0];\n        }\n        else {\n            if (typeof (norm.bias) === 'number') {\n                normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n            }\n            else {\n                normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                if (norm.bias[3] !== undefined) {\n                    normBias[3] = norm.bias[3];\n                }\n            }\n        }\n        const stride = height * width;\n        // Default pointer assignments\n        let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n        // Updating the pointer assignments based on the input image format\n        if (inputformat === 'RGBA') {\n            rTensorPointer = 0;\n            gTensorPointer = stride;\n            bTensorPointer = stride * 2;\n            aTensorPointer = stride * 3;\n        }\n        else if (inputformat === 'RGB') {\n            rTensorPointer = 0;\n            gTensorPointer = stride;\n            bTensorPointer = stride * 2;\n        }\n        else if (inputformat === 'RBG') {\n            rTensorPointer = 0;\n            bTensorPointer = stride;\n            gTensorPointer = stride * 2;\n        }\n        for (let i = 0; i < height; i++) {\n            for (let j = 0; j < width; j++) {\n                const R = (tensor.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n                const G = (tensor.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n                const B = (tensor.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n                const A = aTensorPointer === -1 ?\n                    255 :\n                    (tensor.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n                // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n                pixels2DContext.fillRect(j, i, 1, 1);\n            }\n        }\n        return canvas.toDataURL();\n    }\n    else {\n        throw new Error('Can not access image data');\n    }\n};\nexports.tensorToDataURL = tensorToDataURL;\n/**\n * implementation of Tensor.toImageData()\n */\nconst tensorToImageData = (tensor, options) => {\n    const pixels2DContext = document.createElement('canvas').getContext('2d');\n    let image;\n    if (pixels2DContext != null) {\n        // Default values for height and width & format\n        let width;\n        let height;\n        let channels;\n        if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n            width = tensor.dims[2];\n            height = tensor.dims[1];\n            channels = tensor.dims[3];\n        }\n        else { // Default layout is NCWH\n            width = tensor.dims[3];\n            height = tensor.dims[2];\n            channels = tensor.dims[1];\n        }\n        const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n        const norm = options?.norm;\n        let normMean;\n        let normBias;\n        if (norm === undefined || norm.mean === undefined) {\n            normMean = [255, 255, 255, 255];\n        }\n        else {\n            if (typeof (norm.mean) === 'number') {\n                normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n            }\n            else {\n                normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n                if (norm.mean[3] !== undefined) {\n                    normMean[3] = norm.mean[3];\n                }\n            }\n        }\n        if (norm === undefined || norm.bias === undefined) {\n            normBias = [0, 0, 0, 0];\n        }\n        else {\n            if (typeof (norm.bias) === 'number') {\n                normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n            }\n            else {\n                normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                if (norm.bias[3] !== undefined) {\n                    normBias[3] = norm.bias[3];\n                }\n            }\n        }\n        const stride = height * width;\n        if (options !== undefined) {\n            if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n                (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n                throw new Error('Tensor format doesn\\'t match input tensor dims');\n            }\n        }\n        // Default pointer assignments\n        const step = 4;\n        let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n        let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n        // Updating the pointer assignments based on the input image format\n        if (inputformat === 'RGBA') {\n            rTensorPointer = 0;\n            gTensorPointer = stride;\n            bTensorPointer = stride * 2;\n            aTensorPointer = stride * 3;\n        }\n        else if (inputformat === 'RGB') {\n            rTensorPointer = 0;\n            gTensorPointer = stride;\n            bTensorPointer = stride * 2;\n        }\n        else if (inputformat === 'RBG') {\n            rTensorPointer = 0;\n            bTensorPointer = stride;\n            gTensorPointer = stride * 2;\n        }\n        image = pixels2DContext.createImageData(width, height);\n        for (let i = 0; i < height * width; rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n            image.data[rImagePointer] = (tensor.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n            image.data[gImagePointer] = (tensor.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n            image.data[bImagePointer] = (tensor.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n            image.data[aImagePointer] = aTensorPointer === -1 ?\n                255 :\n                (tensor.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n        }\n    }\n    else {\n        throw new Error('Can not access image data');\n    }\n    return image;\n};\nexports.tensorToImageData = tensorToImageData;\n//# sourceMappingURL=tensor-conversion-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tensorFromImage = exports.bufferToTensor = void 0;\nconst tensor_js_1 = require(\"./tensor.js\");\n/**\n * Create a new tensor object from image object\n *\n * @param buffer - Extracted image buffer data - assuming RGBA format\n * @param imageFormat - input image configuration - required configurations height, width, format\n * @param tensorFormat - output tensor configuration - Default is RGB format\n */\nconst bufferToTensor = (buffer, options) => {\n    if (buffer === undefined) {\n        throw new Error('Image buffer must be defined');\n    }\n    if (options.height === undefined || options.width === undefined) {\n        throw new Error('Image height and width must be defined');\n    }\n    if (options.tensorLayout === 'NHWC') {\n        throw new Error('NHWC Tensor layout is not supported yet');\n    }\n    const { height, width } = options;\n    const norm = options.norm ?? { mean: 255, bias: 0 };\n    let normMean;\n    let normBias;\n    if (typeof (norm.mean) === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n    }\n    else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], norm.mean[3] ?? 255];\n    }\n    if (typeof (norm.bias) === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n    }\n    else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], norm.bias[3] ?? 0];\n    }\n    const inputformat = options.format !== undefined ? options.format : 'RGBA';\n    // default value is RGBA since imagedata and HTMLImageElement uses it\n    const outputformat = options.tensorFormat !== undefined ?\n        (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') :\n        'RGB';\n    const stride = height * width;\n    const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n    // Default pointer assignments\n    let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n    let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGB') {\n        step = 3;\n        rImagePointer = 0;\n        gImagePointer = 1;\n        bImagePointer = 2;\n        aImagePointer = -1;\n    }\n    // Updating the pointer assignments based on the output tensor format\n    if (outputformat === 'RGBA') {\n        aTensorPointer = stride * 3;\n    }\n    else if (outputformat === 'RBG') {\n        rTensorPointer = 0;\n        bTensorPointer = stride;\n        gTensorPointer = stride * 2;\n    }\n    else if (outputformat === 'BGR') {\n        bTensorPointer = 0;\n        gTensorPointer = stride;\n        rTensorPointer = stride * 2;\n    }\n    for (let i = 0; i < stride; i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n        float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n        float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n        float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n        if (aTensorPointer !== -1 && aImagePointer !== -1) {\n            float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n        }\n    }\n    // Float32Array -> ort.Tensor\n    const outputTensor = outputformat === 'RGBA' ? new tensor_js_1.Tensor('float32', float32Data, [1, 4, height, width]) :\n        new tensor_js_1.Tensor('float32', float32Data, [1, 3, height, width]);\n    return outputTensor;\n};\nexports.bufferToTensor = bufferToTensor;\n/**\n * implementation of Tensor.fromImage().\n */\nconst tensorFromImage = async (image, options) => {\n    // checking the type of image object\n    const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n    const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n    const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n    const isString = typeof image === 'string';\n    let data;\n    let bufferToTensorOptions = options ?? {};\n    // filling and checking image configuration options\n    if (isHTMLImageEle) {\n        // HTMLImageElement - image object - format is RGBA by default\n        const canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const pixels2DContext = canvas.getContext('2d');\n        if (pixels2DContext != null) {\n            let height = image.height;\n            let width = image.width;\n            if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n                height = options.resizedHeight;\n                width = options.resizedWidth;\n            }\n            if (options !== undefined) {\n                bufferToTensorOptions = options;\n                if (options.tensorFormat !== undefined) {\n                    throw new Error('Image input config format must be RGBA for HTMLImageElement');\n                }\n                else {\n                    bufferToTensorOptions.tensorFormat = 'RGBA';\n                }\n                bufferToTensorOptions.height = height;\n                bufferToTensorOptions.width = width;\n            }\n            else {\n                bufferToTensorOptions.tensorFormat = 'RGBA';\n                bufferToTensorOptions.height = height;\n                bufferToTensorOptions.width = width;\n            }\n            pixels2DContext.drawImage(image, 0, 0);\n            data = pixels2DContext.getImageData(0, 0, width, height).data;\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n    }\n    else if (isImageDataEle) {\n        let height;\n        let width;\n        if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n            height = options.resizedHeight;\n            width = options.resizedWidth;\n        }\n        else {\n            height = image.height;\n            width = image.width;\n        }\n        if (options !== undefined) {\n            bufferToTensorOptions = options;\n        }\n        bufferToTensorOptions.format = 'RGBA';\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n        if (options !== undefined) {\n            const tempCanvas = document.createElement('canvas');\n            tempCanvas.width = width;\n            tempCanvas.height = height;\n            const pixels2DContext = tempCanvas.getContext('2d');\n            if (pixels2DContext != null) {\n                pixels2DContext.putImageData(image, 0, 0);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else {\n            data = image.data;\n        }\n    }\n    else if (isImageBitmap) {\n        // ImageBitmap - image object - format must be provided by user\n        if (options === undefined) {\n            throw new Error('Please provide image config with format for Imagebitmap');\n        }\n        const pixels2DContext = document.createElement('canvas').getContext('2d');\n        if (pixels2DContext != null) {\n            const height = image.height;\n            const width = image.width;\n            pixels2DContext.drawImage(image, 0, 0, width, height);\n            data = pixels2DContext.getImageData(0, 0, width, height).data;\n            bufferToTensorOptions.height = height;\n            bufferToTensorOptions.width = width;\n            return (0, exports.bufferToTensor)(data, bufferToTensorOptions);\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n    }\n    else if (isString) {\n        return new Promise((resolve, reject) => {\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            if (!image || !context) {\n                return reject();\n            }\n            const newImage = new Image();\n            newImage.crossOrigin = 'Anonymous';\n            newImage.src = image;\n            newImage.onload = () => {\n                canvas.width = newImage.width;\n                canvas.height = newImage.height;\n                context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n                const img = context.getImageData(0, 0, canvas.width, canvas.height);\n                bufferToTensorOptions.height = canvas.height;\n                bufferToTensorOptions.width = canvas.width;\n                resolve((0, exports.bufferToTensor)(img.data, bufferToTensorOptions));\n            };\n        });\n    }\n    else {\n        throw new Error('Input data provided is not supported - aborted tensor creation');\n    }\n    if (data !== undefined) {\n        return (0, exports.bufferToTensor)(data, bufferToTensorOptions);\n    }\n    else {\n        throw new Error('Input data provided is not supported - aborted tensor creation');\n    }\n};\nexports.tensorFromImage = tensorFromImage;\n//# sourceMappingURL=tensor-factory-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tensor = void 0;\nconst tensor_conversion_impl_js_1 = require(\"./tensor-conversion-impl.js\");\nconst tensor_factory_impl_js_1 = require(\"./tensor-factory-impl.js\");\nconst tensor_utils_impl_js_1 = require(\"./tensor-utils-impl.js\");\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['float16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\n// the following code allows delaying execution of BigInt checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt polyfill\n// if available.\nlet isBigIntChecked = false;\nconst checkBigInt = () => {\n    if (!isBigIntChecked) {\n        isBigIntChecked = true;\n        const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\n        const isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n        if (isBigInt64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n        }\n        if (isBigUint64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n        }\n    }\n};\nclass Tensor {\n    constructor(arg0, arg1, arg2) {\n        checkBigInt();\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    if (arg0 === 'float16') {\n                        // Throw error here because when user try to use number array as data,\n                        // e.g. new Tensor('float16', [1, 2, 3, 4], dims)), it will actually call\n                        // Uint16Array.from(arg1) which generates wrong data.\n                        throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                    }\n                    else {\n                        // use 'as any' here because TypeScript's check on type of 'SupportedTypedArrayConstructors.from()' produces\n                        // incorrect results.\n                        // 'typedArrayConstructor' should be one of the typed array prototype objects.\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        data = typedArrayConstructor.from(arg1);\n                    }\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = (0, tensor_utils_impl_js_1.calculateSize)(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    static async fromImage(image, options) {\n        return (0, tensor_factory_impl_js_1.tensorFromImage)(image, options);\n    }\n    // #endregion\n    // #region conversions\n    toDataURL(options) {\n        return (0, tensor_conversion_impl_js_1.tensorToDataURL)(this, options);\n    }\n    toImageData(options) {\n        return (0, tensor_conversion_impl_js_1.tensorToImageData)(this, options);\n    }\n    // #endregion\n    // #region tensor utilities\n    reshape(dims) {\n        return (0, tensor_utils_impl_js_1.tensorReshape)(this, dims);\n    }\n}\nexports.Tensor = Tensor;\n//# sourceMappingURL=tensor-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tensorReshape = exports.calculateSize = void 0;\nconst tensor_js_1 = require(\"./tensor.js\");\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexports.calculateSize = calculateSize;\n/**\n * implementation of Tensor.reshape()\n */\nconst tensorReshape = (tensor, dims) => new tensor_js_1.Tensor(tensor.type, tensor.data, dims);\nexports.tensorReshape = tensorReshape;\n//# sourceMappingURL=tensor-utils-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tensor = void 0;\nconst tensor_impl_js_1 = require(\"./tensor-impl.js\");\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexports.Tensor = tensor_impl_js_1.Tensor;\n//# sourceMappingURL=tensor.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = void 0;\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\nexports.version = '1.16.0-dev.20230704-d540c7da0f';\n//# sourceMappingURL=version.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(1057);\n"],"names":["root","factory","exports","module","define","amd","self","env","wasm","initTimeout","simd","proxy","numThreads","Number","isInteger","numCpuLogicalCores","navigator","cpus","length","hardwareConcurrency","Math","min","ceil","async","initializeWebAssemblyInstance","pathOrBuffer","options","handler","OnnxruntimeWebAssemblySessionHandler","loadModel","Promise","resolve","wasmBackend","registerBackend","versions","web","version","currentKernelId","commandEncoder","computePassEncoder","pendingDispatchNumber","profilingEnabled","currentKernelCustomData","this","Error","data","kernelCustomData","get","set","gpu","adapter","requestAdapter","deviceDescriptor","requiredLimits","maxComputeWorkgroupStorageSize","limits","maxComputeWorkgroupsPerDimension","maxStorageBufferBindingSize","features","has","webgpu","profilingMode","requiredFeatures","device","requestDevice","gpuDataManager","createGpuDataManager","programManager","ProgramManager","kernels","Map","kernelPersistentData","configureLogger","logLevel","debug","onuncapturederror","ev","error","GPUValidationError","console","message","profilingQuerySet","createQuerySet","type","count","dispose","getCommandEncoder","createCommandEncoder","getComputePassEncoder","beginComputePass","endComputePass","end","flush","queue","submit","finish","refreshPendingBuffers","run","program","inputs","outputIndices","createKernelOutput","createIntermediateOutput","inputTypes","inputDatas","i","gpuData","key","programInfo","inputTensorShapes","inputGpuDataTypes","inputTensorShapesToString","map","d","join","inputGpuDataTypesToString","name","cacheHint","getProgramInfoUniqueKey","dims","artifact","getArtifact","validatedOutputIndices","outputs","_","outputTensorViews","outputDatas","isTemporary","isPersistent","tensorView","dataType","temporaryData","push","persistentData","normalizedDispatchGroup","normalizeDispatchGroupSize","dispatchGroup","build","setArtifact","LOG_DEBUG","upload","gpuDataId","memcpy","src","dst","getTargetBuffer","arrayBuffer","download","Uint8Array","byteLength","alloc","size","create","id","free","ptr","release","createKernel","kernelId","attribute","op","WEBGPU_OP_RESOLVE_RULES","releaseKernel","delete","computeKernel","context","kernel","kernelEntry","attributes","undefined","e","TensorViewImpl","constructor","getFloat32Array","elementCount","ShapeUtil","Float32Array","HEAP8","buffer","getBigInt64Array","BigInt64Array","reshape","newDims","ComputeContextImpl","customData","backend","contextDataOffset","heapU32","HEAPU32","dataIndex","opKernelContext","inputCount","dim","compute","inputsOutputsMapping","mappedInputs","index","output","elementSize","getTensorElementSize","bufferSize","stack","stackSave","stackAlloc","offset","_JsepOutput","stackRestore","init","jsepInit","WebGpuBackend","initialize","isSourceGpu","HEAPU8","subarray","dataOffset","logLevelPrefix","configLogLevel","$configLogLevel","$debug","LOG","msg","messageLevel","logLevelStringToEnum","level","log","Date","toISOString","args","MatMulUtil","static","a","b","BroadcastUtil","adims","bdims","isMatMul","arank","brank","crank","max","cdims","Array","cShapeMatMul","calcMatMulShape","aLen","bLen","shape","finalShape","inputRank","finalRank","getSizeFromDimensionRange","axis","start","rank","strides","tensorRank","axes","x","normalizeAxis","perm","v","slice","reverse","pad","shape1","shape2","every","PoolConvUtil","isGlobalOperator","inputDims","kernelShape","dilations","pads","isChannelLast","autoPad","adjustPadAndReturnShape","outputDims","computeShapeHelper","filterDims","inSize","stride","dilation","padHeadIndex","padTailIndex","dkernel","floor","padNeeded","leftShape","transLeft","rightShape","transRight","biasShape","M","K","N","kDim","isValidBroadcast","MIN_CLIP","MAX_CLIP","AttributeWithCacheKeyImpl","Object","assign","cacheKey","_cacheKey","getOwnPropertyNames","sort","createAttributeWithCacheKey","calcNormalizedBufferSize","guid","GpuDataManagerImpl","storageCache","downloadCache","buffersForUploadingPending","buffersPending","srcArrayBuffer","srcOffset","byteOffset","srcLength","gpuDataCache","originalSize","gpuBufferForUploading","createBuffer","mappedAtCreation","usage","GPUBufferUsage","MAP_WRITE","COPY_SRC","getMappedRange","unmap","copyBufferToBuffer","sourceId","destinationId","sourceGpuDataCache","destinationGpuDataCache","STORAGE","COPY_DST","gpuBuffer","GpuDataType","default","cachedData","downloadData","gpuReadBuffer","MAP_READ","readDataPromise","mapAsync","GPUMapMode","READ","then","destroy","unaryOps","abs","acos","acosh","binaryOps","add","asin","asinh","atan","atanh","pool","averagePool","parseAveragePoolAttributes","clipV10","clip","conv","parseConvAttributes","cos","cosh","div","elu","parseAlphaAttributes","erf","exp","gemm","parseGemmAttributes","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","parseGlobalMaxPoolAttributes","leakyRelu","matMul","maxPool","parseMaxPoolAttributes","mul","neg","pow","reciprocal","reduceMin","parseReduceAttributes","reduceMean","reduceMax","reduceSum","reduceProd","reduceL1","reduceL2","reduceLogSum","reduceLogSumExp","reduceSumSquare","relu","sigmoid","sin","sinh","sqrt","sub","tan","tanh","thresholdedRelu","transpose","parseTransposeAttributes","typeSnippet","component","activationFnSnippet","activation","_hasPreluActivationWeights","_packed","_coordsLength","biasActivationSnippet","hasBias","createConv2DMatMulProgramInfo","metadata","outputShape","dimAOuter","dimBOuter","dimInner","sequentialAccessByThreads","isChannelsLast","format","inChannels","batchSize","outWidth","outHeight","outChannels","isVec4","dispatchX","dispatchY","workGroupSize","elementsPerThread","dispatch","innerElementSize","tileAOuter","tileBOuter","tileInner","fitAOuter","fitBOuter","fitInner","elementsSize","declareInputs","declareFunctions","gpuDataType","y","z","getShaderSource","utilFunctions","computeStrides","addBias","hasPreluActivationWeights","innerElementSizeX","innerElementSizeW","coordASnippet","coordResSnippet","xHeight","xWidth","row","col","readXSnippet","getXSnippet","sampleX","sampleW","getWSnippet","resType","aType","bType","conv2dCommonSnippet","makeMatMulPackedVec4Source","makeMatMulPackedSource","workPerThread","workgroupSize","transposeA","splitK","splitedDimInner","isVectorA","tileAWidth","tileAHight","rowPerThreadB","calculateResultSnippet","writeDataToSubASnippet","rowPerThreadA","colPerThreadA","matmulSnippet","readDataFromSubASnippet","createBinaryOpProgramInfoLoader","funcCall","additionalImplementation","outputDataType","isBroadcast","areEqual","outputSize","vectorize","calculatedShape","calcShape","sharedDimension","dimA","shaderHelper","dimsA","dimsB","dimsOutput","doBroadcast","typeA","typeB","typeOutput","vecSize","expressionScalar","expressionVector","scalar","vector","broadcastImpl","outputIndicesHelper","createIndicesHelper","calcOffsetImpl","offsets","idx","o2iImpl","iType","assignment","indicesVariableDeclaration","o2iCall","singleAssignment","expressionA","expressionB","mainStart","guardAgainstOutOfBoundsWorkgroupSizes","createBinaryOpProgramShader","createBinaryOpProgramInfo","WORKGROUP_SIZE","o2iSnippet","varOffset","varIndices","i2oImpl","i2oExpression","isPtr","ShaderHelperImpl","workgroupSizeX","workgroupSizeY","workgroupSizeZ","is1DimensionDispatch","createShaderHelper","createGroupedConvProgramInfoLoader","squeezeOutputShapeFunction","processBias","xShape","wShape","outputChannelsPerGroup","group","activationFunction","applyActivation","getActicationSnippet","inputStorageBuffersDeclarations","calculateOutputShape","xIndicesHelper","wIndicesHelper","createGroupedConvProgramInfo","inputShape","adjustPads","inputSpatialShape","spatialRank","dilatedKernelShape","splice","weightTransposeAttribute","getAdjustedConvAttributes","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","auto_pad","kernel_shape","wIsConst","w_is_const","validateInputs","concat","adjustedAttributes","conv1d","inputHeight","inputWidth","inputChannels","weightHeight","weightWidth","transposedWeight","wT","transposeProgramMetadata","createTransposeProgramInfo","convInputs","createConv2DMatMulProgramInfoLoader","conv2d","createConv2DMatMulProgramMetadata","clipMin","clipMax","activation_params","activationCacheKey","aShape","bShape","GemmUtil","getShapeOfGemmResult","transA","transB","line","calculateAlpha","alpha","calculateC","m","n","broadcastM","broadcastN","offsetC","beta","createGemmProgramInfo","createGemmProgramInfoLoader","createMatmulProgramInfoLoader","createMatmulProgramInfo","getAdjustedPoolAttributesAndOutputShape","inputShapeAsChannelFirst","hasDilations","hasOwnProperty","call","adjustPoolAttributes","outputShapeAsChannelFirst","computePoolOutputShape","generatePoolingCode","op1","op2","kw","sw","pwStart","dimIdxW","codeW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimIdxH","dimH","kernelSize","kernelStrides","stridesRank","padsRank","padCode","reduce","sum","cur","parsePoolCommonAttributes","ceilMode","ceil_mode","createAveragePoolProgramInfo","countIncludePad","count_include_pad","attr","globalPoolAttributes","storageOrder","createMaxPoolProgramInfo","storage_order","noOp","createReduceProgramInfoLoader","reduceOp","updatedAttributes","forEach","keepDims","noopWithEmptyAxes","createReduceAttributesFromInputs","idxCopy","normalizeAxes","outputDimsLength","ops","inputIndicesHelper","initInputIdx","reduceOps","reduceOnAllAxes","k","indexOf","createReduceProgramInfo","idxZero","getAdjustedPerm","keys","input","permAttr","sortBasedOnPerm","getOutputShape","reverseFunc","permFunctionBody","createElementwiseProgramInfoLoader","datasize","expression","createElementwiseProgramShader","inputTensors","createElementwiseProgramInfo","generateClipAttributesFromInputs","repo","attributesBound","buildArtifact","writeTimestamp","setPipeline","computePipeline","entries","binding","resource","bindGroup","createBindGroup","layout","getBindGroupLayout","setBindGroup","dispatchWorkgroups","queryData","QUERY_RESOLVE","syncData","resolveQuerySet","kernelName","mappedData","BigUint64Array","startTimeU64","endTimeU64","profilingTimeBase","startTime","endTime","isSafeInteger","RangeError","normalizedDispatchGroupSize","code","shaderModule","createShaderModule","createComputePipeline","entryPoint","limitPerDimension","dispatchAverage","cbrt","isProxy","document","proxyWorker","initWasmCallbacks","initOrtCallbacks","initializing","initialized","aborted","createSessionAllocateCallbacks","createSessionFinalizeCallbacks","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","err","shift","out","scriptSrc","currentScript","wasmPaths","substr","lastIndexOf","reject","terminate","onmessage","in","postMessage","initializeWebAssembly","initializeRuntime","core","initRuntime","createSessionAllocate","model","createSessionFinalize","modeldata","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","endProfiling","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","tag","allocWasmString","_OrtCreateRunOptions","checkLastError","extra","iterateExtraOptions","WeakSet","value","keyDataOffset","valueDataOffset","_OrtAddRunConfigEntry","_OrtReleaseRunOptions","_free","runtimeInitialized","path","response","fetch","process","node","promisify","readFile","inputNames","outputNames","modelData","feeds","fetches","inputArray","kvp","tensor","t","result","Tensor","startProfiling","setSessionOptions","sessionOptionsHandle","sessionOptions","session","use_ort_model_bytes_directly","executionProviders","some","ep","enableMemPattern","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","executionMode","getExecutionMode","logIdDataOffset","logId","optimizedModelFilePathOffset","optimizedModelFilePath","_OrtCreateSessionOptions","enableCpuMemArena","enableProfiling","epName","webnnOptions","deviceType","_OrtAddSessionConfigEntry","powerPreference","epNameDataOffset","_OrtAppendExecutionProvider","setExecutionProviders","_OrtReleaseSessionOptions","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","typeProto","dateType","tensorTypeToTypedArrayConstructor","Uint16Array","Int8Array","Int16Array","Int32Array","Float64Array","Uint32Array","loggingLevel","_OrtInit","activeSessions","modelDataOffset","_malloc","sessionHandle","inputNamesUTF8Encoded","outputNamesUTF8Encoded","_OrtCreateSession","outputCount","_OrtGetInputOutputCount","HEAP32","getSessionInputOutputCount","_OrtGetInputName","UTF8ToString","_OrtGetOutputName","buf","_OrtFree","_OrtReleaseSession","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","isArray","TypeError","dimsOffset","dimIndex","_OrtCreateTensor","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","errorCode","_OrtRun","runPromise","jsepRunPromise","beforeGetTensorDataStack","tensorDataOffset","_OrtGetTensorData","tensorDataIndex","dimsLength","stringData","maxBytesToRead","_OrtReleaseTensor","p","profileFileName","_OrtEndProfiling","tensors","buffers","ortWasmFactory","ortWasmFactoryThreaded","flags","timeout","useThreads","SharedArrayBuffer","MessageChannel","port1","WebAssembly","validate","isMultiThreadSupported","useSimd","isSimdSupported","wasmPrefixOverride","wasmFileName","getWasmFileName","wasmPathOverride","isTimeout","tasks","setTimeout","config","locateFile","fileName","scriptDirectory","endsWith","Blob","URL","createObjectURL","mainScriptUrlOrBlob","__dirname","scriptSourceCode","toString","what","race","PThread","terminateAllThreads","dataLength","lengthBytesUTF8","stringToUTF8","prefix","seen","paramsOffset","_OrtGetLastError","errorMessagePointer","errorMessage","Worker_fn","content","workerConstructor","workerOptions","url","globalScope","window","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","worker","revokeObjectURL","encodeURIComponent","_scriptDir","__filename","D","C","P","F","r","H","o","Y","u","s","ready","f","c","l","h","g","importScripts","ENVIRONMENT_IS_PTHREAD","w","O","dirname","startsWith","normalize","readFileSync","thisProgram","argv","replace","exitCode","inspect","global","Worker","location","href","XMLHttpRequest","open","send","responseText","responseType","onload","status","onerror","performance","T","bind","warn","writeSync","S","A","print","R","printErr","quit","wasmBinary","E","noExitRuntime","Z","I","U","HEAP16","HEAPU16","HEAPF32","HEAPF64","W","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","L","j","G","B","q","preRun","unshift","J","V","X","onAbort","RuntimeError","Q","$","ee","credentials","ok","catch","instantiate","ne","te","re","le","Ha","hb","ae","bb","Ka","Ja","cmd","start_routine","ib","arg","$a","pthread_ptr","unref","ob","oe","TextDecoder","ie","decode","String","fromCharCode","ue","se","ze","jb","onExit","fe","me","ce","Na","Va","Ra","cb","rb","receiveObjectTransfer","gb","threadInitTLS","Ua","setExitStatus","Ta","tb","dn","fb","ab","targetThread","cn","sb","transferList","He","thread","loaded","threadId","text","alert","target","filename","lineno","on","handlers","urlOrBlob","wasmModule","eb","Za","pop","pe","establishStackSpace","bn","wn","de","he","Qa","Ya","Xa","Wa","ge","ye","qb","be","ve","we","charCodeAt","_e","Oe","Te","Me","Se","Ae","Re","Ee","De","Ie","xe","Ce","Fe","ke","Atomics","pb","store","yn","gn","Ye","Ue","invokeEntryPoint","__emscripten_thread_mailbox_await","checkMailbox","Pe","We","Le","Ne","getFullYear","getMonth","getDate","je","Ge","Be","ln","arguments","vn","_n","mn","hrtime","timeOrigin","now","qe","Je","Ke","Ve","USER","LOGNAME","PATH","PWD","HOME","LANG","languages","Xe","Ze","Qe","$e","en","nn","tn","rn","crypto","getRandomValues","randomFillSync","randomBytes","an","un","getDay","La","Ma","getTime","setDate","setMonth","setFullYear","mb","lb","Oa","Sa","Pa","Ia","ub","kb","nb","RegExp","split","substring","includes","sn","fn","pn","ref","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","getSeconds","getMinutes","getHours","getTimezoneOffset","setTime","getYear","toTimeString","match","apply","grow","asm","va","wa","monitorRunDependencies","clearInterval","instantiateWasm","instantiateStreaming","instance","aa","ba","ca","da","ea","fa","ga","ha","ia","ja","ka","la","ma","na","oa","pa","qa","ra","_pthread_self","sa","ta","ua","__emscripten_tls_init","__emscripten_thread_init","xa","za","Aa","__emscripten_thread_crashed","ya","hn","__emscripten_thread_exit","Ba","__emscripten_check_mailbox","Ca","Da","Ea","Fa","Ga","On","calledRun","onRuntimeInitialized","postRun","startWorker","setStatus","keepRuntimeAlive","ExitStatus","preInit","ortWasm","fs","copyWithin","defineProperty","resolveBackend","backends","backendsSortedByPriority","priority","createSessionHandler","currentBackend","backendHints","backendNames","errors","backendName","backendInfo","isInitializing","initPromise","backend_impl_js_1","enumerable","version_js_1","logLevelValue","webgl","common","env_impl_js_1","__createBinding","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__exportStar","prototype","InferenceSession","tensor_js_1","arg1","arg2","isFetchesEmpty","isFetches","arg1Keys","results","returnValue","arg0","arg3","filePathOrUint8Array","ArrayBuffer","inference_session_impl_js_1","tensorToImageData","tensorToDataURL","canvas","createElement","width","height","pixels2DContext","getContext","tensorLayout","inputformat","norm","normMean","normBias","mean","bias","rTensorPointer","gTensorPointer","bTensorPointer","aTensorPointer","fillStyle","fillRect","toDataURL","image","channels","step","rImagePointer","gImagePointer","bImagePointer","aImagePointer","createImageData","tensorFromImage","bufferToTensor","outputformat","tensorFormat","float32Data","isHTMLImageEle","HTMLImageElement","isImageDataEle","ImageData","isImageBitmap","ImageBitmap","isString","bufferToTensorOptions","resizedHeight","resizedWidth","drawImage","getImageData","newImage","Image","crossOrigin","img","tempCanvas","putImageData","tensor_conversion_impl_js_1","tensor_factory_impl_js_1","tensor_utils_impl_js_1","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","isBigIntChecked","isBigInt64ArrayAvailable","from","isBigUint64ArrayAvailable","checkBigInt","typedArrayConstructor","firstElementType","mappedType","calculateSize","toImageData","tensorReshape","tensor_impl_js_1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","obj","prop"],"sourceRoot":""}